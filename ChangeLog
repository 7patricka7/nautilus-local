2000-05-11  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	fixed bug #600, command buttons don't handle file names with spaces,
	by quoting the file name.  There's still a weakness for file names
	containing single quotes, but we can address that later.
	
2000-05-11  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-index-tabs.c:
	fixed bug #858, index tabs pre-darken, instead of prelighten, by
	making the lighten and switching to black text so the labels are
	still readable.
	Also, made it choose light or dark text on the fly when the tab
	color is changed, so the labels are always readable
	
	* components/services/trilobite/sample/nautilus-view/Makefile.am:
	removed the icons subdir, since it had nothing in it and it was
	breaking the build
	
2000-05-11  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.h,
	* src/file-manager/fm-directory-view.c: (compute_menu_item_info),
	(fm_directory_view_real_create_selection_context_menu_items),
	(insert_bonobo_menu_item), (fm_directory_view_real_merge_menus),
	(fm_directory_view_real_update_menus),
	(fm_directory_view_get_context_menu_index): Some more menu code
	cleanup. Renamed FM_DIRECTORY_VIEW_MENU_PATH_SET_PROPERTIES
	to _SHOW_PROPERTIES to match menu text; made new function
	insert_bonobo_menu_item that calls compute_menu_item_info
	to get name & sensitivity so that _real_merge_menus
	doesn't have a separate and potentially diverging copy of
	menu item names.

2000-05-11  John Sullivan  <sullivan@eazel.com>

	Some cleanup in directory view menu-handling code.

	* src/file-manager/fm-directory-view.h,
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class),
	(fm_directory_view_real_create_background_context_menu_items),
	(fm_directory_view_real_create_selection_context_menu_items),
	(create_selection_context_menu),
	(fm_directory_view_create_background_context_menu_items),
	(create_background_context_menu): Renamed context-menu functions
	and signals from using "append_" to using "create_" since they
	don't necessarily append.
	
	* src/file-manager/fm-icon-view.c: (insert_one_context_menu_item),
	(append_one_context_menu_item): Made append_ call insert_ with
	-1 for the position to eliminate duplicated code.
	(fm_icon_view_create_selection_context_menu_items): Removed code
	that passed a different position depending on whether or not
	the Duplicate item was present. This subclass can assume that it
	will always be present (or we'll rewrite the code here if we
	change that assumption).
	(fm_icon_view_create_background_context_menu_items),
	(fm_icon_view_merge_menus), (fm_icon_view_initialize_class):
	Renamed functions and signals to use create_ as above.
	
	* src/file-manager/fm-list-view.c: 
	(fm_list_view_append_background_context_menu_items),
	(fm_list_view_append_selection_context_menu_items),
	(fm_list_view_merge_menus), (fm_list_view_update_menus),
	(fm_list_view_compute_menu_item_info),
	(append_one_context_menu_item),	(insert_one_context_menu_item),
	(rename_list_item_callback): Removed these functions, which were
	all used only for Rename (which we won't have in 1.0) and
	Undo (which the list view never interacts with).
	(fm_list_view_initialize_class): Removed function overrides.

2000-05-11  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-icon-view.c: (fm_icon_view_merge_menus):
	Moved the Layout menu to between Settings and Help.

2000-05-11  Gene Z. Ragan  <gzr@eazel.com>

	* helper-utilities/authenticate/Makefile.am:
	* nautilus-widgets/Makefile.am:
	* libnautilus-extensions/Makefile.am:
	* libnautilus/Makefile.am:
	Change makefiles to link against libnautilus.  This is so calls
	to the undo manager code resolve.  There is probably a better way to
	do this.
	
	* libnautilus-extensions/nautilus-entry.c:
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-text-item.c:
	* src/nautilus-bookmarks-window.c:
	* src/nautilus-location-bar.c:
	* src/nautilus-window-menus.c:
	* src/ntl-app.c:
	Changed to #include <libnautilus-extensions/nautilus-undo-manager.h>
	to #include <libnautilus/nautilus-undo-manager.h>

2000-05-10  Gene Z. Ragan  <gzr@eazel.com>

	*libnautilus/nautilus-undo-manager-component.idl
	*libnautilus/nautilus-undo-manager-private.h
	*libnautilus/nautilus-undo-manager.c
	*libnautilus/nautilus-undo-manager.h
	*libnautilus/nautilus-undo-transaction.c
	*libnautilus/nautilus-undo-transaction.h
	*libnautilus/nautilus-undoable.c
	*libnautilus/nautilus-undoable.h

	Moved files to libnautilus so IDL compilation would work properly
	and at the suggestion of mjs.

	*libnautilus-extensions/Makefile.am
	Removed undo files.

	*libnautilus/Makefile.am
	Added undo files.

	*libnautilus/nautilus-undo-manager-component.idl
	Additional fixes so a clean build would occuer properly.
	
2000-05-10  J Shane Culpepper  <pepper@eazel.com>

	*libnautilus-extensions/nautilus-undo-manger-component.idl

	Moved the includes to top of the file so that the idl would compile
	correctly.

2000-05-10  Pavel Cisler  <pavel@eazel.com>

	* src/ntl-app.c:
	* src/ntl-app.h:
	(nautilus_app_destroy_window), (nautilus_app_real_quit),
	(nautilus_app_quit)
	Work in progress on fixing Nautilus deadlocking when quitting while
	async file operations are in progress. Made it so that Nautilus
	waits for gnome VFS threads to complete before it quits and takes
	down the idle task. This only fixes part of the problem, Nautilus
	still deadlocks on gnome vfs jobs that get cancelled right after
	they were started.
	
2000-05-10  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undo-manager-component.idl:
	Added IDL entries to access undo manager functions.
	
	* libnautilus/nautilus-view-component.idl:
	Added Nautilus::UndoManager instance to Nautilus::Application
	
	* libnautilus/nautilus-view-frame.c:
	* libnautilus/nautilus-view-frame.h:
	(nautilus_view_frame_get_main_window):
	New function that returns Nautilus::ViewWindow instance
	held by Nautilus::ViewFrame.  Calls CORBA C utility function.

	* src/ntl-app.c: 
	(impl_Nautilus_Application__get_undo_manager):
	New function to return Nautilus::Application global 
	instance of Nautilus::UndoManager.
	
2000-05-10  John Sullivan  <sullivan@eazel.com>

	* libnautilus/nautilus-bonobo-ui.h: Added #define for path of
	Nautilus's toolbar so components can use Bonobo merging without
	secret inside information.
	* components/sample/nautilus-sample-content-view.c:
	(sample_merge_bonobo_items_callback): Replaced secret inside
	information about menu & toolbar paths & positions with use of
	#defines in nautilus-bonobo-ui.h.

2000-05-10  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c: (nautilus_file_rename):
	(nautilus_file_set_permissions): Changed to do both rename and set
	permissions with an interface that will work for async. Also
	improved the handling of deleted files, empty-string names, and
	files you can't change permissions on: they are considering
	runtime errors instead of coding mistakes now. Also send out
	file_changed even if the call fails.
	
	* src/file-manager/fm-error-reporting.h:
	* src/file-manager/fm-error-reporting.c: (show_error_message_box),
	(fm_report_error_renaming_file),
	(fm_report_error_setting_permissions): Simplified interface to
	these calls. Now we don't require the caller to pass anything we
	can compute ourselves and you can call these with GNOME_VFS_OK
	and they will do nothing. Also merged common code to put up the
	error message box into a helper function.
	
	* src/file-manager/fm-icon-view.c: (rename_callback),
	(fm_icon_view_icon_text_changed_callback):
	* src/file-manager/fm-properties-window.c: (rename_callback),
	(name_field_done_editing), (permission_change_callback),
	(permissions_check_button_toggled):
	Updated callers to use the new calls.

2000-05-10  Darin Adler  <darin@eazel.com>

	* fm-icon-view.c: (update_layout_menus), (sort_callback),
	(manual_layout_callback), (fm_icon_view_merge_menus),
	(update_one_menu_item), (fm_icon_view_update_menus),
	(icon_container_compare_icons_callback), (get_icon_text_callback),
	(text_attribute_names_changed_callback),
	(fm_icon_view_initialize_class), (fm_icon_view_initialize): Added
	a Layout menu with a separate item for Manual Layout and for each
	kind of auto-layout sort.

	* libnautilus-extensions/nautilus-icon-container.c:
	(idle_handler): Reinstated the call to relayout. It broke looking
	at a sorted folder the first time.

	Tons of gratuitous whitespace reformatting. I'm so sorry, but
	I was listening to a talk by rms.

2000-05-10  John Sullivan  <sullivan@eazel.com>

	Fixed bug 853 (assert and weird window behavior in Properties)

	* src/file-manager/fm-properties-window.c:
	(remove_default_viewport_shadow): New function, sets the viewport
	shadow to the no-shadow style.
	(create_emblems_page): Call remove_default_viewport_shadow
	at "realize" signal time, since Gtk bug causes trouble if
	it's called before realizing.

2000-05-10  Darin Adler  <darin@eazel.com>

	* components/services/trilobite/src/.cvsignore:
	Ignore the generated files in this new directory.
	
	* libnautilus-extensions/nautilus-gnome-extensions.h:
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	(convert_varargs_to_name_array), (nautilus_simple_dialog):
	Moved simple-dialog function from dfos. It just calls
	gnome_dialog with the right options.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	Added another marshal function.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-private.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(reload_icon_positions), (nautilus_icon_container_move_icon),
	(nautilus_icon_container_initialize_class),
	(nautilus_icon_container_add),
	(nautilus_icon_container_request_update_all),
	(nautilus_icon_container_set_auto_layout),
	(nautilus_icon_container_freeze_icon_positions),
	(nautilus_icon_container_sort),
	(nautilus_icon_container_start_renaming_selected_item):
	Reorganized signals. Added NautilusIconPosition to simplify
	the interface for signals that deal with icon position. Removed the
	now-unused icon_text_edit_occurred signal. Added the layout_changed
	signal. Added nautilus_icon_container_sort function. Moved some code
	out of the "omit self check" conditional.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(confirm_switch_to_manual_layout), (handle_local_move): Added code
	that switches to manual layout if you move an icon within the window
	and it's on auto layout.
	
	* src/file-manager/dfos-xfer.h:
	* src/file-manager/dfos-xfer.c: (handle_xfer_vfs_error),
	(handle_xfer_overwrite), (dfos_xfer): Switch code to use the new
	nautilus_simple_dialog instead of file_operation_alert, which I
	removed from here.
	
	* src/file-manager/fm-icon-view.c:
	(get_stored_icon_position_callback), (update_layout_menus),
	(fm_icon_view_begin_loading), (auto_layout_callback),
	(manual_layout_callback), (layout_changed_callback),
	(fm_icon_view_merge_menus), (icon_position_changed_callback),
	(create_icon_container):
	Added workaround for Bonobo bug where it calls the radio menu item
	callback that was making it always use auto layout. Converted to use
	the updated signal parameters. Added a signal handler to update the
	layout menu to match the layout when the layout is changed elsewhere.

2000-05-10  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-properties-window.c: (create_emblems_page):
	Commented out shadow-setting line that causes asserts and
	strange window behavior for some people's builds (but not mine
	when I checked this in). Will fix later.

2000-05-09  Andy Hertzfeld <andy@eazel.com>
	
	* src/nautilus-window-toolbar.c:
	restored standard Gnome toolbar icons, for now, while we figure
	out how to make Susan's optional in some fashion
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	added Susan's toolbar icons; she still needs to do reload and stop
	
	* icons/home.png
	* icons/leftarrow.png
	* icons/rightarrow.png
	* icons/uparrow.png
	* icons/Makefile.am:
	Susan's new toolbar icons, except for uparrow, which was modified
	* src/nautilus-window-toolbar.c:
	used Susan's new toolbar icons
	
2000-05-09  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/eazel-install-metadata.c
	* components/services/install/command-line/eazel-install-metadata.h
	* components/services/install/command-line/eazel-install-protocols.h
	* components/services/install/command-line/eazel-install-protocols.c
	* components/services/install/command-line/eazel-install-rpm-glue.c
	* components/services/install/command-line/eazel-install-rpm-glue.h
	* components/services/install/command-line/eazel-install-tests.h
	* components/services/install/command-line/eazel-install-tests.c
	* components/services/install/command-line/eazel-install-types.h
	* components/services/install/command-line/eazel-install-utils.h
	* components/services/install/command-line/eazel-install-utils.c
	* components/services/install/command-line/eazel-install-xml-package-list.c
	* components/services/install/command-line/eazel-install-xml-package-list.h
	* components/services/install/command-line/helixcode-install-utils.c
	* components/services/install/command-line/helixcode-install-utils.h
	* components/services/startup/nautilus-view/eazel-register.h
	* components/services/startup/nautilus-view/eazel-register.c

	Merged all of the listed files into:
	components/services/trilobite/lib to create a shared library of common
	service functions.  These functions still need to made much more
	generic in order to use them for common tasks.

2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	taught the icon factory to look in the user's home directory
	for user-defined emblem images
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	added gnome warning messages when the user chooses non-image files
	for backgrounds or emblems.
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	made the add and remove buttons in the content browser not
	show up for novice-level users
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	defined new preference for CAN_ADD_CONTENT
	* libnautilus-extensions/nautilus-global-preferences.c:
	turned CAN_ADD_CONTENT off for novices, on for other levels
	* src/nautilus-property-browser.c:
	respect CAN_ADD_CONTENT when deciding to show the buttons
	
2000-05-09  John Sullivan  <sullivan@eazel.com>

	fixed bug 843 (Emblem checkboxes in Properties window
	don't react to external emblem changes)

	* src/file-manager/fm-properties-window.c: 
	(create_emblems_page): Added file-changed signal
	handler so checkboxes react to external emblem changes.
	Also changed page to use a GtkTable rather than four 
	nested boxes; this keeps all the cells the same size 
	despite differing image sizes.

2000-05-09  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(nautilus_directory_call_when_ready_internal),
	(nautilus_directory_cancel_callback_internal),
	(directory_count_callback), (nautilus_async_destroying_file),
	(start_getting_directory_counts), (top_left_read_done),
	(start_getting_top_lefts):
	Eliminated code that ref's files when they are the target of the
	call_when_ready list or the current file being read for top left
	text or the current directory being counted. Instead, cancel the
	I/O when the file is destroyed (we already had the hook).
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(lacks_top_left):
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_contains_text), (nautilus_file_get_top_left_text):
	Change top left text reading to only read text files and other
	regular files with unknown type.
	
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_marshal_NONE__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER):
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	Needed a new marshal function.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(resort_and_clear), (auto_position_icon), (relayout):
	Changed around to share more code.
	(reload_icon_positions): Call to reload icon positions when you
	switch from auto to manual layout.
	(idle_handler): Get rid of relayout on idle.
	(nautilus_icon_container_move_icon): Renamed icon_changed to
	icon_position_changed.
	(rubberband_select): Fixed bug where rubberband would never deselect.
	(nautilus_icon_container_initialize_class): Add a new signal called
	get_stored_icon_position and also renamed the icon_changed signal to
	icon_position_changed.
	(nautilus_icon_container_update_icon): Changed back the
	get_icon_images interface to return NautilusScaledIcon objects
	instead of actual pixbufs. This is made possible by the change to
	include the embedded text as one of the parameters when creating
	a NautilusScaledIcon.
	(nautilus_icon_container_add): Merged the two flavors of add and
	removed the extra parameters. Now the icon position and scale comes
	from a callback (via signal).
	(nautilus_icon_container_set_selection): Use a hash table (fixes
	Bugzilla bug 613).
	(nautilus_icon_container_select_list_unselect_others): Use a hash
	table.
	(nautilus_icon_container_set_auto_layout): Reload the previous
	icon positions and "freeze" them (store them) when switching from
	automatic layout to manual.
	(nautilus_icon_container_freeze_icon_positions): Public function
	to store all the icon psoitions. For use later with the dialog that
	you get when you drag an icon.
	* src/file-manager/fm-icon-view.c:
	(get_stored_icon_position_callback): Support new interface for
	getting the icon position. Also used setlocale so metadata always
	uses a locale-independent format for floating point numbers.
	(fm_icon_view_add_file), (fm_icon_view_done_adding_files):
	New simplified interface for adding icons.
	(auto_layout_callback), (manual_layout_callback): Fixed a bug where
	we'd always switch to auto layout on startup. It's actually a bug
	in Bonobo where new radio menu items get callbacks right away.
	(icon_position_changed_callback): Used setlocale so metadata always
	uses a locale-independent format for floating point numbers.
	(get_icon_images_callback): Changed for new simpler embedded text
	API. Moved the actual pixbuf stuff back into NautilusIconContainer.
	(create_icon_container): New get_stored_icon_position callback and
	renamed icon_position_changed callback.
	
	* libnautilus-extensions/nautilus-icon-dnd.c: (handle_local_move),
	(handle_nonlocal_move),
	(nautilus_icon_container_receive_dropped_icons):
	Restructured the drag code a little bit to make it easy to add the
	dialog that you get when you drag an icon within an auto-layed-out
	window (that I will add soon).
	
	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_scalable_icon_get), (nautilus_scalable_icon_unref),
	(nautilus_scalable_icon_hash), (nautilus_scalable_icon_equal),
	(nautilus_icon_factory_get_icon_for_file),
	(nautilus_icon_factory_get_emblem_icon_by_name),
	(nautilus_icon_factory_get_emblem_icons_for_file),
	(get_image_from_cache),
	(nautilus_icon_factory_get_pixbuf_for_icon),
	(nautilus_icon_factory_get_pixbuf_for_file), (embed_text),
	(load_image_with_embedded_text):
	* src/file-manager/fm-list-view.c:
	(fm_list_view_get_emblem_pixbufs_for_file):
	* src/file-manager/fm-properties-window.c:
	(create_image_widget_for_emblem):
	* src/nautilus-index-title.c: (nautilus_index_title_update_info):
	Even though John talked me out of it, I talked myself back into it.
	Redid the embedded text so it's done entirely inside the icon
	factory. This keeps the interface simple.
	
	* libnautilus-extensions/nautilus-icon-private.h: Add a missing
	newline.
	
2000-05-09  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_load_uri),
	(mozilla_notify_location_change_callback),
	(mozilla_location_changed_callback):
	Notify nautilus when the location changes so that back/forward
	navigation and history work as expected.

2000-05-09  John Sullivan  <sullivan@eazel.com>

	Work on task 842 (Finish emblems UI in property window)

	* src/file-manager/fm-properties-window.c:
	(create_image_widget_for_emblem): Finished this function
	that I had checked in the beginnings for last time.
	(create_emblems_page): Now displays images and puts
	emblems into a scrolling area in case there are too
	many to fit. Still need to get the real list of emblems
	instead of a hard-wired one.

2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-window-menus.c:
	removed the color selector widget from the debug menu, since it's
	no longer needed now that we have colors in the property browser.
	Since there was nothing else in the menu, I removed it, too.
	
2000-05-09  Ramiro Estrugo  <ramiro@eazel.com>

	* acconfig.h,
	* configure.in: Remove the MOZILLA_FIVE_HOME hack.  I dont like
	how this causes the whole of nautilus to rebuild.  Its also
	something that should be set in the user's environment.
	
	* components/mozilla/main.c: (mozilla_check_environment), (main):
	Remove the MOZILLA_FIVE_HOME hack from here too.  Replace it with
	a environment check instead.
	
	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize),
	(nautilus_mozilla_content_view_destroy),
	(nautilus_mozilla_content_view_load_uri),
	(mozilla_content_view_set_busy_cursor),
	(mozilla_content_view_send_progress_request),
	(mozilla_content_view_clear_busy_cursor),
	(mozilla_notify_location_change_callback),
	(bonobo_mozilla_callback), (mozilla_merge_bonobo_items_callback),
	(mozilla_title_changed_callback),
	(mozilla_location_changed_callback), (mozilla_net_status_callback),
	(mozilla_link_message_callback), (mozilla_progress_callback):
	Add support for mousing over link status, progress notification,
	title changed, location changed, busy cursor.  Some of this still
	needs work to get it right.
	Factor the progress request sending code into its own function.
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	implemented adding new emblems and removing them
	* icons/emblem-generic.png:
	added image for generic emblems
	* icons/Makefile.am:
	added new icon
	
2000-05-09  John Sullivan  <sullivan@eazel.com>

	Checked in to fix silly problem from previous checkin:
	I had left the sense of a check reversed for testing
	purposes, and no permissions would ever appear in the
	Properties window.

	I've also got some new changes that have no visible
	effect yet.

	* libnautilus-extensions/nautilus-icon-factory.h,
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_emblem_icon_by_name):
	New function, gets a single emblem icon.
	(add_emblem): Calls _get_emblem_icon_by_name now.
	* src/file-manager/fm-properties-window.c:
	(create_image_widget_for_emblem), (create_emblems_page):
	Some preliminary work towards making emblem images appear.
	(create_permissions_page): Took out a "!" so permissions
	show up.

2000-05-09  J Shane Culpepper  <pepper@eazel.com>

	* components/services/ ALL
	* nautilus-installer/ ALL
	Massive reorganization of components/services.  All service components
	are now broken up into a command-line and a nautilus-view.  Added
	directories for trilobite, the core service framework.  Added
	directories for the proof of concept time sync service.  Also added
	nautilus-installer directory at the base level of nautilus which will
	contain the bootstrap installer for nautilus and its dependancies. Most
	these changes are in the build harness yet.

2000-05-09  John Sullivan  <sullivan@eazel.com>

	Finished task 547 (show and set permissions in
	Properties window). It's kinda geeky as unix
	permissions like to be. As always, I welcome feedback
	about this UI.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_can_get_permissions): New function, checks
	whether the permissions of a file can be determined.
	(nautilus_file_can_set_permissions): New function, checks
	whether the current user is capable of changing the
	permissions of a file.

	(nautilus_file_denies_access_permission),
	(nautilus_file_is_executable): Deploy _can_get_permissions.
	
	(nautilus_file_get_permissions): New function, returns
	permissions for file.
	
	(nautilus_file_set_permissions): New function, changes
	permissions for file. Returns GnomeVFSResult that reports
	whether change succeeded.
	 
	* src/file-manager/fm-properties-window.c: (add_prompt),
	(add_prompt_and_separator),
	(get_pixmap_and_mask_for_properties_window), (install_value_field),
	(install_title_value_pair), (create_page_with_vbox),
	(apply_standard_table_padding), (create_attribute_value_table),
	(create_page_with_table_in_vbox), (create_emblems_page),
	(permissions_label_update), (add_permissions_row_label),
	(add_permissions_column_label),
	(update_permissions_check_button_state),
	(permissions_check_button_toggled), (add_permissions_checkbox),
	(create_permissions_page), (create_more_page): Lots of new code
	and refactoring to display the permissions UI.

	* src/file-manager/fm-error-reporting.h,
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_setting_permissions): New function to
	complain to user if attempt to set permissions fails.
	The UI won't let the user try to set the permissions if
	nautilus_file_can_set_permissions returns FALSE, but there
	can always be oddball failures for other reasons.
	
2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (get_lang_list),
	(nautilus_view_identifier_new_from_oaf_server_info): Provide the
	language from either the LANGUAGE or LANG environment variable,
	for proper l10n of OAF name attributes,

2000-05-09  Christopher Blizzard  <blizzard@redhat.com>

	* components/mozilla/nautilus-mozilla-content-view.c
	(nautilus_mozilla_content_view_load_uri): add GTK_MOZ_EMBED() cast
	since the prototype for embed_load_url has changed on the Mozilla
	tip.
	(bonobo_mozilla_callback): Same.

2000-05-08  John Sullivan  <sullivan@eazel.com>

	* src/ntl-uri-map.c: DEBUG_MJS was accidentally checked in
	defined. I commented it out. Also changed an #if DEBUG_MJS
	to #ifdef to match the others.

2000-05-08  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c
	* libnautilus-extensions/nautilus-icon-container.c
	(realize), (unrealize), (nautilus_list_realize),
	(nautilus_list_unrealize),
	(nautilus_icon_container_initialize_class),
	(nautilus_list_initialize_class),
	(nautilus_list_realize),
	(nautilus_list_unrealize):
	Fix 296 - properly set the default focus to the icon and
	list views so that keyboard navigation works right away.
	Properly defocus the icon and list view when switching 
	between the two views. 

	* libnautilus-extensions/nautilus-icon-container.c:
	(keyboard_arrow_key), (keyboard_right), (keyboard_left),
	(keyboard_down), (keyboard_up):
	Properly handle the first keyboard arrow press when we have no selection
	yet. To do this pass in a new empty_start predicate.
	
	* libnautilus-extensions/nautilus-icon-container.c
	* libnautilus-extensions/nautilus-list.c
	(nautilus_list_initialize),
	(select_row_from_mouse),
	(nautilus_list_keyboard_navigation_key_press),
	(nautilus_list_key_press):
	Properly handle the first keyboard arrow press when we have no selection
	yet (this will only start working when 454 gets fixed).
	Make it so that the keyboard focus gets collapsed with the selection
	when selecting an item with a mouse.

2000-05-08  Darin Adler  <darin@eazel.com>

	* check-FIXME.pl:
	* check-config-h.pl: Added "." parameter to "find" so it works
	with non-GNU versions of find. This was for Morten, who wanted
	to run check-config-h.pl on Gnumeric.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(start_getting_top_lefts): Turn embedded text back on.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_get_metadata): Fixed a bug that was showing
	up in "make check".
	(nautilus_self_check_directory): Got rid of GNOME VFS tests,
	since I moved the same tests into test-async-cancel in the
	gnome-vfs module.

2000-05-08  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus/nautilus-clipboard.c:
	(nautilus_clipboard_info_destroy),
	(nautilus_clipboard_info_set_view_frame): 
	Reference the view on set_view_frame() and unreference on
	destruction.  This fixes a problem where the clipboard code was
	trying to use a view that has already been trashed.
	
	Thanks to Carbamide <linuxfan@ionet.net> for finding the problem.

2000-05-08  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in,
	* HACKING: Remove libglade check and hacking blurb.  We don't
	use libglade no more,

2000-05-08  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	added an up arrow image in the property browser title bar, to act
	as a "go-back" button.
	Also, made the "add background" command check the mime-type of the
	specified file and only add it if it's an image
	* icons/uparrow.png:
	new image to serve as goback button in browser title bar
	* icons/Makefile.am:
	added new image to Makefile

2000-05-08  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(key_press_event):
	Fixed bug introduced by Pavel's new super cool keyboard icon
	selection feature. An icon in renaming mode no longer received
	keyboard events. A check is now made to see if the icon container
	is in renaming mode before processing event for icon selection.

2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	Fixed merging of explicitly specified components. Now the name is
	properly determined from OAF, nonexistent ones are ignored, the
	syntax for specifying then is improved, and they can be defined
	for files as well as directories. In the process I defined some
	new general-purpose metadata operations. These are
	bugzilla.eazel.com tasks #763 and #673.

	* libnautilus-extensions/nautilus-xml-extensions.h,
	libnautilus-extensions/nautilus-xml-extensions.c
	(nautilus_xml_get_property_for_children): New function. Get a
	specific property for all children of a node that have a
	particular name.

	* libnautilus-extensions/nautilus-directory-private.h,
	libnautilus-extensions/nautilus-directory.h,
	libnautilus-extensions/nautilus-file.h,
	libnautilus-extensions/nautilus-file.c
	(nautilus_file_get_metadata_list),
	libnautilus-extensions/nautilus-directory.c
	(get_metadata_list_from_node), (nautilus_directory_get_metadata),
	(nautilus_directory_get_metadata_list),
	(nautilus_directory_get_file_metadata_list): NewFunctions to allow
	getting lists of info for files or directories.

	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_get_keywords): Use the new interface for getting
	the keywords for a file.

	* src/ntl-uri-map.h: Added explicit_iids field to
	Nautilus_NavigationInfo struct.

	* src/ntl-uri-map.c
	(get_explicit_content_view_iids_from_metafile): New function to
	get IIDs for explicitly selected views from the metafile.
	(make_oaf_query_for_explicit_content_view_iids): Create a query
	clause from the explicit IID list.
	(make_oaf_query_with_known_mime_type),
	(make_oaf_query_with_uri_scheme_only): Accept explicitly selected
	IIDs whether or not they would otherwise apply.
	(server_matches_content_requirements): Don't check content
	requirements for explicitly selected servers.
	(nautilus_navigation_info_new), (nautilus_navigation_info_free):
	initialize and free the explicit_iids field.

2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(directory_count_callback): Improved the logic so it records the
	fact that the directory count is complete earlier and more
	cleanly. This stops an assertion failure I was seeing occasionally
	from showing up, by fixing or at least hiding the underlying
	problem.

2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (get_lang_list),
	(nautilus_view_identifier_new_from_oaf_server_info): GSList, not
	GList!

2000-05-07  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (get_lang_list),
	(nautilus_view_identifier_new_from_oaf_server_info): fix
	bugzilla.eazel.com task #694; pass the language to the oaf calls
	that get a name so those attributes can be i18n'd.

2000-05-07  Maciej Stachowiak  <mjs@eazel.com>

	* nautilus-clean.sh: Added pdf component to list. Added -x option
	to also kill oafd and gconfd.

2000-05-08  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-private.h:
	(match_best_name), (select_matching_name), (destroy), 
	(button_press_event), (nautilus_icon_container_almost_drag),
	(nautilus_icon_container_flush_typeselect_state),
	(nautilus_icon_container_handle_typeahead), (key_press_event),
	(nautilus_icon_container_initialize):
	Support for icon selection by typing the item's name. Initialize 
	and flush the new typeselect state properly. Rework key_press_event
	a little bit to make it easier to call the inherited key_press call
	when we did not handle the keyboard event ourselves.

	* libnautilus-extensions/nautilus-icon-container.c:
	(select_previous_or_next_name), (compare_icons_by_name),
	(build_sorted_icon_list):
	Support for selecting next/previous icon alphabetically using
	Tab and Shift-Tab.
	
	* libnautilus-extensions/nautilus-icon-container.c:
	(find_best_icon), (find_best_selected_icon), (leftmost_in_top_row),
	(rightmost_in_bottom_row), (same_row_right_side_leftmost),
	(same_row_left_side_rightmost), (same_column_above_lowest),
	(same_column_below_highest), (keyboard_home), (keyboard_end),
	(keyboard_arrow_key):
	Add data parameter to find_best_icon and find_best_selected_icon
	to allow using more complicated match predicates.
	
	* libnautilus-extensions/nautilus-glib-extensions.c:
	* libnautilus-extensions/nautilus-glib-extensions.h:
	(nautilus_g_list_copy):
	Add a list shallow copy utility call.

	* libnautilus-extensions/nautilus-glib-extensions.c:
	* libnautilus-extensions/nautilus-glib-extensions.h:
	(nautilus_get_system_time), (nautilus_self_check_glib_extensions)
	Add a utility call to get the system time in microseconds.

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	Fix a typo.

	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_start_renaming_selected_item):
	Fix white space.

2000-05-08  Andy Hertzfeld <andy@eazel.com>

	src/nautilus-property-browser.c:
	implemented adding and removing colors and backgrounds to the property browser
	libnautilus-extensions/nautilus-icon-factory.c:
	removed some code for making frames for non-standard format thumbnails that was
	never being executed
	data/browser.xml:
	added another color so they line up better
	
2000-05-07  Maciej Stachowiak  <mjs@eazel.com>


	Fix bugzilla.eazel.com task 479:

	* libnautilus/nautilus-clipboard.c
	(nautilus_clipboard_info_destroy),
	(nautilus_clipboard_info_set_view_frame): Do not ref and unref the
	view_frame. Because the NautilusClipboardInfo will only be
	destroyed when the view_frame is destroyed in the normal use case,
	if it holds a ref on the view_frame it will prevent it from ever
	being destroyed. This was causing the notes and history view
	processes to stay around forever.
	
2000-05-06  John Sullivan  <sullivan@eazel.com>

	Fixed up code that limits how small icons are before they
	stop showing embedded text. Too bad you can't see it in
	action until embedded text is turned back on.

	* icons/eazel/i-regular.xml: Added an embedded-text rectangle
	for one size smaller icon than had one before.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	Added #defines for minimum embedded text rectangle width
	and height.
	(embedded_text_rect_usable): New function, ensures that the
	embedded text rectangle is sufficiently large.
	(nautilus_icon_factory_embed_text),
	(nautilus_icon_factory_embed_file_text): Use new function to
	skip embedded text if rectangle is nonexistent or too small.
	
	* src/file-manager/fm-icon-view.c:
	(get_icon_images_callback): Removed the text-rectangle size
	limit here since now there's a universal one inside
	nautilus_icon_factory.

2000-05-06  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(start_getting_top_lefts): Disabled the embedded text until I can
	fix the file descriptor linking problem. It's easy to re-enable,
	but then you quickly run out of FDs.

2000-05-06  Jesus Bravo Alvarez  <jba@pobox.com>

	* configure.in: Added Galician (gl) to ALL_LINGUAS

2000-05-05  Andy Hertzfeld <andy@eazel.com>

	did some work at the request of Bud
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	added preference NAUTILUS_PREFERENCES_SIDEBAR_WIDTH
	* src/ntl-window.c:
	set the initial sidebar width from NAUTILUS_PREFERENCES_SIDEBAR_WIDTH.  
	As a welcome side-effect, this allowed  me to remove the old "sopwidth 
	hack". I also increased	the default size.
	* src/ntl-index-panel:
	added old_width to details.  Overrode size_allocate signal to get 
	in there when the size changes to record it in preferences when 
	it changes
	
	* src/nautilus-index-title.c:
	changed the font used for the title to helvetica, to match the other text
	
2000-05-05  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/.cvsignore: Ignore the new files that
	are generated by Gene's new .idl.
	
	* libnautilus-extensions/nautilus-debug.h:
	* libnautilus-extensions/nautilus-debug.c:
	(nautilus_get_available_file_descriptor_count):
	Changed the interface on Pavel's excellent new debugging function.
	
	* libnautilus-extensions/nautilus-directory.c:
	(file_open_callback), (file_close_callback), (open_and_close_one),
	(nautilus_self_check_directory): Added some checks for GNOME VFS
	in here. This is a bad place for them but it's better than not
	having them at all.
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_self_check_icon_factory): Updated self checks so they
	work again. John didn't notice that he needed to fix these when
	he added the 20-pixel size icon to the standard sizes.
	
2000-05-05  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undo-manager-component.idl:
	New IDL file describing CORBA interface to the undo manager.
	
	* libnautilus-extensions/Makefile.am:
	Modified to include nautilus-undo-manager-component.idl
	
	* libnautilus-extensions/nautilus-undo-manager.c
	* libnautilus-extensions/nautilus-undo-manager-private.h:
	(impl_Nautilus_UndoManager__destroy),
	(impl_Nautilus_UndoManager__create),
	(impl_Nautilus_UndoManager__begin_transaction),
	(impl_Nautilus_UndoManager__end_transaction):
	CORBA/Bonobo functions to access undo manager features.

	* libnautilus-extensions/nautilus-undo-manager.h:
	* src/file-manager/fm-list-view.c
	(fm_list_view_append_background_context_menu_items),
	(fm_list_view_merge_menus), (fm_list_view_update_menus),
	(rename_list_item_callback):
	Began the task of 
	
	* src/ntl-main.c 
	(main):
	Removed intialization of undo manager from main,

	* src/ntl-app.c 
	(nautilus_app_init):
	Moved initialization of undo manager. A reference to the undo manager
	is saved for easy access from components.
	
	
2000-05-05  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	improved the appearance of color properties by putting them
	in a frame
	
2000-05-05  Andy Hertzfeld <andy@eazel.com>

	* icons/colors.png:
	added icon for colors category
	* icons/Makefile.am:
	added new icon to Makefile
	* data/backgrounds/ice.png:
	added cool new background
	* data/backgrounds/Makefile.am:
	added new background to Makefile
	
2000-05-05  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-properties-window.c:
	(install_title_value_pair), (create_page_with_table_in_vbox),
	(create_basic_page), (create_emblems_page),
	(create_permissions_page), (create_more_page),
	(create_properties_window):
	More early work on the Properties window. Nudging it into
	shape one step at a time.

2000-05-05  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-debug.c,
	libnautilus-extensions/nautilus-debug.h:
	(nautilus_print_available_file_descriptor_count):

	Added a debugging call to help locate file descriptor leaks.
	
2000-05-05  Darin Adler  <darin@eazel.com>

	Fix up the code for cancelling so we don't leave files open and
	objects around so much. It was getting out of hand.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(empty_close_callback): Give a warning if we ever have a close
	that fails.
	(directory_count_callback): For easier debugging, NULL out the
	file after unref'ing.
	(start_getting_directory_counts): Unref the file when we cancel
	a directory count part-way through (leak #1).
	(start_getting_top_lefts): Close the file when we cancel a top
	left read part-way through (leak #2). Unref the file when we
	cancel a top left read part way thorugh (leak #3).

2005-05-05  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	made color drag and drop work from the property browser.
	
2000-05-05  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_embed_text): The old code assumed that white
	was == 0xFFFFFF. But that's not always true due to bugs (well maybe
	not bugs but imperfections) in the code that converts 555 to 888 in
	gdk-pixbuf. Fixed it now.

2000-05-05  Darin Adler  <darin@eazel.com>

	Moved the "embedded text" feature into the icon factory and
	NautilusFile. Also fixed some FIXMEs that were in the modified
	code along the way.

	This code requires a new version of GdkPixbuf to work properly.
	A bug in the old one makes embedded text look wrong.

	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_close), (nautilus_metafile_read_cancel),
	(metafile_read_failed), (metafile_read_complete),
	(metafile_read_callback), (metafile_read_some),
	(metafile_read_open_callback), (metafile_read_start),
	(nautilus_directory_request_read_metafile), (metafile_write_done),
	(metafile_write_failed), (metafile_write_callback),
	(metafile_write_create_callback), (nautilus_metafile_write_start),
	(metafile_write), (lacks_top_left), (wants_top_left),
	(has_problem), (select_needy_file), (count_lines),
	(top_left_read_done), (top_left_read_failed),
	(top_left_read_complete), (top_left_read_close),
	(top_left_read_callback), (top_left_read_some),
	(top_left_open_callback), (start_getting_top_lefts),
	(state_changed):
	Added code to read top lefts of files in the background.
	Restructured things to accomodate this new code nicely with
	a minimum of copy and paste (there still was plenty of copy
	and paste so there's room for improvement).
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_destroy):
	Name changes from above required revising some asserts.
	
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_top_left_text): Now it returns something
	besides just NULL.
	(nautilus_extract_top_left_text): Function that remembers only
	the part of the top left text that we want to keep around.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_marshal_NONE__POINTER_POINTER_POINTER),
	(nautilus_gtk_marshal_POINTER__POINTER_INT_INT_POINTER_POINTER):
	Needed some new marshal functions.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.h:
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_initialize_class),
	(nautilus_icon_canvas_item_destroy),
	(nautilus_icon_canvas_item_set_arg),
	(nautilus_icon_canvas_item_get_arg),
	(nautilus_icon_canvas_item_get_image),
	(nautilus_icon_canvas_item_set_image),
	(nautilus_icon_canvas_item_draw):
	Removed the old embedded text support. It came with a whole lot
	of baggage, also removed.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_icon): Moved pixbuf computing code
	into the FMIconView class. We might decide later to move it back
	again, but for now the embedded text makes it easier to do it
	this way.
	(nautilus_icon_container_initialize_class): Merged
	get_icon_editable_text and get_icon_additional_text back into
	a single signal that gets both.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_dnd_begin_drag): Updated for change in icon factory
	API.
	
	* src/file-manager/fm-directory-view.c: (finish_loading_uri):
	Ask for top-left text attribute for all directories.
	
	* src/file-manager/fm-icon-view.c: (get_icon_images_callback):
	Moved pixbuf computing code into the FMIconView class. We might
	decide later to move it back again, but for now the embedded text
	makes it easier to do it this way.
	(get_icon_text_callback): Merged get_icon_editable_text and
	get_icon_additional_text back into a single signal that gets both.

2000-05-04  Andy Hertzeld

	added colors to the property browser.  Dragging isn't quite working yet.
	
	* src/nautilus-property-browser.c:
	added inline xml mode for the property browser and used it to add color properties
	* data/browser.xml:
	added some color definitions.
		
2000-05-04  John Sullivan  <sullivan@eazel.com>

	* src/ntl-index-panel.c (nautilus_index_panel_initialize):
	Added a nice little GNOME_PAD worth of space above (and
	below, but who could tell?) the index-title. Now that icon
	isn't jammed up against the top of the sidebar.

2000-05-04  John Sullivan  <sullivan@eazel.com>

	Some work on the Properties window. It now shows some
	more properties (location, type, size, date).

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_parent_uri_as_string): New function, returns
	the URI of the enclosing directory.
	(nautilus_file_get_string_attribute): Now supports attributes
	"uri" and "parent_uri".
	* src/file-manager/fm-directory-view.c: (compute_menu_item_info),
	(fm_directory_view_real_merge_menus): Changed menu name from
	"Set Properties..." to "Show Properties" since the read-only ones
	now outnumber the changeable ones.
	* src/file-manager/fm-properties-window.c:
	(create_pixmap_widget_for_file), (value_field_update),
	(install_title_value_pair), (create_basic_page),
	(create_emblems_page), (create_properties_window): Broke up
	huge create_properties_window into smaller functions, and
	added location, type, size, and date to Basic page.

2000-05-04  J Shane Culpepper <pepper@eazel.com>
	
	* components/services/install/Makefile.am
	* components/services/startup/main.c
	* components/services/startup/eazel-register.c
	* components/services/startup/eazel-register.h
	* components/services/startup/nautilus-services-startup-view.h
	* components/services/startup/nautilus-services-startup-view.c

	Code cleanup to conform to eazel hacking standards.

2000-05-04  Andy Hertzfeld <andy@eazel.com>

	now you can drop emblems from the property browser onto
	icons in the icon view.
	
	* libnautilus-extensions/nautilus-icon-dnd.h:
	added definitions for the "property/keyword" drag type
	* libnautilus-extensions/nautilus-icon-dnd.c:
	added receive_dropped_keyword and integrated it;
	made it highlight by testing for keywords in
	nautilus_icon_dnd_update_drop_target;
	also, with Pavel's help, fixed a long-standing drag and drop bug
	by calling nautilus_icon_container_free_drag_data in the
	drag_leave_callback.
	
	* data/backgrounds/Makefile.am:
	added another background image
	* data/backgrounds/beige_tile.jpg:
	new background image
	
2000-05-04  Darin Adler  <darin@eazel.com>

	* src/ntl-uri-map.c: (file_list_to_mime_type_hash_table),
	(free_key), (mime_type_hash_table_destroy),
	(got_file_info_callback): Fixed bug I introduced earlier.
	Now MIME types are just like other text -- potentially
	dynamically computed and all.

	Special thank-you fix for Carbamide. With all his testing he deserves
	some special treatment.

2000-05-04  Ramiro Estrugo  <ramiro@eazel.com>

	* src/run-nautilus: Pass command line arguments on to the script.
	
2000-05-04  J Shane Culpepper  <pepper@eazel.com>
	*components/eazel/services/install/eazel-install-xml-package-list.c
	Making minor fixes.  Changed gint reference to int. Made
	parse_package_template function static.

2000-05-04  Darin Adler  <darin@eazel.com>

	* HACKING: Some more instructions and cleanup.
	* RENAMING: Removed one gratuitous renaming we won't do.
	
	* components/html/ntl-web-browser.c:
	Removed stray "#include <config.h>" that I added by accident.

	* components/hardware/main.c: (main):
	* components/help/hyperbola-main.c: (main):
	* components/html/ntl-web-browser.c: (main):
	* components/music/main.c: (main):
	* components/notes/ntl-notes.c: (main):
	* components/rpmview/main.c: (main):
	* components/websearch/ntl-web-search.c: (main):
	* src/file-manager/gnome-desktop.c (main):
	* src/ntl-main.c (main):
	Added ifdefs so you don't get warnings when building with
	localization turned off. Ugly, but needed I think.
	
	* components/help/converters/gnome-db2html2/gdb3html.c:
	(ulink_start_element), (start_element):
	* components/help/converters/gnome-db2html2/sect-elements.c:
	(sect_sect_start_element), (sect_sect_end_element),
	(sect_title_start_element), (sect_xref_start_element),
	(sect_graphic_start_element), (sect_get_infobox_logo):
	* components/help/converters/gnome-db2html2/sect-preparse.c:
	(sect_preparse_sect_start_element),
	(sect_preparse_title_characters):
	* components/help/converters/gnome-db2html2/toc-elements.c:
	(toc_sect_start_element), (toc_title_start_element):
	* components/help/converters/gnome-info2html2/html.c:
	(write_node_link_html):
	* components/help/hyperbola-filefmt.c: (tree_key_compare):
	* components/help/hyperbola-nav-index.c: (start_element),
	(end_element), (hyperbola_navigation_index_new):
	* components/html/ntl-web-browser.c: (browser_submit):
	Replaced all uses of strcasecmp with g_strcasecmp.
	Why? Because Michael Meeks said so and that's good enough
	for me (in this case :-).
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_update_from_uri):
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_mime_type_as_string_attribute),
	(nautilus_file_get_mime_type):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	* src/file-manager/fm-icon-view.c (get_icon_property_callback):
	* src/ntl-index-panel.c (nautilus_index_panel_update_buttons):
	* src/ntl-uri-map.c (file_list_to_mime_type_hash_table):
	Changed get_mime_type to be like all other text functions and
	return a strdup'd string. John said it was a good idea.

	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_callback), (metafile_read_some),
	(set_up_request_by_file_attributes),
	(nautilus_directory_monitor_add_internal),
	(directory_list_get_next_position), (directory_load_callback),
	(ready_callback_call),
	(nautilus_directory_call_when_ready_internal),
	(wants_directory_count), (has_problem),
	(ready_callback_is_satisfied), (is_anyone_monitoring_file_list),
	(is_anyone_waiting_for_metafile), (is_wanted), (select_needy_file),
	(start_getting_directory_counts):
	Reorganize to get ready for adding code to read the top left text.
	
	* libnautilus-extensions/nautilus-file-attributes.h:
	Added name for the "top left text" attribute.
	
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_top_left_text):
	Added call to get the top left text.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_embedded_text): Tiny format tweak.
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_icon): Tiny format tweak.
	
	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_pixbuf_for_file),
	(nautilus_icon_factory_get_pixmap_and_mask_for_file),
	(nautilus_icon_factory_embed_text),
	(nautilus_icon_factory_embed_file_text):
	Added support for embedded text. Not completely deployed yet.
	
2000-05-03  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c (create_xfer_dialog),
	(handle_xfer_ok), (handle_xfer_vfs_error), (fs_xfer),
	(fs_move_to_trash), (fs_empty_trash):
	Add a simple heuristic to only show the progress dialog
	for file operations that are likely to take a non-trivial
	ammount of time in which case the progress dialog flashed
	on the screen for a split of a second.

	* libnautilus-extensions/nautilus-icon-dnd.c
	(nautilus_icon_dnd_modifier_based_action):
	Switch the modifier key for copy to Control. This is a better
	modifier because Alt had to be held down after the drag started
	otherwise one would move the window instead of starting a drag.
	
2000-05-03  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	at John's suggestion, made the property browser stay open if you
	drag with the shift key held down.  Also, changed the format of
	the data accompanying the "property/keyword" item to just be the
	keyword instead of a file uri.
	* src/ntl-index-panel.c:
	adjusted the index panel to accept the new "property/keyword" format,
	removing the hack to extract the keyword from the uri.
	
2000-05-03  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/eazel-install-xml-package-list.c:
	parse_pkg_template checks the fopen return val. Also changed the
	arguments, so it returns the number of lines, thus loosing the
	hardcoded 500 lines in generate_xml_package_list.

2000-05-03  Gene Z. Ragan <gzr@eazel.com>

	* libnautilus-extensions/nautilus-entry.c
	* libnautilus-extensions/nautilus-entry.h:
	Refined undo support.
	(nautilus_entry_enable_undo_key):
	New function to set internal handling of ctl-z for undo.
	
	* libnautilus-extensions/nautilus-icon-container.c
	(hide_rename_widget):
	Removed deletion of undo transaction.  This is now handled
	by the owner of the widget.
	
	* libnautilus-extensions/nautilus-undo-manager.c	
	(nautilus_undo_manager_unregister_object):
	New function to unregister a GtkObject from the undo manager.
	Any transaction that contains the object is removed from the
	undo and redo lists.  This should be called for any object that
	is no longer available for user interaction.

	* libnautilus-extensions/nautilus-undo-transaction.c
	(nautilus_undo_transaction_contains_object):
	Function added to support nautilus_undo_manager_unregister_object()
	call in the undo manager.  Each NautilusUndoable in a transaction
	is checked for the object to be removed.
	
	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-properties-window.c
	(create_properties_window):
	Added call to unregister rename widget from undo manager.

	* src/nautilus-bookmarks-window.c
	Added undo support for entry widgets.
	
	* src/nautilus-location-bar.c
	Changed to support modified undo manager APIs.
	
2000-05-03  Kjartan Maraas  <kmaraas@online.no>

	* components/html/Makefile.am: Added -DGNOMELOCALEDIR
	* components/html/ntl-web-browser.c: Added bindtextdomain()
	and textdomain() to initialize the i18n support.
	* components/music/Makefile.am: Same as above.
	* components/music/main.c: Same as above.
	* components/music/nautilus-music-view.c: Marked strings.
	* components/notes/Makefile.am: Same as above.
	* components/notes/ntl-notes.c: Same as above.
	* components/rpmview/Makefile.am: Same as above.
	* components/rpmview/main.c: Same here too.
	* components/rpmview/nautilus-rpm-view.c: Marked strings.
	* components/sample/nautilus-sample-content-view.c: Same here too.
	* components/websearch/Makefile.am: Same as above.
	* components/websearch/ntl-web-search.c: Again.

2000-05-03  Fatih Demir	<kabalak@gmx.net>
	
	* nautilus.desktop: Yes, yes, nautilus can be such a
	typotic word (nautlius->nautilus in Name entry...)
	
	* configure.in: Added ko to ALL_LINGUAS .

2000-05-02  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-index-title.c,h:
	made it display the emblems associated with a file.  Also, added a
	routine to return the current title.
	* src/ntl-index-panel.c:
	made dropping emblems on the index panel work by adding a new
	receive_dropped_keyword routine
	* src/nautilus-property-browser.c:
	fixed bug where the title background image wasn't being set correctly	
	* data/browser.xml:
	changed drop type for emblems to "property/keyword"
	* data/backgrounds/Makefile.am:
	added new background image
	* data/backgrounds/white_ribs.png:
	added new "white_ribs" background image

2000-05-02  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-entry.c
	Connected widget to undo manager.
	(nautilus_entry_initialize),
	(nautilus_entry_destroy), 
	(nautilus_entry_key_press):
	Added check for ctl-z.  An undo is requested when the key combination
	is triggered.
	(nautilus_entry_changed):
	Added undo registration when text is modified.
	(save_undo_snapshot_callback),
	(restore_from_undo_snapshot_callback):
	Standard undo manager callbacks
	(nautilus_entry_enable_undo):
	Added new function. Pass in boolean value to enable or disable
	undo functionality.
	
2000-05-02  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	Removed special case for "core" files, which are now
	handled by the MIME type database used in gnome-vfs.

2000-05-02  Andy Hertzfeld  <andy@eazel.com>

	1st cut at property browser for drag and drop customization;
	Backgrounds are fully implemented, emblems are only partially there,
	more coming soon

	* src/Makefile.am: added property browser source files
	* src/nautilus-property-browser.c,h:
	new class that implements the property browser
	
	* src/nautilus-window-menus.c:
	added "customize" menu item and a callback that brings up
	the property browser
	
	* src/ntl-index-panel.c:
	changed index panel to accept "property/bgimage" drag type and
	change the background image accordingly

	* libnautilus-extensions/nautilus-icon-dnd.c:
	changed icon canvas to accept "property/bgimage" drag type and
	change the background image accordingly; removed the old shift key hack
	
	* libnautilus-extensions/nautilus-icon-dnd.h:
	defined constants for the new drag type
	
	* configure.in: two new data directories for backgrounds and emblems
	* data/Makefile.am: added two new directories
	* data/browser.xml: xml file that defines the categories

	added some background images to play with:
	
	* data/backgrounds/.cvsignore
	* data/backgrounds/Makefile.am
	* data/backgrounds/baize.png
	* data/backgrounds/bricks.jpg
	* data/backgrounds/bubbles.png
	* data/backgrounds/buffedwood.jpg
	* data/backgrounds/burlap.jpg
	* data/backgrounds/chalk.jpg
	* data/backgrounds/cherrywood.jpg
	* data/backgrounds/cork.png
	* data/backgrounds/dark-gnome.jpg
	* data/backgrounds/darkwood.png
	* data/backgrounds/frost.jpg
	* data/backgrounds/gnome.jpg
	* data/backgrounds/gold.jpg
	* data/backgrounds/grass.png
	* data/backgrounds/gray_fabric.png
	* data/backgrounds/greenery.jpg
	* data/backgrounds/manila.jpg
	* data/backgrounds/pink_fabric.png
	* data/backgrounds/puzzle.jpg
	* data/backgrounds/raindrops.png
	* data/backgrounds/sky.jpg
	* data/backgrounds/stucco.jpg
	* data/backgrounds/white_marble.jpg
	* data/backgrounds/white_paper.jpg
	* data/backgrounds/yellow_paper.jpg
	
	added some emblem images:
	
	* data/emblems/.cvsignore
	* data/emblems/Makefile.am
	* data/emblems/certified.gif
	* data/emblems/changed.gif
	* data/emblems/confidential.gif
	* data/emblems/encrypted.gif
	* data/emblems/important.gif
	* data/emblems/new.gif
	* data/emblems/personal.gif
	* data/emblems/remote.gif
	
	added images for the top-level categories
	
	* icons/Makefile.am: added 2 images to Makefile
	* icons/backgrounds.png
	* icons/emblems.png
		
2000-05-02  Maciej Stachowiak  <mjs@eazel.com>

	* RENAMING: Added some idl-related renamings.

2000-05-02  Darin Adler  <darin@eazel.com>

	* HACKING: Added a mention of "killall oafd" and "killall gconfd".
	
	* libnautilus-extensions/nautilus-list.c (nautilus_list_destroy):
	Fixed a bug where we'd free the details structure and then write
	to it afterwards. This was torturing John today. It happens when
	you leave a page that's set to list view.
	
	* src/file-manager/fm-icon-view.c
	(fm_icon_view_icon_changed_callback): Fixed bug 663 that was
	about the issue of similar but not identical floating point
	numbers and also bug 661 that wasn't a bug at all!
	
	* src/file-manager/fm-properties-window.c
	(get_pixmap_and_mask_for_properties_window):
	Removed the FIXME from this file, since the bug is fixed.

2000-05-02  Cody Russell  <car0969@gamma2.uta.edu>

	* src/ntl-window.c: Respect the user's GNOME preferences. Lock
	down the "Location" toolbar if the user has "Can detach and
	move toolbars" disabled in gnomecc.

2000-05-02  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(load_specific_image_svg): Open .svg file in binary mode.
	(load_specific_image): Factor out some shared code.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	Renamed *_cb to *_callback.
	(remove_custom_icon), (files_have_any_custom_images),
	(remove_custom_icons_callback), (finish_adding_menu_item),
	(fm_directory_view_real_append_background_context_menu_items):
	(append_selection_menu_item),
	(fm_directory_view_real_append_selection_context_menu_items),
	(fm_directory_view_real_merge_menus), (update_one_menu_item),
	(fm_directory_view_real_update_menus),
	(create_selection_context_menu):
	Added the "Remove Custom Image" command.
	(compute_menu_item_info): Made more similar to the one in
	FMIconView.

	* src/file-manager/fm-icon-view.c (compute_menu_item_info),
	(append_one_context_menu_item), (insert_one_context_menu_item),
	(fm_icon_view_append_selection_context_menu_items),
	(append_bonobo_menu_item), (fm_icon_view_merge_menus),
	(update_one_menu_item), (fm_icon_view_update_menus):
	Made more similar to code in FMDirectoryView.

2000-05-02  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c
	(motion_notify_event):
	Get rid of FIXME 623 - the problem was already fixed, I just
	forgot to remove the FIXME.

	* src/file-manager/dfos-xfer.c (handle_xfer_ok):
	Fix FIXME 676 - the particular switch case doesn't need any
	handling, took it out.

	* libnautilus-extensions/nautilus-list-column-title.c
	(nautilus_list_column_title_paint),
	(nautilus_list_column_title_leave),
	(nautilus_list_column_title_button_press),
	(nautilus_list_column_title_button_release):
	Fix bug 423 - Double-clicking Header boundary in List View
	fails assertion. 
	Fix a column press tracking bug Gene found - the coulumn would
	stay pressed if you tracked out of the column and let go of the
	mouse button - made it so that when tracking a column press the
	cursor gets grabbed.
	Fix FIXME 618 - used offscreen bitmap draws instead of invalidates
	during the different mouse tracking state changes.

	* file-manager/fm-directory-view.c:
	Added comments to some #if 0 code that I left behind and will use
	later.

2000-05-02  John Sullivan  <sullivan@eazel.com>

	Fixed bug 641: should check MIME type for SVG files.
	Fixed bug 438: Bookmark menu items need to limit icon size

	* libnautilus-extensions/nautilus-icon-factory.h:
	Defined a new standard icon size, NAUTILUS_ICON_SIZE_FOR_MENUS.
	None of the existing standard sizes look good in menus.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_is_mime_type): New function, compares against
	a particular MIME type so the caller doesn't have to get the
	MIME type and worry about whether to free it or not.

	* libnautilus-extensions/nautilus-icon-factory.c:
	(get_larger_icon_size),
	(get_smaller_icon_size): Include NAUTILUS_ICON_SIZE_FOR_MENUS
	when looking for the next size.
	(str_has_svg_suffix): Removed this function.
	(nautilus_icon_factory_get_icon_for_file): Use
	nautilus_file_is_mime_type to check for SVG instead
	of checking file suffix.
	(path_represents_svg_image): New function.
	(load_specific_image): Use path_represents_svg_image to
	check for SVG instead of checking file suffix.

	* libnautilus-extensions/nautilus-bookmark.c:
	(create_pixmap_widget_for_bookmark): Use 
	NAUTILUS_ICON_SIZE_FOR_MENUS.
	* src/nautilus-window-menus.c (append_bookmark_to_menu):
	Use NAUTILUS_ICON_SIZE_FOR_MENUS.

2000-05-02  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c (icon_new),
	(nautilus_icon_container_update_icon):
	Got rid of the old maximum size hack and use the new maximum size
	parameter instead.
	
	* src/nautilus-index-title.c (nautilus_index_title_update_icon):
	Took out maximum size hack and use the maximum size parameter
	instead.

	* libnautilus-extensions/nautilus-icon-factory.c
	(str_has_svg_suffix), (nautilus_icon_factory_get_icon_for_file),
	(load_specific_image): Renamed suffix_is_scalable to
	str_has_svg_suffix to make it clearer what it does.
	
2000-05-02  Darin Adler  <darin@eazel.com>

	* check-FIXME.pl: Added -print as suggested by Morten Welinder
	<terra@diku.dk>.
	* check-config-h.pl: Added -print and fixed broken message as
	suggested by Morten Welinder <terra@diku.dk>.
	
	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-factory.c
	(suffix_is_scalable): Simpler implementation.
	(get_themed_icon_file_path): Look for size-specific version of
	even .svg files. Although not so useful, it's not ridiculous to do so.
	(nautilus_icon_factory_get_icon_for_file): Fixed the twisted logic to
	be less twisted. Also changed the ".svg" extension check to use the
	common function suffix_is_scalable.
	(load_specific_image): Untwist logic here too, and note in the FIXME
	that both the .svg library and gdk-pixbuf are limiting us to file:
	URIs, although the gdk-pixbuf case is fixable without redoing the
	library by just using our utility functions.
	(load_image_for_scaling): Update for new size request structure which
	contains maximum sizes as well as nominal ones.
	(scale_image_and_rectangle), (revise_scale_factors_if_too_big),
	(scale_image_down_if_too_big): New helper functions for scaling.
	(load_image_scale_if_necessary): Take the maximum size into account.
	(get_image_from_cache): Use new size request structure and take the
	maximum size into account.
	(nautilus_icon_factory_get_pixbuf_for_icon): Changed to take maximum
	size parameters and pass them in to the underlying function.
	(icon_cache_key_hash): Include the maximum size in the hash.
	(icon_cache_key_equal): Check the maximum size too.
	(nautilus_icon_factory_get_pixbuf_for_file): Pass new max. size
	parameters to the nautilus_icon_factory_get_pixbuf_for_icon
	function.

	* libnautilus-extensions/nautilus-icon-container.c
	(nautilus_icon_container_update_icon): Pass new max. size
	parameters to the nautilus_icon_factory_get_pixbuf_for_icon
	function.
	
	* src/file-manager/fm-list-view.c
	(fm_list_view_get_emblem_pixbufs_for_file): Pass new max. size
	parameters to the nautilus_icon_factory_get_pixbuf_for_icon
	function.

2000-05-02  John Sullivan  <sullivan@eazel.com>

	* data/mime/.cvsignore,
	* data/mime/Makefile.am:,
	* data/mime/nautilus.keys: Removed files. Nautilus
	doesn't need to install the human-readable MIME
	descriptions any more because gnome-vfs does it.

	* configure.in,
	* data/Makefile.am: Removed build system fu that
	was installing nautilus.keys.

2000-05-01  Kjartan Maraas  <kmaraas@gnu.org>

	* libnautilus/nautilus-clipboard.c: Cosmetic change.
	* src/Makefile.am: Added -DGNOMELOCALEDIR to $INCLUDES.
	* src/ntl-main.c: Added calls to bindtextdomain() and 
	textdomain() to make the translations work.
	* components/help/hyperbola-main.c: Same here.
	* components/help/Makefile.am: Here as well. This should be
	done for any main() function in any module containing text
	to be translated.
		
2000-05-01  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-file-changes-queue.c:
	(nautilus_file_changes_consume_changes):
	Temporary workaround for an apparent codegen bug Carbamide
	was running into. (I'll need to track this down some more,
	this change makes the crash go away.)

	* src/file-manager/dfos-xfer-progress-dialog.c:
	* src/file-manager/dfos-xfer-progress-dialog.h:
	* src/file-manager/dfos-xfer.c:
	(dfos_xfer_progress_dialog_get_type), 
	(dfos_xfer_progress_dialog_new),
	(dfos_xfer_progress_dialog_new_file),
	(create_xfer_dialog),
	(fs_xfer), (handle_xfer_ok):
	Fix up the progress dialog so that it displays meaningful
	information while emptying the trash and moving files to
	trash.
	
2000-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-gconf.c,
	  src/nautilus-gconf.h: Retired.  Not used or needed no more.

2000-05-01  Darin Adler  <darin@eazel.com>

	* check-config-h.pl: Wrote a script to check for files that forget
	to include <config.h> and optionally edit to add it.
	
	* src/nautilus-zoom-control.c (set_zoom_level): Fixed the bug
	number in a FIXME.

	* docs/style-guide.html: Added one more tip.

	* check-FIXME.pl: Use my newfound Perl knowledge to spruce it up.

	* components/help/converters/gnome-db2html2/gdb3html.c:
	* components/help/converters/gnome-db2html2/sect-elements.c:
	* components/help/converters/gnome-db2html2/sect-preparse.c:
	* components/help/converters/gnome-db2html2/toc-elements.c:
	* components/help/converters/gnome-info2html2/html.c:
	* components/help/converters/gnome-info2html2/main.c:
	* components/help/converters/gnome-info2html2/parse.c:
	* components/help/converters/gnome-info2html2/utils.c:
	* components/help/converters/gnome-man2html2/gnome-man2html.c:
	* components/help/hyperbola-filefmt.c:
	* components/help/hyperbola-nav-index.c:
	* components/help/hyperbola-nav-search.c:
	* components/help/hyperbola-nav-tree.c:
	* components/html/glibwww-callbacks.c:
	* components/html/glibwww-init.c:
	* components/html/glibwww-trans.c:
	* components/html/gnome-dialogs.c:
	* components/html/ntl-web-browser.c:
	* components/services/install/eazel-install-metadata.c:
	* components/services/install/eazel-install-protocols.c:
	* components/services/install/eazel-install-rpm-glue.c:
	* components/services/install/eazel-install-tests.c:
	* components/services/install/eazel-install-utils.c:
	* components/services/install/eazel-install-xml-package-list.c:
	* components/services/install/eazel-install.c:
	* components/services/install/helixcode-install-utils.c:
	* components/services/startup/eazel-register.c:
	* components/websearch/ntl-web-search.c:
	* helper-utilities/authenticate/nautilus-authenticate-fork.c:
	* helper-utilities/authenticate/nautilus-authenticate-pam.c:
	* helper-utilities/authenticate/nautilus-authenticate.c:
	* libnautilus-extensions/nautilus-bonobo-extensions.c:
	* libnautilus-extensions/nautilus-file-utilities.c:
	* libnautilus-extensions/nautilus-glib-extensions.c:
	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-mime-type.c:
	* libnautilus-extensions/nautilus-undo-transaction.c:
	* librsvg/art_rgba.c:
	* librsvg/art_rgba_svp.c:
	* librsvg/rsvg-bpath-util.c:
	* librsvg/rsvg-path.c:
	* librsvg/rsvg.c:
	* librsvg/test-rsvg.c:
	* nautilus-widgets/nautilus-caption-table.c:
	* nautilus-widgets/nautilus-password-dialog.c:
	* nautilus-widgets/nautilus-preferences-box.c:
	* nautilus-widgets/nautilus-preferences-dialog.c:
	* nautilus-widgets/nautilus-preferences-group.c:
	* nautilus-widgets/nautilus-preferences-item.c:
	* nautilus-widgets/nautilus-preferences-pane.c:
	* nautilus-widgets/nautilus-radio-button-group.c:
	* nautilus-widgets/test-nautilus-widgets.c:
	* nautilus-widgets/test-preferences.c:
	* src/file-manager/desktop-item.c:
	* src/file-manager/desktop-layout.c:
	* src/file-manager/desktop-menu.c:
	* src/nautilus-bookmarks-window.c:
	* src/nautilus-gconf.c:
	* src/nautilus-window-menus.c:
	* src/nautilus-window-toolbars.c:
	* src/nautilus-zoom-control.c
	* src/nautilus-zoomable-frame-svr.c:
	* src/ntl-app.c:
	* src/ntl-content-view.c:
	* src/ntl-main.c:
	* src/ntl-meta-view.c:
	* src/ntl-miniicon.c:
	* src/ntl-uri-map.c:
	* src/ntl-view-frame-svr.c:
	* src/ntl-view.c:
	* src/ntl-window-state.c:
	Added includes of <config.h>.

2000-05-01  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-text-item.c 
	* libnautilus-extensions/nautilus-icon-private.h
	(iti_event),
	(nautilus_icon_text_item_configure),
	(nautilus_icon_text_item_start_editing),
	(save_undo_snapshot_callback),
	(restore_from_undo_snapshot_callback):
	
	* libnautilus-extensions/nautilus-undo-manager.c
	(nautilus_undo_manager_remove_transaction),
	(nautilus_undo_manager_add_undo_transaction),
	(nautilus_undo_manager_add_redo_transaction), 
	(prune_undo_manager_list):
	Fixed bug in above functions where GList was not getting properly updated 		
	after an insert or remove operation.
	
	* src/nautilus-location-bar.c 
	(nautilus_location_bar_initialize_class):
	Added signal connection to the "changed" signal of the GtkEntry item.
	(editable_changed_callback): 
	Added undo operation functionality.
	Original location text is cached in anticipation of an undo operation.
	(nautilus_location_bar_initialize):
	Added two new memeber variables, undo_text and undo_registered.  undo_text is
	a char * that keeps a cache of the location text before editing.
	undo_registered is a boolean that is set when an undo can be registered.
	(nautilus_location_bar_set_location):
	undo_registered is set to FALSE and undo_text is updated. 
	(save_undo_snapshot_callback):
	Callback called to create undo transaction
	(restore_from_undo_snapshot_callback):
	Callback called to restore the location bar text.
	(destroy):
	undo_text is freed if it has been allocated.

2000-05-01  John Sullivan  <sullivan@eazel.com>

	Fixed bug 575 (Make Nautilus use gnome-vfs-mime)

	Converted all the (few) places where Nautilus code was 
	using the old gnome-libs MIME API to use the new gnome-vfs
	MIME API.

	* components/help/help-method.c (convert_file_to_uri):
	Use gnome_vfs_mime_type_of_file. This function should
	probably use NautilusFile rather than calling the MIME
	stuff directly, but I just couldn't get distracted into
	trying to improve it.
	
	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_get_type_as_string): 
	Use gnome_vfs_mime_description.
	* libnautilus-extensions/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	Use gnome_vfs_mime_get_value.


	* data/mime/nautilus.keys: Added a translation for
	"special/symlink" because it now starts showing up when
	using ftp:// locations. Perhaps we need to fix something
	in ftp also.

2000-05-01  Darin Adler  <darin@eazel.com>

	* HACKING: Added option for eog. (Sorry Maciej, I had done it
	before I got your mail.)
        * src/ntl-uri-map.c (make_oaf_query_with_known_mime_type),
        (make_oaf_query_with_uri_scheme_only): Improved comments and
	formatting a little bit more. (Sorry again, Maciej. You can
	merge it however you want!)

2000-05-01  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus/nautilus-zoomable.c: Remove FIXME comment for #681;
	everything wrong with this file seems to be separately recorded.

2000-05-01  Darin Adler  <darin@eazel.com>

	Another cut at icon positioning. Still much tweaking needed.

	* libnautilus-extensions/nautilus-icon-canvas-item.c
	(nautilus_icon_canvas_item_bounds): Got rid of "slop".
	* libnautilus-extensions/nautilus-icon-grid.c
	(get_icon_size_power_from_bounds), (get_icon_size_power):
	Get more grid space per icon now that slop is gone.
	(nautilus_icon_grid_add): Base grid space occupied on the size of
	the icon, not the side of the grid.
	(nautilus_icon_grid_get_position): Position icons horizontally
	centered in the space, but vertically at the top.

	Made the OAF queries more readable as I discussed with Maciej.
	
	* src/ntl-uri-map.c (extract_prefix_add_suffix),
	(mime_type_get_supertype), (uri_string_get_scheme):
	Make special-purpose string routines use common function instead.
	We must not optimize this kind of thing for speed, but rather for
	ease of reading the code.  This can be whittled down a little more
	and put into nautilus-string.h
	(make_oaf_query_with_known_mime_type),
	(make_oaf_query_with_uri_scheme_only):
	Reformatted and commented the OAF queries so they are easy to read.

2000-04-30  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-icon-view.c:
	Fixed a typo that prevented my Bonobo bug fix from working.
	We were still getting crashes when we switched views because
	the radio group was in "Setings", not "Settings".

2000-04-29  Christopher Blizzard  <blizzard@redhat.com>

	* components/mozilla/Makefile.am (INCLUDES): Add $(BONOBO_CFLAGS)
	so that we can pick up the path to the bonobo includes in case
	they are built somewhere else than the standard location.

2000-04-29  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	* librsvg/Makefile.am:
	Check in patch suggested by Roberto Zunino
	<zunino@cli.di.unipi.it>.  Check for gdk-pixbuf in configure and
	use the flags set by that in the rsvg makefile.
	
2000-04-28  Gene Z. Ragan  <gzr@eazel.com>
	
	* libnautilus-extensions/nautilus-icon-text-item.c
	* libnautilus-extensions/nautilus-icon-text-item.h
	* libnautilus-extensions/nautilus-undo-manager-private.h
	Fixed the following FIXME bugs: 684 686 687
	Hooked up the undo mechanism to work properly with
	the renaming widget.

	* libnautilus-extensions/nautilus-undo-manager.c
	* libnautilus-extensions/nautilus-undo-manager.h
	Add configuration defaults to sets the UndoManager to 
	not use the redo functionality and sets the depth of
	the undo list to one transaction.
	(nautilus_undo_manager_enable_redo):
	Function to toggle on or off the ability to redo undone transactions.
	(nautilus_undo_manager_set_queue_depth):
	Function to set the max depth of the undo/redo queues
	(free_undo_manager_list_data):
	New utility function to clean up data in undo/redo list
	(prune_undo_manager_list):
	New utility function that prunes a set number of items from
	either the undo or redo list.
	(nautilus_undo_manager_add_undo_transaction):
	Manually insert an externally created undo transaction into
	the undo queue.
	(nautilus_undo_manager_add_redo_transaction):
	Manually insert an externally created undo transaction into
	the redo queue.

	* libnautilus-extensions/nautilus-undo-transaction.c
	* libnautilus-extensions/nautilus-undo-transaction.h
	(nautilus_undo_transaction_destroy):
	Added destructor function for a NautilusUndoTransaction object

	* src/nautilus-window-menus.c
	(update_undo_menu_item):
	Fixed bug 755.  Connected to signal sent by undo manager that informs
	Undo menu item sensitivity to be set.
	
2000-04-28  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c
	(background_destroyed_callback),
	(nautilus_connect_background_to_directory):
	gtk_signal_connect_while_alive wasn't quite up to the task,
	so I had to redo the fix from my last check-in.

2000-04-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/Makefile.am:
	Add missing .h files to SOURCES.
	
2000-04-28  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c
	(nautilus_connect_background_to_directory): 
	Added code to disconnect when the background is destroyed.
	This was exposed by our lack of leaking now!
	
2000-04-28  Darin Adler  <darin@eazel.com>

	* ntl-window-msgs.c (nautilus_window_has_really_changed):
	Quick, kinda-hacky fix for the bug you'd see when you
	switch to "hardware:" and then do go-back.

2000-04-28  Darin Adler  <darin@eazel.com>

	* src/ntl-uri-map.c (async_get_file_info_text):
	Fix bug that prevents non-vfs URIs from working.
	Just need to initialize the async. handle to NULL.

2000-04-28  Darin Adler  <darin@eazel.com>

	This little check-in fixes the last April bug and maybe one or
	two leaks in Nautilus.

	* src/ntl-view.c (nautilus_view_destroy_client): To work around
	the circular reference problem in Bonobo, change a call to
	bonobo_object_unref to bonobo_object_destroy. This fixes the leak
	of the entire viewer each time.

	* src/file-manager/fm-directory-view.c (fm_directory_view_destroy):
	The FMDirectoryView does not own its view_frame. This is confusing
	and needs some reorganization, but it should not unref. It's actually
	the view_frame that owns the directory view despite the fact that
	it's created by the directory view and the directory view holds a
	reference to it! This bug prevented Maciej from doing the workaround
	the last time he tried it.

	* libnautilus-extensions/nautilus-file-changes-queue.c
	(nautilus_file_changes_queue_get),
	(nautilus_file_changes_consume_changes):
	A small cleanup. The global variable was getting in the way.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-main.c (main): Fix a dumbass mistake.  Take out some
	real code from inside an assert.
	
2000-04-28  Darin Adler  <darin@eazel.com>

	Some cleanup inspired by Maciej's check-in.
	
	* libnautilus-extensions/nautilus-directory-async.c
	(ready_callback_call),
	(nautilus_directory_call_when_ready_internal),
	(call_ready_callbacks):
	Made the fix so that call_when_ready works properly when a NULL
	directory is passed in.
	
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_call_when_ready): Fix for call_when_ready with
	a NULL file.
	(nautilus_file_ref), (nautilus_file_list_ref),
	(nautilus_file_list_copy): Filled out the operations on lists.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus-extensions/nautilus-gtk-extensions.c
	(nautilus_gtk_object_list_ref), (nautilus_gtk_object_list_copy):
	Filled out the operations on lists.
	
	* src/ntl-uri-map.c (got_metadata_callback): Factored out the
	call to async get_file_info to simplify the logic.
	(nautilus_navigation_info_new): Took out the check for NULL that
	Maciej mentioned in his notes below now that call_when_ready can
	handle things.
	(nautilus_navigation_info_cancel),
	(nautilus_navigation_info_free): Took out some excessive NULL
	checks when calling routines that work with NULL.

2000-04-28  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-content-view.c (nautilus_content_view_set_active): Fix a
	refcounting problem; make sure to unref the interface we
	query_local_interface for.

	* components/music/nautilus-music-view.oafinfo: Add "audio/x-mp3"
	as directory content type that satisfies the requirement so the
	music view activates automatically (the point of the below
	excercise). Netscape thinks the mime type for mp3's should be
	"audio/x-mpeg" but I am not going to argue.

	Achieved bugzilla tasks #701 and #108, plus did some refactoring
	of the big hairy `got_file_info_callback' function.

	* src/ntl-uri-map.h: add a `files' member to the
	NautilusNavigationInfo struct, a GList of NautilusFiles it
	contains in case it is a directory.
	
	* src/ntl-uri-map.c (got_file_info_callback): Factored out some
	code into separate functions and simplified the control flow. For
	each potential component, test if it matches the content
	requirements before adding it to the list of available content
	view components.

	(make_oaf_query_with_known_mime_type,
	make_oaf_query_with_uri_scheme_only): New function; breaks out the
	logic of constructing an oaf query when the mime type is known and
	unknown repsectively from `got_file_info_callback'.
	(make_oaf_query_with_known_mime_type): Remove the hack to try to
	explicitly exclude the music view.

	(file_list_to_mime_type_hash_table): New utility function; takes a
	GList of NautilusFiles and returns a hash table which has an entry
	for each mime type that at least one of thse files has. This is so
	that we can susequently test if any of the files on the list has a
	particular mime type in constant time.
	(server_matches_content_requirements): New fucntion. Returns true
	if the server record does not require specific content mime types,
	or if it does and the passed hash table contains at least one of
	those.

	(nautilus_view_identifier_new_from_oaf_server_info): New helper
	function to create a NautilusViewIdentifier directly from an
	OAF_ServerInfo record.

	(got_metadata_callback): Initialize the `files' field of the
	navinfo struct to a copy of the file list that
	`nautilus_directory_call_when_ready' gave us; ref all the
	NautilusFiles in this copy.
	(nautilus_navigation_info_new): Ask for the mime types of files in
	the directory as well as for the metadata keys we need.
	(nautilus_navigation_info_cancel): Only try to cancel if the
	navinfo actually has a directory, to avoid segfaulting.
	(nautilus_navigation_info_free): Free the files list. Free both
	this and the directory if and only if they are not NULL.

	
	* src/ntl-uri-map.c (nautilus_navigation_info_new): When
	navinfo->directory is null, call got_metadata_callback directly
	instead of calling `nautilus_directory_call_when_ready' to avoid
	segfaulting on protocols that gnome-vfs does not understand like
	`hardware:'. There is probably a way to fix this in
	`nautilus_directory_call_when_ready' but I did not want to mess
	with it.
	(got_file_info_callback): Renamed from `my_notify_when_ready'.

2000-04-27  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c: include
	<stdlib.h>, my compiler insists on it.

2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	Add a real check for pam.

	* acconfig.h:
	Add HAVE_PAM.
	
	* configure.in:
	Check for pam.
	
	* helper-utilities/authenticate/Makefile.am:
	Use $(PAM_LIBS) instead of hardcoding.

2000-04-27  John Sullivan  <sullivan@eazel.com>

	Fixed bug 660 (Need to publish menu positions for components to use)

	* libnautilus/nautilus-bonobo-ui.h:
	New file, contains #defines for Bonobo-style menu paths for all
	the menus & menu items in Nautilus that we promise components
	will exist.
	* libnautilus/Makefile.am: Include this new header file in library.
	
	* src/nautilus-window-menus.c: Extensive changes, too many to list
	every function. Replaced all the GnomeUIInfo mechanism with
	Bonobo-style menu creation, using the menu paths from
	nautilus-bonobo-ui.h. While I was in here, I also renamed some
	functions (especially xxx_cb -> xxx_callback), tweaked some text, 
	and used some more standard Gnome menu item pixmaps (not sure if I 
	like them or not yet).
	
	* src/ntl-window-private.h,
	* src/ntl-window.c:
	(nautilus_window_back_cb), (nautilus_window_forward_cb),
	(nautilus_window_up_cb), (nautilus_window_home_cb): Replaced
	these GtkWidget-callback style functions (formerly used
	by both menu items and toolbar buttons) with new NautilusWindow
	oriented ones nautilus_window_go_back, nautilus_window_go_forward,
	nautilus_window_go_up, and nautilus_window_go_home.
	(nautilus_window_allow_back), (nautilus_window_allow_forward),
	(nautilus_window_allow_up): replaced hardwired Bonobo menu paths
	with the new #defines.

	* src/nautilus-window-toolbars.c:
	Renamed some functions xxx_cb -> xxx_callback.
	(toolbar_back_callback), (toolbar_forward_callback),
	(toolbar_up_callback), (toolbar_home_callback): New GtkWidget-callback
	style functions used exclusively by the toolbar.
	
	* src/file-manager/fm-directory-view.h:
	Removed FM_DIRECTORY_VIEW_PATH_CLOSE and 
	FM_DIRECTORY_VIEW_PATH_SELECT_ALL, since callers should use
	the paths defined by Nautilus for these.
	
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_merge_menus): Replaced special insider knowledge
	of menu positions with use of the new #defines. Also tweaked with the
	keyboard underscore shortcuts for some items.

2000-04-27  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	Rewrite of the state machine. This adds the new feature that Maciej
	needs where you can call "call_when_ready" to get file attributes.
	
	* libnautilus-extensions/nautilus-directory-private.h:
	Added a file_list_monitored boolean to simplify the logic.
	
	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_destroy): Took advantage of file_list_monitored
	simplification.
	(nautilus_directory_call_when_ready),
	(nautilus_directory_cancel_callback): Tweaked the return_if_fail
	calls to match changes in the async.c file.
	(got_files_callback), (nautilus_self_check_directory):
	Added self-check code to test the new feature.
	
	* libnautilus-extensions/nautilus-string.h:
	* libnautilus-extensions/nautilus-string.c (nautilus_str_compare):
	Added a new function for use with things that take a GCompareFunc
	to avoid a function type cast.

2000-04-27  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undoable.c
	* libnautilus-extensions/nautilus-undoable.h
	* libnautilus-extensions/nautilus-undo-manager.c
	* libnautilus-extensions/nautilus-undo-manager.h
	* libnautilus-extensions/nautilus-undo-transaction.c
	* libnautilus-extensions/nautilus-undo-transaction.h
	* libnautilus-extensions/nautilus-undo-manager-private.h
	Added architecture for undo mechanism.
	NautilusUndoManager maintains undo and redo queues of
	NautilusUndoTransactions as well as maintaining various state
	information pertinant to the user interface.
	NautilusUndoTransaction contains a transaction name and a list of
	NautilusUndoables. NautilusUndoable is a object that contains a
	pointer to an object and a GData object. The GData object
	contains named data that can be added and retrieved during an
	undo/ redo operation. The NautilusUndoable also emits signals to
	the object that enables it to perform the undo and redo
	operations. I will write up more complete documents when the code
	has matured.
	
	* libnautilus-extensions/nautilus-icon-container.c
	* libnautilus-extensions/nautilus-icon-container.h
	* src/file-manager/fm-icon-view.c
	Removed obsolete undo functions and callbacks. These were
	invalidated by the new undo mechanism.

	* src/ntl-main.c
	Added call to nautilus_undo_manager_initialize_global_manager() in
	main. This call initializes a Nautilus global undo manager. Also
	fixed some minor coding style issues.
	
	* nautilus-window-menus.c (edit_menu_undo_callback):
	Added callback to handle selection of Undo item form edit menu.
	Callback checks with Undo Manager for a current undo transaction
	and asks manager to perform an undo if there is one.

2000-04-27  Darin Adler  <darin@eazel.com>

	* MAINTAINERS: Changed to the new Nautilus list instead of the
	old secret list.
	
	* components/notes/ntl-notes.c (notes_load_metainfo):
	* src/file-manager/fm-directory-view.c
	(fm_directory_view_load_uri), (metadata_ready_callback):
	* src/ntl-uri-map.c (got_metadata_callback),
	(nautilus_navigation_info_new):
	Change calls to use new API, but not to use any of the new features,
	which are not yet implemented.
	
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-directory.c
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c
	* libnautilus-extensions/nautilus-file.c
	* libnautilus-extensions/nautilus-file.h:
	Added the new API and moved functions around a bit to prepare
	for the new feature needed by Maciej for getting a list of files.
	
	* libnautilus-extensions/nautilus-file-attributes.h:
	Added an attribute constant for MIME type.
	
2000-04-27  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/genpkg_list.example
	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-protocols.c
	* components/services/install/eazel-install-rpm-glue.c
	* components/services/install/eazel-install-types.h
	* components/services/install/eazel-install-xml-package-list.h
	* components/services/install/eazel-install-xml-package-list.c

	Cleaned up invalid variable names to conform to eazel coding standards.
	Added the genpkg_list option to create a package-list.xml from a
	colon delimited input file.  Created an example file of the input
	called genpkg_list.example.

2000-04-27  Darin Adler  <darin@eazel.com>

	More FIXME-to-bug work.
	
	* check-FIXME.pl: Fixed bug that happens when there are no
	outstanding FIXMEs (hooray!).
	
	* components/hardware/nautilus-hardware-view.c
	(get_RAM_description):
	* components/help/help-method.c (convert_file_to_uri),
	(transform_absolute_file):
	* components/history/ntl-history-view.c
	(hyperbola_navigation_history_select_row), (make_obj), (int):
	* components/html/Makefile.am:
	* components/html/main.c (pdsink_start), (url_requested_cb),
	(view_size_query_cb):
	* components/mozilla/nautilus-mozilla-content-view.c
	(nautilus_mozilla_content_view_load_uri):
	* components/music/nautilus-music-view.c
	(nautilus_music_view_initialize), (nautilus_music_view_destroy),
	(is_mp3_file), (fetch_song_info), (determine_attribute):
	* components/rpmview/nautilus-rpm-view.c
	(nautilus_rpm_view_initialize), (check_installed):
	* components/services/install/eazel-install-rpm-glue.c
	(install_new_packages):
	* components/services/install/eazel-install-types.h:
	* components/services/startup/eazel-register.c (xmlDoc):
	Added bug numbers to FIXMEs, writing bug reports as needed.

2000-04-27  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* configure.in
	* components/services/startup/nautilus-service-startup-view.c,
	* libnautilus-extensions/nautilus-directory-async.c,
	* libnautilus-extensions/nautilus-global-preferences.c,
	* libnautilus-extensions/nautilus-icon-canvas-item.c,
	* src/ntl-uri-map.c:

	Wrote bug reports for all FIXMEs in these files. With
	this checkin and Darin's next one, there should be no
	more FIXMEs in Nautilus without a bug report. 

2000-04-27  Joe Shaw <joe@helixcode.com>

	* components/rpmview/nautilus-rpm-view.c
	(nautilus_rpm_view_update_from_uri): Changed call of fdValidb
	to checking to ensure that file_descriptor != NULL. fdValid was
	removed from RPM 3.0.4 and this bit of code provides the same
	functionality. It'll build on 3.0.4-based systems now (like Red   
	Hat 6.2). Bad Red Hat for breaking reverse compatibility on a
	minor upgrade.

2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-uri-map.c (my_notify_when_ready): Quiet down the mjs
	debug noise for us mortals.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	Add authenticate helper utility to build.

	* Makefile.am:
	Add helper-utilities to build.

	* configure.in:
	Add helper-utilities and helper-utilities/authenticate to build
	using a conditional flag until better pam detection voodoo can be
	written.

	* helper-utilities: New dir.

	* helper-utilities/authenticate: New dir.  A simple utility to
	authenticate a user using PAM and execute a command on their
	behalf.  Still needs some work to be more useful.

	* helper-utilities/authenticate/nautilus-authenticate.h,
	  helper-utilities/authenticate/nautilus-authenticate.c,
	  helper-utilities/authenticate/nautilus-authenticate-pam.c,
	  helper-utilities/authenticate/nautilus-authenticate-fork.c:
	New files.  Code for authenticate helper utility.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	More 'make dist' fixes.  I missed the services dir.

	* components/services/install/Makefile.am:
	  Add missing .h files SOURCES.

	* components/services/startup/Makefile.am:
	  Add missing .h files SOURCES.

	* Makefile.am:
	Add nautilus.png to EXTRA_DIST.

2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	Add gnome panel .desktop file and logo.

	* nautilus.desktop: New panel .desktop file.
	* nautilus.png: New panel nautilus icon.
	* Makefile.am: Install the above 2.  Also install the
	  nautilus-clean.sh script.
	
	* src/run-nautilus: Add dumb script to run nautilus while we work
	  on the rogue process bugs.

	* src/Makefile.am: Install the above script.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	More 'make dist' fixes.  Let automake know about private headers
	so that the dist tarball will contain them.

	* components/help/Makefile.am,
	* components/mozilla/Makefile.am,
	* components/rpmview/Makefile.am,
	* components/sample/Makefile.am:
	Add .h files to SOURCES.

	* libnautilus/Makefile.am:
	Add missing nautilus-zoomable.h to HEADERS.
	Add missing private .h files SOURCES.
	
	* libnautilus-extensions/Makefile.am:
	Add missing .h files to HEADERS.
	Add missing private .h files SOURCES.
	Add missing idl sources top EXTRA_DIST.
	
	* nautilus-widgets/Makefile.am:
	Add missing nautilus-widgets-self-check-functions.h to SOURCES.
	
	* src/Makefile.am:
	Add missing nautilus.h to SOURCES.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/Makefile.am:
	Add .h files to la_SOURCES to make 'make dist' happy.
	
2000-04-27  Maciej Stachowiak  <mjs@eazel.com>

	Fix bugzilla task #106:

	* src/ntl-uri-map.c (mime_type_get_supertype,
	uri_string_get_scheme): Helper functions for generating the
	OAF queries.
	(my_notify_when_ready): Replaced the hardcoded mess with calls to
	a couple of OAF queries. This function still needs major
	additional refactoring. I have also introduced some FIXMEs which
	call attention to problems that were already there in the code in
	most cases.

	* components/hardware/nautilus-hardware-view.oafinfo,
	components/help/hyperbola.oafinfo,
	components/html/ntl-web-browser.oafinfo,
	components/mozilla/nautilus-mozilla-content-view.oafinfo,
	components/music/nautilus-music-view.oafinfo,
	components/notes/ntl-notes.oafinfo,
	components/rpmview/nautilus-rpm-view.oafinfo,
	components/sample/nautilus-sample-content-view.oafinfo,
	components/services/startup/nautilus-service-startup-view.oafinfo,
	components/websearch/ntl-web-search.oafinfo, src/nautilus.oafinfo:
	Added all relevant general, bonobo and nautilus properties to
	content views; some to meta views.	

2000-04-26  Andy Hertzfeld <andy@eazel.com>
	
	added an "About Nautilus" HTML file to the novice home directory
	
	* data/top/About.html: new about file
	* data/top/Makefile.am: added new file
	* libnautilus-extensions/nautilus-file-utilities:
	installed a custom icon for the about file
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c:
	(fs_xfer):
	Fixed a memory thrasher Darin ran into.
	The code in question was just asking for trouble to begin with.
	 
2000-04-26  Andy Hertzfeld <andy@eazel.com>

	fixed bug #683, experts shouldn't get suffix stripped from link file
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	added preference for show_real_file_names
	* libnautilus-extensions/nautilus-global-preferences.c:
	made the user level code set show_real_file_names appropriately
	* libnautilus-extensions/nautilus-link.c:
	use the above preference to control suffix stripping
	 
2000-04-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory.c
	(make_uri_canonical), (is_canonical_uri),
	(nautilus_directory_get), (get_parent_directory_if_exists),
	(nautilus_self_check_directory):
	Added hack for handling "file:/" vs. "file:///" and put a little
	framework in place to help us deal with caonical URIs later.
	
	* src/file-manager/fm-directory-view.c (display_pending_files):
	Fixed a FIXME bug #.

2000-04-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(nautilus_directory_schedule_dequeue_pending_idle),
	(new_files_callback), (nautilus_directory_get_info_for_new_files):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c (call_files_added),
	(call_files_added_free_list) (call_files_changed),
	(call_fiels_changed_free_list), (call_get_file_info_free_list),
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Implemented async. lookup of information about newly arrived
	files. Changed moved files to work without a new call to get
	file information. Fixed some storage leaks.

	* libnautilus-extensions/nautilus-directory-async.c
	(empty_close_callback), (metafile_read_close),
	(nautilus_metafile_read_cancel), (metafile_read_callback),
	(metafile_read_some), (metafile_read_open_callback),
	(metafile_write_callback): Fixed bug where we were not closing
	files when cancelling.  This requires a bug fix in GNOME VFS to be
	effective.

	* libnautilus-extensions/nautilus-directory-async.c
	(dequeue_pending_idle_callback):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_destroy):
	Use new functions in GNOME VFS instead of our own.
	
	* components/html/ntl-web-browser.c (main): Fixed a warning.
	* docs/nautilus.faq: Tweak.

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* libnautilus/nautilus-view-frame.c,
	* libnautilus/nautilus-zoomable.c,
	* libnautilus-extensions/nautilus-icon-text-item.c,
	* libnautilus-extensions/nautilus-link.c,
	* libnautilus-extensions/nautilus-mime-type.c:

	Wrote bug reports for all FIXMEs in these files. Down to 
	45 in Nautilus with no bug report.

2000-04-26  Rebecca Schulman <rebecka@eazel.com>

	Fixed bug #99:  Implemented copy, paste, clear, and cut for text
	Added new files nautilus-clipboard.c,h which contains clipboard
	functionality.  All components with text widgets should use this
	code.  It can just be copied from any existing sample code
	(see ntl-notes.c in the notes component)
	The frame cut, copy and paste stuff is now happy when there is a 
	widget in focus.

	Added
	* libnautilus/nautilus-clipboard.c
	* libnautilus/nautilus-clipboard.h

	Modified
	* src/nautilus-window-menus.c  (turned on clear, fixed up callbacks for
	  cut, copy, and paste buttons)
	* components/notes/ntl-notes.c (Clipboard activated notes text box)
	* components/websearch/ntl-web-search.c (Clipboard activated the search box)

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* check-FIXME.pl: Added the three desktop-drawing files
	that aren't included in the build to the list of files
	in which to ignore FIXMEs.
	
	* nautilus-widgets/nautilus-caption-table.c,
	* nautilus-widgets/nautilus-preferences-group.c,
	* nautilus-widgets/nautilus-preferences.c,
	* src/file-manager/dfos-xfer-progress-dialog.c,
	* src/file-manager/dfos-xfer.c:

	Wrote bug reports for all FIXMEs in these files. Down to 
	54 in Nautilus with no bug report.

2000-04-26  Andy Hertzfeld <andy@eazel.com>

	fixed bug #603, set index panel background image via drag and drop
	
	* libnautilus-extensions/nautilus-background.c:
	fixed bug in nautilus_background_draw_flat_box, where it wasn't
	checking for the image case when deciding to let the parent do
	the drawing.
	* src/ntl-index-panel.c:
	fixed bug where it was losing the background image metadata when
	setting the background color.  Fixed by reading both before
	setting either.
	
2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* src/nautilus-bookmarks-window.c,
	* src/nautilus-location-bar.c,
	* src/nautilus-window-menus.c,
	* src/nautilus-zoom-control.c,
	* src/ntl-main.c,
	* src/ntl-uri-map.c:

	Wrote bug reports for all FIXMEs in these files. Down to 
	71 in Nautilus with no bug report.

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* src/nautilus-index-title.c,
	* libnautilus-extensions/nautilus-gdk-extensions.h,
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(select_font): Moved this function to gdk_extensions
	and renamed it nautilus_get_largest_fitting_font.

	* src/nautilus-index-tabs.c,
	* src/nautilus-index-title.c,
	* src/file-manager/fm-list-view.c,
	* src/file-manager/fm-properties-window.c:
	Wrote bug reports for all (other) FIXMEs in these files. Down to 
	81 in Nautilus with no bug report.

2000-04-26  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	made dropping images on the index panel set the background tile to
	the dropped image.  There's an underlying bug in nautilus-background
	that prevents it from drawing unless a gradient background has been
	previously set up; Darin or I will fix that soon.
	
2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* src/file-manager/fm-directory-list.c: Removed this
	unused file rather than dealing with its FIXMEs (at
	Darin's suggestion).
	
	* src/file-manager/fm-directory-view.c,
	* src/file-manager/fm-icon-view.c:
	Wrote bug reports for all FIXMEs in these files. Down to 90
	in Nautilus with no bug report.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* doc/nautilus.faq: Added faq.
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-directory-view.c:
	Change a FIXME bug number after getting rid of a duplicate bug.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/Makefile.am: Install .h files in the
	right place.

	* nautilus.spec.in: New file.  First try at a rpm spec.  Not
	expected to quite work yet.

	* .cvsignore: Ignore the generated spec.

	* Makefile.am,
	  configure.in: Add nautilus.spec file to build.

2000-04-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(nautilus_directory_file_monitor_add):
	Fixed an assert that was breaking "make check".
	
	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_moved):
	Updated bug numbers on FIXMEs in here.

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* libnautilus-extensions/nautilus-directory.c,
	* libnautilus-extensions/nautilus-file-utilities.c,
	* libnautilus-extensions/nautilus-file.c,
	* libnautilus-extensions/nautilus-icon-factory.c:

	Wrote bug reports for all FIXMEs in these files.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-password-dialog.c,
	  nautilus-widgets/nautilus-password-dialog.h,
	  test-nautilus-widgets.c: Add a password dialog widget.  It
	doesnt do the actual authentication, just the widgetry.

	* nautilus-widgets/test-nautilus-widgets.c: Add new test for
	password dialog, and properly call gnome_init() instead of
	gtk_init() to prevent imlib braindamage. 

	* nautilus-widgets/nautilus-caption-table.c: Style dumbness.
	
2000-04-26  Ian McKellar  <yakk@yakk.net>

	* components/hardware/nautilus-hardware-view.c:
	Made the hardware view detect all the CPUs in the system and 
	display an icon for each.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-caption-table.c,
	  nautilus-widgets/nautilus-caption-table.h,
	  test-nautilus-widgets.c: Add a caption table widget which i will
	later use for a password prompt dialog.
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* librsvg/test-rsvg.c:
	Make it build:
	Add a workaround const cast for poptGetContext that thinks it's using
	const properly.
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-directory-view.c
	* src/file-manager/fm-directory-view.h:
	(bonobo_menu_open_in_new_window_cb), (bonobo_menu_delete_cb),
	(bonobo_menu_duplicate_cb), (fm_directory_view_get_model),
	(fm_directory_view_delete_with_confirm), (append_uri_one),
	(fm_directory_duplicate_selection), (compute_menu_item_info),
	(fm_directory_view_real_append_selection_),
	(fm_directory_view_real_merge_menus),
	(fm_directory_view_real_update_menus), (free_file_by_uri_map),
	(fm_directory_view_get_context_menu_index):
	Added "Move to Trash" and "Empty Trash" menu items.
	Disabled the existing Delete code (I'll scavenge it later to implement
	Delete as a fallback.)
	
	* src/file-manager/dfos-xfer.h:
	* src/file-manager/dfos-xfer.c (file_operation_alert), (fs_xfer),
	(get_parent_make_name_list), (fs_move_to_trash):
	Add move to trash and empty trash calls.


	* libnautilus-extensions/nautilus-file-changes-queue.c
	(nautilus_file_changes_queue_get_change),
	(nautilus_file_changes_consume_changes):
	Fix a problem with nautilus_file_changes_consume_changes getting called
	when there is no change allocated yet.

	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Got rid of old debugging code.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-clean.sh: Give this thing a -q flag to quiet down noise.

2000-04-26  J. Shane Culpepper  <pepper@eazel.com>
	*components/services/install/eazel-install.c
	*components/services/install/Makefile.am
	*components/services/install/eazel-install-metadata.c
	*components/services/install/eazel-install-metadata.h
	*components/services/install/eazel-install-protocols.h
	*components/services/install/eazel-install-protocols.c
	*components/services/install/eazel-install-rpm-glue.c
	*components/services/install/eazel-install-rpm-glue.h
	*components/services/install/eazel-install-tests.h
	*components/services/install/eazel-install-tests.c
	*components/services/install/eazel-install-utils.c
	*components/services/install/eazel-install-utils.h
	*components/services/install/eazel-install-xml-package-list.h
	*components/services/install/eazel-install-xml-package-list.c
	*components/services/install/helixcode-install-utils.c
	*components/services/install/helixcode-install-utils.h
	Adding the new files for eazel-install.  Basically the same as before
	but broken up better for further development.

2000-04-26  J. Shane Culpepper  <pepper@eazel.com>

	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-xml.h
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-rpm.h
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-debug.h
	* components/services/install/eazel-install-lib-util.h
	* components/services/install/eazel-install-lib-util.c

	Removing current installer in order to checkin the new structure

2000-04-25  Ramiro Estrugo  <ramiro@eazel.com>

	Simplified preferences api by letting gconf do most of the work.
	Removed usage of global preferences from everywhere.  There is no
	longer a global preferences object.  All preference peek/poke
	operations are done through a gconf client thing.

	* components/history/ntl-history-view.c:
	(main): Call nautilus_preferences_initialize()

	* libnautilus-extensions/nautilus-global-preferences.c:
	Removed usage of global preferences.

	* libnautilus-extensions/nautilus-icon-container.c:
	Remove usage of unneeded global preferences.

	* libnautilus-extensions/nautilus-icon-factory.c
	Remove usage of unneeded global preferences.

	* libnautilus-extensions/nautilus-list.c:
	Remove usage of unneeded global preferences.

	* nautilus-widgets/nautilus-preference.c
	  nautilus-widgets/nautilus-preference.h:
	Remove all default_value related crap.  Not needed no more.  Let
	gconf worry about default values.

	* nautilus-widgets/nautilus-preferences-group.c,
	  nautilus-widgets/nautilus-preferences-group.h:
	(nautilus_preferences_group_add_item): 
	No longer need to pass in preferences.

	* nautilus-widgets/nautilus-preferences-item.c,
	  nautilus-widgets/nautilus-preferences-item.h:
	No longer need to store a reference to a preferences object in our
	class.  Also,  no longer need to pass in preferences to any
	function.

	* nautilus-widgets/nautilus-preferences-pane.c,
	  nautilus-widgets/nautilus-preferences-pane.h:
	(nautilus_preferences_pane_add_item_to_nth_group): No longer need
	to pass in preferences.

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h:
	Remove the NautilusPreferences class.  Gconf does the thinking for
	preferences now and there is no need to divide things up by
	domain - thus no need for multiple preference objects.  The api
	was changed to reflect this.  All preferences peek/poke operations
	go through a global gconf_client thing.

	Removed the storing and usage of a value.  Gconf and only it
	stores values for preferences.

	Use gconf for callback notifications.

	* nautilus-widgets/test-nautilus-widgets.c: Update for the above
	changes.
	
	2000-04-25  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-clean.sh: Return 0 at the end of the script so that it
	can be used like this: nautilus-clean.sh && ./src/nautilus

	* src/nautilus-window-menus.c:
	(use_eazel_theme_icons_cb): No longer need to use global
	preferences. 

	* src/ntl-main.c:
	(main): Call nautilus_preferences_initialize, not
	nautilus_preferences_init.
	
	* src/ntl-uri-map.c:
	(add_meta_view_iids_from_preferences): No longer need to use
	global preferences.  Also, changed the default value passed in to
	FALSE so that only meta views that are explicitly turned on
	(somewhere else) show up.

	* src/ntl-window-state.c:
	(nautilus_window_set_initial_state): No longer need to use
	global preferences.  

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize): No longer need to use
	global preferences.  
	
	* src/file-manager/fm-icon-text-window.c:
	(changed_attributes_option_menu_cb), (create_icon_text),
	(fm_icon_text_window_destroy_cb),
	(fm_get_text_attribute_names_preference_or_default): No longer
	need to use global preferences.  
	
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_initialize), (fm_icon_view_destroy), : No longer
	need to use global preferences.  

2000-04-25  Darin Adler  <darin@eazel.com>

	This change requires a new gnome-vfs.

	* HACKING: Updated URL for popt.
	
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_update_from_uri):
	Changed to use FD_t for real instead of casting a pointer to a
	raw file descriptor to it.

	* libnautilus-extensions/nautilus-directory-async.c:
	Told it to load 32 items at a time instead of 1.
	I think it's time we try this. It seems to work.

	* src/ntl-uri-map.c (my_notify_when_ready),
	(got_metadata_callback): Change to use the new version of
	async. get_file_info.

2000-04-25  Andy Hertzfeld <andy@eazel.com>

	made drag and drop to and from the location bar work properly
	
	* src/nautilus-location-bar.c:
	changed the exported drag action to GDK_ACTION_LINK, as well as making
	it accept links.  Fixed crashes in drag_data_get by referencing the
	actual location bar instead of the event box, and by not destroying
	the result from gtk_entry_get_text, since it's not a copy.  Made it
	actually go to the dropped in uri by emitting the location changed
	signal.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	* data/mime/nautilus.keys
	
	Removed [en_US] from file-type human-readable descriptions.
	Added text explaining how to add a localized description.
	This fixes problem where if your language variable isn't
	set you get raw MIME types instead of human-readable descriptions.	

2000-04-25  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* libnautilus-extensions/nautilus-icon-container.c,
	* libnautilus-extensions/nautilus-icon-dnd.c:
	Wrote bug reports for all FIXMEs in these files.

2000-04-25  J. Shane Culpepper  <pepper@eazel.com>

	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-debug.c

	Added command line otions to set remote server and local download
	directory.  Did more cleaning and testing of the automatic http
	download options.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* libnautilus-extensions/nautilus-list.c,
	* libnautilus-extensions/nautilus-list-column-title.c:
	Wrote bug reports for all FIXMEs in these files.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	Started going through the FIXMEs adding bug reports
	and fixing some trivial ones. 14 down, 152 Nautilus
	FIXMEs to go.

	* src/ntl-index-panel.c:
	Wrote bug reports for all FIXMEs in this file.
	
	* src/ntl-window-msgs.c,
	* src/ntl-window-private.h,
	* src/ntl-window.c:
	(view_menu_switch_views_callback), 
	(nautilus_window_load_content_view_menu): Moved functions from
	ntl-window-msgs.c to ntl-window.c. Updated private header file
	as necessary.
	
	Wrote bug reports for all other FIXMEs in these files.

2000-04-25  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	removed debugging statement that was accidentally checked in and
	fixed glitch where the title tab was a bit separated from the view
	
2000-04-25  Andy Hertzfeld <andy@eazel.com>

	fixed bug 519: dead space in sidebar
	
	* src/ntl-index-panel.c:
	removed set_usize call that was setting the meta-views to a fixed size;
	instead, set the expand and fill parameters to the box pack call to
	true, so the metaview is sized to fill the available space
	
	fixed bug 362: tab color is settable but not remembered
	
	* libnautilus-extensions/nautilus-metadata.h:
	added new metadata tags for the main tab and title tab colors
	* src/nautilus-index-tabs.c,h:
	added nautilus_index_tabs_set_color to set the tab color
	* src/ntl-index-panel.c:
	set the metadata in receive_dropped_color and set the tab color
	from the stored metadata in index_panel_update_info
	
2000-04-25  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-rpm.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-xml.h
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-util.h
	* components/services/install/eazel-install-lib-util.c
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-debug.h

	Adding http fetch of remote rpm files.  Minor cleanups.  Adding credit
	to Joe Shaw <joe@helixcode.com> for portions of the current prototype.
	This should have been done at the very beginning.  The idea for using
	gnet and large chunks of the current xml parsing come from his work on
	the Helix Code install/updater.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	Fixed part of bug 556 (nautilus_file_can_rename returns
	TRUE for /root, but shouldn't). Only remaining issue is
	the no-nautilus-file-for-/ problem, which is already written
	up separately.
	
	Fixed bug 546 (Folders/files without read permissions should
	not be viewable).
	
	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_denies_access_permission): New private
	function that checks permissions, including checking
	whether the current user is the owner or in the group
	of the queried file. If permissions aren't valid, returns
	FALSE.
	(nautilus_file_can_read), (nautilus_file_can_write),
	(nautilus_file_can_execute): New public functions that
	use nautilus_file_denies_access_permission to determine
	which access permissions the current user has. They return
	TRUE if permissions aren't valid, so callers still have to
	be prepared to handle failures.
	(nautilus_file_can_rename): Now calls nautilus_file_can_write
	on the parent directory. Formerly it was just checking the
	permission flags directly, ignoring whether the current user
	was the owner or not. This fixes part of bug 556.
	
	* src/ntl-window-msgs.c:
	(handle_unreadable_location): New private function, puts up
	an alert if the user tries to switch to an unreadable location.
	(nautilus_window_request_location_change): Try 
	handle_unreadable_location before starting up the state transition.
	This fixes bug 546.
	
	* src/file-manager/fm-error-reporting.c: 
	(fm_report_error_renaming_file): Add missing _()'s around messages.

2000-04-25  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(metafile_read_complete): Re-removed mismerged assert
	from Andy's change.
	* libnautilus-extensions/nautilus-directory-private.h:
	Organized the header a bit.

2000-04-25  Ettore Perazzoli  <ettore@helixcode.com>

	* libnautilus/Makefile.am
	(nautilus_view_component_idl_stamp): Use `$(srcdir)' in
	`nautilus_view_component_idl_sources' to make sure compilation
	works with builddir != srcdir.

2000-04-24  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (my_notify_when_ready): Updated for OAF-ized
	EOG.

2000-04-24  Darin Adler  <darin@eazel.com>

	* components/music/nautilus-music-view.c
	(nautilus_music_view_update_from_uri): Spacing tweak.
	
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-directory-async.c:
	* libnautilus-extensions/nautilus-file.c:
	Moved half of nautilus-directory.c into a new file as a first step
	in cleaning up the state machine a bit.

2000-04-24  Andy Hertzfeld <andy@eazel.com>

	changed the location of the novice home directory, and gave it
	a custom icon
	
	* libnautilus-extensions/nautilus-file-utilities.c:
	renamed routines from "top" to "main", and changed the install location
	from ~/.nautilus/top to ~/Nautilus, and set a custom icon for it
	* libnautilus-extensions/nautilus-file-utilities.h:
	changed nautilus_user_top_directory to nautilus_user_main_directory
	* libnautilus-extensions/nautilus-directory.c
	disabled assert that was firing due to async metadata reading, but
	tagged it with a FIXME so we can put it back when the framework is
	completed
	* libnautilus-extensions/nautilus-global-preferences.c:
	made it use newly renamed routine to access directory
	* icons/nautilus-logo.png:
	added new icon for the novice home directory
	* icons/Makefile.am:
	added new icon to build
	
2000-04-24  J. Shane Culpepper  <pepper@eazel.com>

	* configure.in
	* components/services/install/Makefile.am
	Adding a gnet configure option to remove hardcoded makefile references.

2000-04-24  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-grid.c:
	Refactored the grid to use a variable-size grid that sizes itself
	to the items in the grid.
	
	* libnautilus-extensions/nautilus-file-utilities.c
	(nautilus_user_top_directory): Formatting tweak.
	
	* libnautilus-extensions/nautilus-gtk-extensions.c
	(nautilus_pop_up_context_menu): Got rid of gpointer cast, since
	George's "find bad casts" grep found it and it's not needed.
	
	* nautilus-widgets/test-preferences.c: Got rid of gpointer cast,
	since George's "find bad casts" grep found it and it's not needed.

2000-04-24  Darin Adler  <darin@eazel.com>

	* components/rpmview/Makefile.am:
	* components/services/install/Makefile.am:
	Fixed a few things in these make files. There's still a lot to be fixed.
	The most important fix was to add OAF_CFLAGS and OAF_LIBS. Without that
	the build was failing. But these files still have a hard-coded
	/usr/include path for librpm.

2000-04-24  J. Shane Culpepper  <pepper@eazel.com>

	* HACKING
	Updating hacking to reflect the new gnet dependency.

2000-04-24  Andy Hertzfeld <andy@eazel.com>

	changed link file suffix to .link
	
	* data/top/Computer-ntl.xml: removed file
	* data/top/Computer.link: new file
	* data/top/Makefile.am: adjusted accordingly
	* data/top/Services-ntl.xml: removed file
	* data/top/Services.link: added file
	* libnautilus-extensions/nautilus-link.c,h:
	changed suffix from "ntl-link" to "link"
	
	made links more transparent in list view
	
	* libnautilus-extensions/nautilus-file.c:
	make nautilus_file_get_string_attribute know about links
	* src/file-manager/fm-directory-view.c:
	map filename for links in status bar	
	
	added hardware view component for novice home directory.  Use /proc as source of info,
	but will probably move to libgtop
	
	* configure.in: added hardware view component's directories
	* nautilus-clean.sh: added component to list to be cleaned
	* components/Makefile.am: added hardware view component
	* components/hardware/.cvsignore: ignore generated files
	* components/hardware/Makefile.am: makefile for new component
	* components/hardware/main.c: standard component bonobo glue
	* components/hardware/nautilus-hardware-view.c: the actual code
	* components/hardware/nautilus-hardware-view.h: definitions for the component
	* components/hardware/nautilus-hardware-view.oafinfo: activation file
	* components/hardware/icons/.cvsignore: ignore generate files
	* components/hardware/icons/Makefile.am: icons to use in the hardware view
	* components/hardware/icons/cpu.png: cpu image
	* components/hardware/icons/memory_chip.gif: memory image
	* src/ntl-uri-map.c: we still have to kludge here to add new protocols
	
	* components/rpmview/nautilus-rpm-view.c:
	changed default background color of package view
	
2000-04-23  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install.c
	* components/services/install/Makefile.am
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-xml.h

	Added the http fetch of a package list from a remote server. Still 
	need to add http fetch of the rpm files.

2000-04-23  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-xml.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-debug.h
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-rpm.h
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-util.h
	* components/services/install/eazel-install-lib-util.c

	Broke up eazel-install-lib.h to appropriate headers for each source
	file.  Did a little cleaning so that functions are more modular. 
	Setting everything up so that lib functions can be moved to a separate
	services library down the road.

2000-04-23  Martin Baulig  <martin@home-of-linux.org>

	* configure.in: Check for -lrpm and its dependency libs.
	On success, define HAVE_RPM and AC_SUBST(RPM_LIBS).
	Added BUILD_RPMVIEW_COMPONENT automake conditional.
	* acconfig.h (HAVE_RPM): Added.

	* components/Makefile.am: Conditionally compile rpmview.

	* components/rpmview/Makefile.am: Use $(RPM_LIBS) rather than
	-lrpm so we get the correct dependency libs such as -lgz2.

2000-04-22  J. Shane Culpepper  <pepper@eazel.com>
	
	* libnautilus-extensions/libnautilus-extensions.h
	Fixing build bustage in components/help.  The header was pointing to
	files in libnautilus instead of libnautilus-extensions.

2000-04-21  Gene Z. Ragan  <gzr@eazel.com>
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c
	* libnautilus-extensions/nautilus-icon-canvas-item.h
	(nautilus_icon_canvas_item_get_max_text_width):
	Return value of MAX_TEXT_WIDTH constant.  Used is positoning the rename
	text widget.

	* libnautilus-extensions/nautilus-icon-container.c
	Added signal "icon_text_edit_occurred" called when the text rename widget
	recieves some sort of edit, such as a keyboard entry.
	(rename_text_dirty):  Returns boolean indicating edit state of
	text in rename widget.  Used in undo operation.
	(text_edited_callback):  Signal callback called when NautilusIconTextItem
	text is edited.
	(nautilus_icon_container_start_renaming_selected_item):  Fixed positioning
	code to address bug #543
	(nautilus_icon_container_undo_renaming_selected_item):  Added simple undo
	code.  This needs to be replaced with a global undo system.

	* libnautilus-extensions/nautilus-icon-text-item.c
	(iti_paint_text):  Fixed drawing of i-beam to address bug #506
	(iti_event): Added keyboard handling for simple undo
	(nautilus_icon_text_item_get_margins):  Returns values of MARGIN_X and
	MARGIN_X constants.  Used when positioning text item in canvas.

	* src/file-manager/fm-directory-view.c
	Moved menu item title constants to header file.  This is needed so
	FMIconView can get menu position paths when placing items in the
	bonobo and contect menus.  Renamed the constants to be specific to
	FMDirectoryView.
	(fm_directory_view_get_context_menu_index):  Added function to return
	index of requested menu item.
	
	* src/file-manager/fm-icon-view.c
	(fm_icon_view_icon_text_edit_callback):  Callback that connect to
	NautilusIconContainer signal.
	(undo_rename_icon_callback): Added simple undo functionality.
	(insert_one_context_menu_item): Added function to insert context menu
	add a specific index.
	Fixed bug #499, Rename menu in bad place in context menu.

2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	* components/history/ntl-history-view.c:
	Yank rogue puts()

2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	* components/history/ntl-history-view.c:
	Call nautilus_preferences_init to make sure gconf is in business
	before we call it.

2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	Switched us to use gconf instead of gnome_config.  There is still
	lots of crufty preferences code that can be simplified a lot,
	since gconf does a lot of work for us.

	* components/help/Makefile.am
	* components/history/Makefile.am
	* components/html/Makefile.am
	* components/music/Makefile.am
	* components/notes/Makefile.am
	* components/rpmview/Makefile.am
	* components/sample/Makefile.am
	* components/services/install/Makefile.am
	* components/services/startup/Makefile.am
	* components/websearch/Makefile.am
	* nautilus-widgets/Makefile.am
	Add GCONF_CFLAGS and GCONF_LIBS where needed.

	* nautilus-widgets/nautilus-preference.c:
	Removed a rogue unused include.

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h:
	Straight forward switch from gnome_config api to gconf api.
	(gnome_config_make_string):  Retired, cause thankfully we dont
	need to make up dumb strings with a default value appened to the
	end. All praise gconf.
	(nautilus_preferences_init): Add a init function to make sure
	gconf is properly initialized.  This needs some cleanup wrt the
	global preferences crap.  Im planning to clean that up in my next
	checkin.

	* nautilus-widgets/test-nautilus-widgets.c:
	Fixed for gconf changes.

	* src/ntl-main.c:
	Call nautilus_preferences_init to make sure gconf is in business
	before we call it.
	
2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-window-state.h,
	  src/ntl-window-state.c: (nautilus_window_save_state)
	(nautilus_window_load_state): Retired these two old and unused
	functions.  We dont use gnome_config to store metaview state no
	more.
	
2000-04-20  Darin Adler  <darin@eazel.com>

	* components/history/ntl-history-view.c
	(hyperbola_navigation_history_notify_location_change):
	Fixed a typo that was causing the history view to fail.
	
	* components/music/nautilus-music-view.c
	(nautilus_music_view_initialize_class),
	(nautilus_music_view_initialize), (setup_title_font),
	(nautilus_music_view_realize):
	Changed to use new nautilus_gtk_widget_set_font_by_name
	and got rid of the old realize hack.
	
	* components/rpmview/nautilus-rpm-view.c
	(nautilus_rpm_view_initialize):
	Added a FIXME about how it's bad to hard-wire a font.
	
	* components/services/startup/nautilus-service-startup-view.c
	(setup_title_font), (setup_form_title),
	(nautilus_service_startup_view_initialize),
	(nautilus_service_startup_view_realize),
	(nautilus_service_startup_view_load_uri):
	Changed to use new nautilus_gtk_widget_set_font_by_name
	and got rid of the old realize hack.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus-extensions/nautilus-gtk-extensions.c
	(nautilus_gtk_style_set_font): Made public.
	(nautilus_gtk_widget_set_font): Added comments and checks on
	the parameters.
	
	* libnautilus-extensions/nautilus-icon-container.c (relayout),
	(idle_handler), (nautilus_icon_container_move_icon),
	(world_width_changed), (end_stretching), (button_release_event),
	(handle_icon_button_press), (nautilus_icon_container_add_auto),
	(nautilus_icon_container_remove),
	(nautilus_icon_container_set_auto_layout):
	Some tweaks for auto-layout mode. Made it work better with
	stretching by not laying out the currently-stretched icon,
	simplified the code a bit, and made it relayout when an icon
	is removed.
	
	* src/file-manager/fm-directory-view.c (compute_menu_item_info),
	(fm_directory_view_real_merge_menus):
	Got rid of the "..." from "Delete...". On Macintosh, at least,
	the "..." is only used when the dialog is something that adds
	parameters to the command, not when it's just a confirmation.
	
	* src/nautilus-index-title.c (update_font),
	(nautilus_index_title_update_label),
	(nautilus_index_title_update_info):
	Changed to use new nautilus_gtk_widget_set_font and
	nautilus_gtk_widget_set_font_by_name.

	* src/ntl-index-panel.c (nautilus_index_panel_remove_meta_view):
	Made the index panel do *slightly* better when a meta view
	fails to load.

	* components/help/hyperbola-main.c (main):
	Fixed a warning.
	
2000-04-20  Maciej Stachowiak  <mjs@eazel.com>

	* configure.in: Add back tests erroneously removed in the last
	checkin.

2000-04-20  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_moved):
	Darin helped me finish implementing the missing parts of the call,
	including updating the reference to the new directory object,
	updating the file info structure to match the file's new location.
	Fixed a silly bug in an if statement.
	
	* libnautilus-extensions/nautilus-file-changes-queue.c:
	Fixed another silly bug where 'file moved' notifications were
	misinterpreted as file-removed ones.
	
2000-04-20  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-gtk-extensions.c,h:
	added utility routines (written by Darin on my machine) to set the
	font associated with a widget
	* components/rpm-view/nautilus-rpmview.c:
	used the new routine to set the font of the package title.
	
2000-04-20  Andreas Hyden  <a.hyden@cyberpoint.se>

	* configure.in: Added sv to ALL_LINGUAS.

2000-04-19  Darin as Andy  <darin@eazel.com>

	* libnautilus-extensions/nautilus-graphic-effects.c:
	(nautilus_make_semi_transparent), (create_new_pixbuf_with_alpha):
	Create a new pixbuf that has an alpha channel even if the original
	pixbuf didn't!

2000-04-19  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_added):
	Work on making new files show up during copy. This is a simple
	version using sync gnome_vfs_get_file_info calls, we'll need a
	version that uses a new async get_file_info call that takes a list
	of URIs and produces a list of file info structs.
	
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-file.c:
	* libnautilus-extensions/nautilus-file.h:
	(update_file_info_in_list_if_needed), (dequeue_pending_idle_callback),
	(nautilus_file_update):
	Made dequeue_pending_idle_callback deal with getting duplicate
	file info structures or file info structures for files we already
	know about. This also fixes 395.

	* libnautilus-extensions/nautilus-file-changes-queue.c
	Added some better comments and removed a fixme that didn't really
	need fixing.

2000-04-19  John Sullivan  <sullivan@eazel.com>

	Darin and I started out thinking we were going to start entering
	bugs for the FIXME items but we were distracted into fixing bugs
	and tweaking code that we found while doing so.
	
	* check-FIXME.pl: Won't search old ChangeLogs for FIXMEs either;
	changed FIXME format from "FIXME bug xxx" to "FIXME bugzilla.eazel.com xxx"
	
	* components/history/ntl-history-view.c:
	(hyperbola_navigation_history_notify_location_change): Moved bookmark
	naming hack here and added FIXME explaining it.
	
	* libnautilus-extensions/nautilus-bookmark.h,
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_new), (nautilus_bookmark_new_with_name):
	Combined these two into one routine that takes both the uri and
	title; removed hack for trying to come up with good name for
	bookmark here.
	(nautilus_bookmark_get_pixmap_and_mask): Changed to call
	_get_pixbuf instead of duplicating code.
	(nautilus_bookmark_get_pixbuf): Changed interface to return
	pixbuf or NULL instead of boolean result & "out" parameter.
	
	* src/nautilus-bookmark-list.c,
	* src/nautilus-bookmarks-window.c,
	* src/nautilus-window-menus.c,
	* src/ntl-window-msgs.c: 
	Updated callers of nautilus_bookmark_new and _new_with_name.

2000-04-19  John Sullivan  <sullivan@eazel.com>

	Fixed bug 540 (need specific error message for "access denied"
	when renaming)

	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_renaming_file): Added case for
	GNOME_VFS_ERROR_ACCESSDENIED

2000-04-19  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-rpm.c
	Fixed Uninstall to work as advertised.  Uninstall will also skip
	source packages now since they are not stored in the rpmdb.

2000-04-19  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install.c
	Tweaked the packages struct so that rpm names are no longer
	hardcoded.  Added a the option to do dry runs without actually
	installing anything.  Good for testing.

2000-04-19  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(world_width_changed): New function, extracted from size_allocate.
	(size_allocate): Call world-width-changed.
	(nautilus_icon_container_set_zoom_level): Call world_width_changed.
	This makes zooming relayout when in auto-layout mode.
	
	* src/nautilus-window-menus.c:
	(append_bookmark_to_menu): Added line where bookmark is set in
	BookmarkHolder. This had been accidentally deleted, breaking all
	bookmarks.

2000-04-19  Pablo Saratxaga <pablo@mandrakesoft.com>

	* configure.in (ALL_LINGUAS): Added Danish language

2000-04-19  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install.c
	Adding configuration file generator and creating a metadata directory.
	A directory called /etc/eazel/services will be created to store
	cofiguration options and uninstall data now.

2000-04-19  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-view.c (nautilus_view_destroy_client): Reverted the last
	change, it caused serious crashage in some cases.

	* src/ntl-view.c (nautilus_view_destroy_client): Destroy the
	ViewFrame instead of unreffing. This is the only way to be sure
	the Control is fully unref()d. Ideally Bonobo would let us unbind
	the frame from the control to break the circular refs.
	
	* configure.in: Check for OAF the oficially approved way. Check
	for GConf.

	* src/ntl-uri-map.c (my_notify_when_ready): Fix fallback_iid for
	moz protocol.
	* components/mozilla/main.c (main): Remove ev variable to shut up gcc.
	
	* src/ntl-app.c, components/notes/ntl-notes.c: Remove some
	spurious debugging statements I accidentally left in.
	

	OAF conversion. You must now build bonobo and gnome-vfs with --enable-oaf

	* configure.in: Check for OAF

	* libnautilus/nautilus-view-component.idl: Inherit from
	Bonobo::Unknown instead of GNOME::Unknown.

	* libnautilus-extensions/nautilus-global-preferences.c,
	libnautilus-extensions/nautilus-global-preferences.h: Refer to
	meta views by OAFIID, not GOAD ID.

	* src/ntl-uri-map.c (my_notify_when_ready): Replaced hardcoded
	list of GOAD IDs with a hardcoded list of OAFIIDs.
	(add_components_from_metadata): Changed the expected format; it is
	now label=component instead of component:label since OAFIIDs
	contain colons.

	* src/ntl-view.c (nautilus_view_destroy_client): unref the
	Zoomable interface of the View, if any.

	* src/file-manager/dfos-corba.c, src/file-manager/dfos.c: replace
	GOAD calls with OAF ones; untested since this code is not really
	used right now.

	* src/ntl-main.c: Use OAF calls to intialize CORBA.

	* src/ntl-app.c: Replace GOAD IDs with OAFIIDs. Use
	Bonobo_Generic_Factory instead of GNOME_Generic_Factory to make
	the linker happy. Register the factory server with OAF, not GOAD.

	* src/nautilus.h: Include <liboaf/liboaf.h> instead of <libgnorba/gnorba.h>


	* components/help/Makefile.am, components/history/Makefile.am,
	components/html/Makefile.am, components/mozilla/Makefile.am,
	components/music/Makefile.am, components/notes/Makefile.am,
	components/rpmview/Makefile.am, components/sample/Makefile.am,
	components/services/startup/Makefile.am,
	components/websearch/Makefile.am, libnautilus/Makefile.am,
	libnautilus-extensions/Makefile.am, src/Makefile.am,
	src/file-manager/Makefile.am: Updated for OAF; install .oafinfo
	files instead of .gnorba.

	* components/help/hyperbola-main.c,
	components/history/ntl-history-view.c,
	components/html/ntl-web-browser.c, components/mozilla/main.c,
	components/music/main.c, components/notes/ntl-notes.c,
	components/rpmview/main.c, components/sample/main.c,
	components/services/startup/main.c,
	components/websearch/ntl-web-search.c: Convert to OAF; use OAFIIDs
	and oaf intialization functions.

	* src/nautilus.oafinfo, components/help/hyperbola.oafinfo,
	components/history/ntl-history-view.oafinfo,
	components/html/ntl-web-browser.oafinfo,
	components/music/nautilus-music-view.oafinfo,
	components/notes/ntl-notes.oafinfo,
	components/rpmview/nautilus-rpm-view.oafinfo,
	components/services/startup/nautilus-service-startup-view.oafinfo,
	components/websearch/ntl-web-search.oafinfo,
	components/sample/nautilus-sample-content-view.oafinfo,
	components/mozilla/nautilus-mozilla-content-view.oafinfo: New OAF
	activation records.
	
	* src/nautilus.goad, components/help/hyperbola.goad,
	components/history/ntl-history-view.goad,
	components/html/ntl-web-browser.goad,
	components/music/nautilus-music-view.goad,
	components/notes/ntl-notes.goad,
	components/rpmview/nautilus-rpm-view.goad,
	components/services/startup/nautilus-service-startup-view.goad,
	components/websearch/ntl-web-search.goad,
	components/sample/nautilus-sample-content-view.goad,
	components/mozilla/nautilus-mozilla-content-view.goad: Removed.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in,
	  acconfig.h: Add support for setting a reasonable default for
	MOZILLA_FIVE_HOME - which mozilla needs to survie.

	* components/mozilla/main.c: (mozilla_setup_environment) Add a
	function to hack the mozilla environment into something that might
	have a chance of working by default.

	* src/ntl-uri-map.c: Add a temporary hack protocol moz:// to test
	mozilla in isolation from gnome-vfs trying to do http stuff.

	* components/mozilla/nautilus-mozilla-content-view.c: Match the
	above.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in: Add voodoo to support --with-mozilla.

	* components/Makefile.am: Add conditional build of mozilla subdir.

	* components/mozilla/Makefile.am: Un-hardcode cflags and libs.
	Use the values set in configure instead.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-clean.sh: Grep out "emacs" so that this nice script
	doesnt kill my editor when i happen to be editting the source to
	component in question.
	
2000-04-18  Andy Hertzfeld

	made link files control the additional text displayed beneath them.
	
	* libnautilus/nautilus-link.c,.h:
	added nautilus_link_get_additional_text, which returns text specified
	in the xml file, if any,
	* libnautilus/nautilus-metadata.h:
	added tag to use for the additional text in the link file
	* src/file-manager/fm-icon-view.c:
	made it get additional text for link files using the new
	routines in nautilus-link
	* data/top/Makefile.am:
	removed the placeholder "Welcome" file from the novice home directory
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/.cvsignore: Ignore built binary

	* components/mozilla/Makefile.am: Link with the right stuff.  Link
	only against libnautilus to be legit.

	* components/mozilla/nautilus-mozilla-content-view.h,
	  components/mozilla/nautilus-mozilla-content-view.c: Dont use
	code from libnautilus-extensions.  Fix struct tag names.  

2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h:

	Simplify be removing all arguments from callbacks save for the
	user data.

	(nautilus_preferences_add_string_callback): Rename to
	nautilus_preferences_add_callback since string preferences are the
	default.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(user_level_changed_callback): Simplify a bit.  Update for new
	simple preference callbacks.

	  libnautilus-extensions/nautilus-icon-container.c,
	  libnautilus-extensions/nautilus-icon-factory.c,
	  libnautilus-extensions/nautilus-list.c: Update for new simple
	preference callbacks.

	* src/file-manager/fm-directory-view.c,
	  src/file-manager/fm-icon-view.c: Update for new simple
	preference callbacks. 

	  src/file-manager/fm-icon-text-window.c: Update for new
	simple preference callbacks and removed unecessary usage of
	icon_view_text_attribute_changed_callback. Use
	synch_menus_with_preference directly instead.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	*  nautilus-widgets/nautilus-preferences.c:
	(nautilus_preferences_get):  If the stored default value is null,
	use the given one.  Do this only for strings, since integral types
	can legally have a value of zero.

	* nautilus-widgets/nautilus-preferences-item.c:
	(preferences_item_create_enum), (enum_radio_group_changed_cb):
	Deal with the enumeration values.   Before it was assuming it
	started at ZERO.

	* libnautilus-extensions/nautilus-global-preferences.c:
	NAUTILUS_USER_LEVEL_*: Make this enum begin with a non zero
	value.  The zero value can be misintepreted by preferences as a
	default leading to confusion.

	(user_level_changed_callback): Add a default case just in case!

	(nautilus_global_preferences_startup): Invoke
	user_level_changed_callback once to make sure stuff is properly
	setup.

2000-04-18  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_overwrite):
	Only offer "Replace All" in an overwrite conflict error dialog if
	there is more than one conflicting item to deal with.
 
2000-04-18  Andy Hertzfeld <andy@eazel.com>

	* components/services/startup/nautilus-service-startup-view.c:
	added placeholder summary page, plus used a larger font for
	the title
	
2000-04-18  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install.c
	Adding the uninstall feature to eazel-install.

2000-04-18  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	(compare_icons), (idle_handler), (nautilus_icon_container_move_icon),
	(size_allocate), (nautilus_icon_container_initialize_class),
	(nautilus_icon_container_set_auto_layout):
	First cut at the auto-layout feature. It just does a lot of
	re-laying things out.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-list.h: 
	Added interfaces for telling whether to use single-click mode or
	not. A first step in moving preferences code out of here and
	into the file-manager classes.

	* libnautilus-extensions/fm-icon-view.c:
	(create_icon_container), (icon_container_compare_icons_callback):
	Provide a sorting order for the auto-layout mode.

	* librsvg/test-rsvg.c:
	Rolled out the change to work with the old popt that Pavel
	accidentally checked as Gene in when he was helping me.

2000-04-18  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	* libnautilus-extensions/nautilus-icon-canvas-item.h:
	Renamed several public functions to use proper nomenclature.
	An example would be changing nautilus_icon_canvas_get_editable_text_bounds
	to nautilus_icon_canvas_item_get_editable_text_bounds. A few of 
	these misnaming were in my last submission.

	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	Renamed nautilus_icon_container_show_rename_widget to
	nautilus_icon_container_start_renaming_selected_item

	* libnautilus-extensions/nautilus-icon-text-item.c:
	Fixed the following bugs:
	487 Trying to rename an icon to empty string should revert to original
	498 Renaming text field looks silly when empty
	500 text-editing box too narrow when renaming files with short names
	508 Icon text appears and disappears incorrectly when zooming

2000-04-18  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install.c
	Fixed a few memory leaks, removed some debugging code,
	and added interfaceFlags, installFlags, and probFilter
	in order to remove some hardcoded options and make use
	of the configuration files.

2000-04-18  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(uri_get_directory_part), (uri_get_basename),
	(get_parent_directory), (get_parent_directory_if_exists),
	(call_files_added), (call_files_changed),
	(hash_table_list_prepend),
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Another cut at the notify code.
	
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_mark_gone): Made part of the deleted code
	accessible for the notify code.

	* libnautilus-extensions/nautilus-directory-private.h:
	Renamed remove_file_monitor_link to add a nautilus
	prefix since it's no longer a local function.
	
2000-04-18  John Sullivan  <sullivan@eazel.com>

	Distinguished the item count for unreadable directories
	from the "not yet known" item count. Unreadable directories
	show "xxx" and "not yet known" show "--". This fixes bug 513.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_compare_directories_by_size): Put unreadable
	counts before unknown counts before known counts.
	(nautilus_file_get_directory_item_count): New result parameter
	that callers can use to distinguish unreadable case from
	unknown case.
	(nautilus_file_get_size_as_string): return different string
	if unreadable.
	* libnautilus-extensions/nautilus-directory.c:
	(directory_count_callback): Call nautilus_file_changed
	even when we discover that the count is unreadable.
	* src/file-manager/fm-directory-view.c:
	(display_selection_info): Pass NULL for unreadable parameter
	because this caller doesn't care why it's not known.

2000-04-18  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_vfs_error):
	The function of the Abort and Retry buttons in the file operation error 
	alert was inverted.
 
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c:
	(preference_get): If the stored default_value is NULL, then used
	the provided one.
	
2000-04-18  Andy Hertzfeld <andy@eazel.com>

	added better abstraction for the xml-based links introduced yesterday
	
	* libnautilus/nautilus-link.h,c:
	new routines to access xml-based link files
	* libnautilus/Makefile.am:
	added nautilus-link.c,h to build
	* libnautilus/nautilus-file.c:
	use nautilus_link_get_link_uri in nautilus-link instead of
	accessing link files directly
	* libnautilus/nautilus-icon-factory.c:
	use nautilus_link_get_image_uri in nautilus-link instead of
	accessing directly
	* src/file-manager/fm-icon-view.c:
	use nautilus_link_get_display_name to suppress display of
	identifying suffix
	* src/file-manager/fm-icon-text-window.c:
	fixed bug that caused crash when preference file is deleted
	by checking for NULL
	and using default in fm_get_text_attribute_names_preference_or_default
	* icons/computer.png:
	new icon for novice home
	* icons/hand.svg:
	new icon for novice home
	* icons/Makefile.am:
	added new icons
	* data/top/Computer-ntl.xml:
	added xml link for novice home
	* data/top/Services-ntl.xml:
	added link to novice home:
	* data/Makefile.am:
	added new files
	
2000-04-18  John Sullivan  <sullivan@eazel.com>

	Yet more tweakery to the file-monitoring code.

	* libnautilus-extensions/nautilus-directory.c:
	(stop_monitoring_files): Renamed to stop_monitoring_file_list.
	(nautilus_directory_destroy): Only stop monitoring list if we
	were monitoring list, but always complain about non-NULL
	file_monitors.
	(nautilus_directory_file_monitor_remove_internal): Only
	stop monitoring list if we had been monitoring it. This fixes
	CRITICAL when you launch and immediately quit.

2000-04-18 Shane Culpepper <pepper@eazel.com>

	* components/services/install/eazel-install-lib-rpm.c - fixing the
	  segfault in rpmInstall.

2000-04-18  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(dequeue_pending_idle_callback), 
	(nautilus_directory_file_monitor_remove_internal),
	(nautilus_directory_notify_files_added): Deployed
	new is_file_list_monitored function in three places.
	Two of these were bugs, one was code duplication.

2000-04-18  John Sullivan  <sullivan@eazel.com>

	Fixed bug 494 (initial directory count never appears in sidebar).

	This was a missing pieces of the async framework. Darin helped
	me finish it up.

	* libnautilus-extensions/nautilus-directory-private.h:
	Put FileMonitor struct here so NautilusFile can use it.
	(nautilus_directory_file_monitor_add_internal),
	(nautilus_directory_file_monitor_remove_internal),
	(remove_file_monitor_link): New functions, shared between
	NautilusDirectory and NautilusFile.
	* libnautilus-extensions/nautilus-file.c:
	(destroy): Complain about then clean up any remaining FileMonitors.
	(nautilus_file_monitor_add), (nautilus_file_monitor_remove): Fill 
	in the implementation for these formerly-empty routines.	
	* libnautilus-extensions/nautilus-directory.c:
	Moved FileMonitor struct out.
	(nautilus_directory_destroy): assert that there's no count_in_progress.
	(compare_file_monitor_with_client): changed name to
	compare_file_monitor_by_client_and_file and behavior to match.
	(find_file_monitor): Now takes a file and uses it in search.
	(cancel_unneeded_file_attribute_requests): New function, cleans up 
	no-longer-needed gnome vfs async calls.
	(remove_file_monitor_link): New function, removes a file monitor
	and cleans up storage.
	(remove_file_monitor): Uses remove_file_monitor_link to fix
	storage leak.
	(is_file_list_monitored): New function, checks whether anyone is
	monitoring all files in this directory.
	(nautilus_directory_file_monitor_add_internal),
	(nautilus_directory_file_monitor_remove): New functions,
	generalized from old non-internal versions to handle the single-file
	case too.
	(nautilus_directory_file_monitor_add),
	(nautilus_directory_file_monitor_remove): Now calls _internal function.
	(process_pending_file_attribute_requests): Now handles single-file
	case as well as all-files case.

	* src/nautilus-index-title.c:
	(nautilus_index_title_set_uri): Move the item-count-monitoring
	code inside the file != NULL check so it doesn't fail at the
	root (where, due to a bug, file is NULL).

2000-04-18  Darin Adler  <darin@eazel.com>

	Fixed bug where you'd see the name twice under each icon.
	Did some work for the new notify hooks that Pavel made.
	I'll finish those hooks soon.
	
	* src/file-manager/fm-icon-view.h:
	* src/file-manager/fm-icon-text-window.h:
	* src/file-manager/fm-icon-text-window.c:
	(set_preference_string), (synch_menus_with_preference),
	(icon_view_text_attribute_changed_callback),
	(fm_get_text_attribute_names_preference_or_default):
	* src/file-manager/fm-icon-view.c: (fm_icon_view_initialize),
	(fm_icon_view_get_icon_text_attribute_names),
	(text_attribute_names_changed_callback):
	Moved attribute names default into FMIconTextWindow and made
	the callers use a new call that gets either the preference or
	the default if the preference is invalid. Also simplified the
	code since we don't need to cache the preference in either the
	FMIconTextWindow or the FMIconView.

	* libnautilus-extensions/nautilus-directory.c:
	(is_canonical_uri): Added a function for use in asserts.
	(nautilus_directory_get): Assert that we successfully
	made the URI canonical.
	(parent_directory_if_exists), (file_if_exists): Helper
	functions for implementing the notify calls.
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Fleshed out the bones of these routines a bit more.
	They are still not done. Also changed their interfaces
	so they are not responsible for freeing their parameters.
	
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-file.h:
	(nautilus_directory_contains_file):
	New call to be used instead of nautilus_file_is_gone
	for callers that are monitoring a directory.

	* libnautilus-extensions/nautilus-file-changes-queue.c:
	(pairs_list_free), (nautilus_file_changes_consume_changes):
	Make the caller free the list instead of the called function
	Also reordered the changes so deletions come before additions.

	* src/file-manager/fm-directory-view.c: (display_pending_files):
	* src/file-manager/fm-list-view.c: (fm_list_view_file_changed):
	* src/file-manager/fm-icon-view.c: (fm_icon_view_file_changed):
	Changed to use nautilus_directory_contains_file instead of
	nautilus_file_is_gone.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/install/.cvsignore: Ignore more generated
	files.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	Hook up click policy preference.  Bug 374.

	*  libnautilus-extensions/nautilus-global-preferences.h,
	   libnautilus-extensions/nautilus-global-preferences.c:
	Rename CLICK_ACTIVATION_TYPE to CLICK_POLICY.  

	* libnautilus-extensions/nautilus-icon-container.c:
	(click_policy_changed_callback): New preferences callback to keep
	track of click policy changes.

	(destroy): Unregister click_policy_changed callback on destroy.

	(nautilus_icon_container_initialize): Initialize the
	single_click_mode from preferences and register callback to keep
	track of changes in click policy.

	Also anal gtk style formatting of the private prototypes and
	sophisticated alphabetization of libnautilus-extensions headers.

	*  libnautilus-extensions/nautilus-list.c:
	(click_policy_changed_callback): New preferences callback to keep
	track of click policy changes.
	
	(nautilus_list_initialize): Initialize the single_click_mode from
	preferences and register callback to keep track of changes in
	click policy.

	(nautilus_list_destroy): Unregister click_policy_changed callback
	on destroy. 
	
	Also anal gtk style formatting of the private prototypes and
	sophisticated alphabetization of libnautilus-extensions headers.

2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h: Dont expose the
	preference/enum info structure.  Remove these and use the
	NautilusPreference object instead to describe preferences.

	Add usage of default values to get_* api.  So now callers can
	provide a default which will be given back to them if no default
	exists.  For example, no default will exist for the preference
	when it was implicitly pulled out of someone's 	ass.

	The callback function no longer passes along the value.  Instead
	the caller is expected to use the get_ functions.

	Rename nautilus_preferences_{get,set}_string() to
	nautilus_preferences_{get,set}.  This matches the
	NautilusDirectory metadata api which uses strings for metadata by
	default.

	Also constify the get functions.
	
	(nautilus_preferneces_get_info): Renamed to 
	nautilus_preferneces_get_preference which returns a referenced
	pointer to the preference description object.  Perhaps this could
	have a better name.

	(nautilus_preferences_enum_add_entry): New function to add entries
	to enumerated preferences.

	* nautilus-widgets/nautilus-preferences-group.c,
	  nautilus-widgets/nautilus-preferences-group.h:
	(nautilus_preferences_group_add): Retire.

	(nautilus_preferences_group_add_item): New function that does all
	the work of creating an item based on a given item_type.

	* nautilus-widgets/nautilus-preferences-item.c,
	  nautilus-widgets/nautilus-preferences-item.h: Use
	NautilusPreferences directly instead of GtkObject.

	Ref/unref the preference object properly.

	Use more consistent identifiers.  Fix some stupid style things.

	Update for NautilusPreference usage instead of the info struct
	hack). 

	*  nautilus-widgets/nautilus-preferences-pane.c,
	   nautilus-widgets/nautilus-preferences-pane.h:
	(nautilus_preferences_pane_add_item_to_nth_group) : New function
	to do all the work of adding and managing an item based on a given
	type.
	
	*  nautilus-widgets/test-nautilus-widgets.c: Update for all the
	api changes.

 	* nautilus-widgets/Makefile.am: Add building of
	nautilus-preference.[ch] and the self test driver.

	* libnautilus-extensions/nautilus-global-preferences.c,
	  libnautilus-extensions/nautilus-global-preferences.h: Add
	CLICK_ACTIVATION_TYPE preferences.  Add HOME_URI preference.  Add
	SHOW_HIDDEN_FILES preference.

	Make all the user level stuff private.  Dont expose either the
	user level preference or the user level values at all.  Instead,
	track user level changes in a callback and set corresponsing
	preferences accordingly.

	(nautilus_global_preferences_startup): Hook to make the above work
	properly.
	
	Cleanup the creation of the preferences dialog.


	* libnautilus-extensions/nautilus-icon-factory.c:
	(icon_theme_changed_callback): Preference changed callback no
	longer passes in the value.  Value needs to be manually fetched.

	(nautilus_get_current_icon_factory): No need to call
	nautilus_preferences_set_info.  Instead give
	nautilus_preferences_get a default value.  This way, we can always
	get something reasonable back.


	* src/nautilus-window-menus.c:
	(use_eazel_theme_icons_cb): Update for pref api changes.  Feed the
	get function a default value.

	* src/ntl-app.c:
	(nautilus_app_class_init): Call
	nautilus_global_preferences_startup so that user level callbacks
	always works.  Also, allows preferences exposed in the ui to have
	nice defaults.
	
	* src/ntl-main.c:
	(main): Add nautilus-widgets self checks.

	* src/ntl-uri-map.c:
	(add_meta_view_iids_from_preferences): Feed the pref api function
	a default value. 

	* src/ntl-window-state.c:
	(nautilus_window_set_initial_state): User level is no longer
	publicly exposed over here.  Determine the home uri, instead by
	fetching the HOME_URI preference.

	* src/file-manager/fm-directory-view.c:
	(use_new_window_changed_callback): Retired.  Instead check
	preference when needed.  There really is not need to go to the
	trouble of installing a callback for this specific preference.
	Its just as easy (and not a performance issues) to check it
	directly.  

	Also retired the 'use_new_window' member.

	(user_level_changed_callback): Retired.  User level no longer
	publically exposed.

	(show_hidden_files_changed_callback):  Check SHOW_HIDDEN_FILES
	preference to determine if hidden files should be filtered.

	Add a 'show_hidden_files' member that keeps track of changes in
	this preference.

	(fm_directory_view_initialize): Initialize 'show_hidden_files'.
	Update for callback name change.

	(nautilus_preferences_remove_callback): Remove uneeded unregister
	call for retired use_new_window callback.

	(queue_pending_files): Do hidden file filtering based on
	'show_hidden_files' instead of using the user level.

	(fm_directory_view_activate_file): Check USE_NEW_WINDOW preference
	to determine if a new window is requested.

	*  src/file-manager/fm-icon-text-window.c: #include fm-icon-virw.h
	and use DEFAULT_ICON_VIEW_TEXT_ATTRIBUTE_NAMES from it instead of
	ATTRIBUTE_NAMES_DEFAULT.  This makes sure the default is not out
	of whack.  This define should probably be placed in a better place.

	NOTE: This seems to be one of the drawbacks of passing in defaults
	to fetch functions - that is out-of-whackness in 2 or more callers
	in difference places.
	
	(synch_menus_with_preference),
	(changed_attributes_option_menu_cb): Update for preference api changes.
	
	(preference_changed_callback): Rename to
	icon_view_text_attribute_changed_callback for clarity.

	(icon_view_text_attribute_changed_callback): Value no longer
	passed into callback.  Need to check preferences manually.  
	
	* src/file-manager/fm-icon-view.h:
	Add DEFAULT_ICON_VIEW_TEXT_ATTRIBUTE_NAMES to share with
	fm-icon-text-window.
	
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_icon_text_changed_callback): Update for preference
	api changes.

	Minor anal style formatting of the private prototypes.

	(fm_icon_view_initialize_class): Yank
	nautilus_preferences_set_info call.  No longer needed for there to
	be proper defaults.  

	(text_attribute_names_changed_callback): Value no longer
	passed into callback.  Need to check preferences manually.  Also,
	feed the get function a reasonable default.

	* components/help/Makefile.am: Needs to link with
	libnautilus-extensions. 
	
	* components/websearch/Makefile.am: Needs to link with
	libnautilus-extensions. 
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	*  libnautilus-extensions/nautilus-string-list.c,
	   libnautilus/nautilus-string-list.h: Dumb underscore fix the struct tags.

2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	Factor out the code that describes a preference from the big messy
	preferences into a class.
	
	* nautilus-widgets/nautilus-preference.c,
	  nautilus-widgets/nautilus-preference.h: New files.  A class that
	describes a nautilus preference.
	
	  nautilus-widgets/nautilus-widgets-self-check-functions.c,
	  nautilus-widgets/nautilus-widgets-self-check-functions.h: New
	files .  Self check code driver nautilus-widgets.
	
2000-04-17  Pavel Cisler  <pavel@eazel.com>

	This checkin requires new gnome-vfs.

	Plumbing for making copied/moved/deleted files show up update
	in their respective new locations.

	* libnautilus-extensions/nautilus-file-changes-queue.h
	* libnautilus-extensions/nautilus-file-changes-queue.c
	* libnautilus-extensions/Makefile.am
	Shared queue used by the copy engine to send update notification
	requests to NautilusDirectory during file copy/move/delete operations.

	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_added), 
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Stub calls that will be hooked up to the NautilusDirectory
	notification calls to dispatch the notification updates.
	
	* src/file-manager/dfos-xfer.c:
	(sync_xfer_callback):
	New callback that gets called in the async copy engine context
	and produces change entries stuffing them into the file changes
	queue.

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_ok):
	Added calls to the new nautilus_file_changes_consume_changes
	from the progress update callback. This callback is called in
	the user interface context and consumes the change entries
	from the file changes queue, sending them in chunks to be
	dispatched by to the individual Nautilus directory objects. 

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_ok):
	Updated to use new progress enum values.

	* src/file-manager/dfos-xfer.c:
	(update_xfer_callback):
	Renamed from sync_xfer_callback.

	* src/file-manager/dfos-xfer.c:
	(gnome_vfs_async_xfer):
	Pass in new sync_xfer_callback parameters.
	
2000-04-17  Darin Adler  <darin@eazel.com>

	* components/services/install/.cvsignore: Generated files.

2000-04-17  Darin Adler  <darin@eazel.com>

	Added commands for Auto vs. Manual layout, but the guts behind
	them is not yet implemented.

	Did some cleanup on the new renaming code.

	* nautilus-glib-extensions.c:
	* nautilus-glib-extensions.h:
	Added nautilus_g_list_exactly_one_item and
	nautilus_g_list_more_than_one_item. These are more-efficient
	versions of g_list_length (x) == 1 and g_list_length (x) > 1.

	* nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text): Add a line break between the
	editable text and the additional text.
	(nautilus_icon_canvas_get_text_bounds),
	(nautilus_icon_canvas_get_editable_text_bounds),
	(nautilus_icon_canvas_get_editable_text),
	(nautilus_icon_canvas_set_renaming):
	Replaced g_assert with g_return_if_fail calls, and added the
	complete set of g_return_if_fail.
	(nautilus_icon_canvas_set_renaming): Don't update the item
	unless the renaming state has actually changed.
	
	* nautilus-icon-canvas-item.h: Fixed formatting.

	* nautilus-icon-container.c:
	* nautilus-icon-container.h:
	Added nautilus_icon_container_set_auto_layout and
	nautilus_icon_container_is_auto_layout. For now they are
	placeholders that just modify a boolean.

	* nautilus-icon-private.h:
	Added the auto_layout boolean.

	* nautilus-icon-text-item.c:
	* nautilus-icon-text-item.h:
	Just some formatting and other minor cleanup.

	* nautilus-metadata.h:
	Added NAUTILUS_METADATA_KEY_ICON_VIEW_AUTO_LAYOUT.

	* nautilus-location-bar.c (drag_data_received_cb): Use the new
	nautilus_g_list_more_than_one_item function.

	* fm-directory-view.c (bonobo_menu_open_cb), (open_cb): Use the
	new nautilus_g_list_exactly_one_item.

	* fm-icon-text-window.c (attribute_names_string_is_good),
	(set_preference_string), (synch_menus_with_preference),
	(preference_changed_callback),
	(changed_attributes_option_menu_cb): Got rid of the hard-coded
	first item "name" which is no longer needed.  Also changed to
	handle bad data in the preferences.

	* fm-icon-view.c (fm_icon_view_initialize_class): Updated since
	there's no "name" item needed any more.
	(fm_icon_view_compute_menu_item_info): Merged MENU_PATH_RENAME
	with MENU_RENAME_TEXT and simplified the logic.
	(fm_icon_view_append_selection_context_menu_items): Merged
	MENU_PATH_RENAME with MENU_RENAME_TEXT.
	(update_layout_menus), (auto_layout_callback),
	(manual_layout_callback), (fm_icon_view_merge_menus): Added menu
	items for auto layout and for manual layout.
	(fm_icon_view_begin_loading): Load setting for auto layout from
	metadata.
	(fm_icon_view_get_icon_text_attribute_names): Changed to get rid
	of the "name" first item from the list of text attributes.
	(get_icon_editable_text_callback): Simplified since the editable text
	is always the icon name. Also got rid of copied and pasted code that's
	no longer needed for this case.
	(get_icon_additional_text_callback): Got rid of special case for name,
	since the name is no longer treated as an attribute.

2000-04-19  Andy Hertzfeld  <andy@eazel.com>

	Added a new, xml-based type of link file that can specify it's own
	icon and other behavior.  Soon they will be used for the novice
	home directory.
	
	* libnautilus-extensions.nautilus-file.c:
	Check for the new file type in nautilus_directory_mapped_uri, and
	return the link contained in the file if present.
	* libnautilus-icon-factory.c:
	Check for the new file type in
	nautilus_icon_factory_get_icon_for_file and return the specified
	image as appropriate.
	
2000-04-18  Shane Culpepper  <pepper@eazel.com>

	adding the eazel-installer skelton.  very rough prototype right now
	but it works with my local configuration data.  Will be updated alot
	over the next few days.
	Location is components/services/install.  It is not part of the default
	build right now.

2000-04-18  Andy Hertzfeld  <andy@eazel.com>

	made clicking on gmc-style URL files redirect to the specified URL.
	
	* libnautilus-extensions/nautilus-file.c,h:
	added nautilus_file_get_mapped_uri, which checks for gmc-style URL files
	and returns the URL they reference in that case; otherwise, just return
	the file's URI.
	* src/file-manager/fm-directory-view.c:
	called nautilus_file_get_mapped_uri in fm_directory_view_activate_file_internal
	* data/mime/nautilus.keys:
	added icons to a few MIME types that I forgot last time.  Also, just
	use relative paths to reference the icons.

2000-04-18  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "no" to ALL_LINGUAS.
	
2000-04-18  Gene Z. Ragan  <gzr@eazel.com>

	Added functionality to allow files to be renamed in icon view.
	This feature is available by either context click on the icon or
	selecting a single file and choosing "Rename" form the File menu.

	* libnautilus-extensions/nautilus-icon-text-item.c
	* libnautilus-extensions/nautilus-icon-text-item.h: New files.
	This is an editable icon text item used in the renaming feature.
	It is based on GnomeIconTextItem but modified to fix bugs in the
	original code and add extended functionality need by nautilus. If
	thse changes were rolled into the current GnomeIconTextItem, it
	would break gmc.

	* libnautilus-extensions/Makefile.am
	Modified file so that the two new files listed above would properly
	be included in generated makefiles.

	* libnautilus-extensions/nautilus-icon-canvas-item.c
	Split text class variable into two variables, editable_text and
	additonal_text. editable_text refers to attributes that the user
	can change via rename in place. additional_text is any other text
	that the user cannot edit via the rename in place feature. Added
	a boolean flag, is_renaming, to check against during various
	operations that effect the renaming feature. Removed ARG_TEXT
	argument ID and replaced with ARG_EDITABLE_TEXT and
	ARG_ADDITIONAL_TEXT.
	(nautilus_icon_canvas_item_initialize_class): Function now check
	for both ARG_EDITABLE_TEXT and ARG_ADDITIONAL_TEXT. Removed check
	for ARG_TEXT.
	(nautilus_icon_canvas_item_destroy): Both editable_text and
	additonal_text are freed.
	(nautilus_icon_canvas_item_set_arg): Removed ARG_TEXT and added
	handling of ARG_EDITABLE_TEXT and ARG_ADDITIONAL_TEXT.
	(nautilus_icon_canvas_item_get_arg): Removed ARG_TEXT and added
	handling of ARG_EDITABLE_TEXT and ARG_ADDITIONAL_TEXT.
	(draw_or_measure_label_text): Modified function to not draw the
	label icon text if we are renaming in place.
	(draw_or_measure_label_text): Function now combines editable and
	additional text when performing the measuring operation.
	(compute_editable_text_rectangle): Added function to compute
	bounds of editable text. This is used to determine size and
	placement of editable text item when in renaming mode.
	(nautilus_icon_canvas_get_text_bounds): Public API to get bounds
	of icon label text.
	(nautilus_icon_canvas_get_editable_text_bounds): Public API to get
	bounds of editable icon label text.
	(hit_test_pixbuf): Added check against is_renaming flag.
	(nautilus_icon_canvas_get_editable_text): Public API to get
	editable text string.
	(nautilus_icon_canvas_item_set_renaming): Public API to toggle
	is_renaming flag.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.h
	Added public API prototypes to functions described above.	

	* libnautilus-extensions/nautilus-icon-container.c
	Added GET_ICON_EDITABLE_TEXT and GET_ICON_ADDITONAL_TEXT signals.
	Removed GET_ICON_TEXT signal. Added ICON_TEXT_CHANGED signal.
	(icon_toggle_selected): Renaming mode is now exited when a
	selection/deselection occurs.
	(key_press_event): GDK_Return ends rename mode and attempts to
	accept modification. GDK_Escape ends rename mode and reverts
	modification to original.
	(nautilus_icon_container_initialize_class): icon_text_changed,
	get_icon_editable_text and get_icon_additional_text signals are
	registered.
	(editing_started): New function. Called when an edit begins.
	Inits class member variables for edit mode.
	(editing_stopped): New function. Called when edit ends. Cleans
	up edit mode.
	(nautilus_icon_container_initialize): rename_widget and original_text private variables
	are set to NULL.
	(icon_toggle_selected): Added call to end_renaming_mode.
	(nautilus_icon_container_update_icon): Added emitting of
	GET_ICON_EDITABLE_TEXT and GET_ICON_ADDITIONAL_TEXT
	signals. Updated gnome_canvas_item_set to use new arguments
	defined in nautilus-icon-text-item.
	(nautilus_icon_container_show_rename_widget): New
	function. Creates and displays renaming_widget.  Creates cached
	copy of original editable text for later compare, connects signals
	and enters renaming mode.
	(end_renaming_mode): New function. Cleans up and end renaming
	mode.
	(hide_rename_widget): Called by end_renaming_mode to hide and free
	renaming_widget.

	* libnautilus-extensions/nautilus-icon-container.h
	Added prototypes for public functions described above.

	* libnautilus-extensions/nautilus-icon-private.h
	Added boolean for renaming. Added a NautilusIconTextItem variable
	for the renaiming widget.

	* src/file-manager/fm-icon-view.c
	Added defines MENU_PATH_RENAME. Added a char * to hold original
	editable text for a later compare.  Removed get_icon_text_callback
	and added get_icon_editable_text_callback and
	get_icon_additonal_text_callback. These return the editable and
	additonal text of the icon view.
	(rename_icon_callback): Added callback that attempts to rename the
	NautilusFile the icon view represents. Action in not taken if
	there has been no change to the editable text. If the operation
	fails, the user is notified.
	(fm_icon_view_append_selection_context_menu_items): Added Rename
	menu item.
	(append_bonobo_menu_item): Added Rename menu item and callback.
	(update_bonobo_menu_item): Added sensitivity check for the Rename
	item. It is enabled only if a single item is selected.
	(fm_icon_view_icon_text_changed_callback): Added function to
	attempt to change the filename to the new text. Notify user if
	operation fails.
	(get_icon_editable_text_callback): This callback returns the text
	items that are editable by the user using the "Rename" command. In
	the case of FMIconView, this would be the attribute with the name
	"name".
	(get_icon_additional_text_callback): This callback returns the
	text items that are not editable by the user using the "Rename"
	command.

2000-04-17  John Sullivan <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_monitor_add), (nautilus_file_monitor_remove):
	Added empty implementations for these two routines. Will
	fill in with actual code later after talking to Darin.

	* src/nautilus-index-title.c:
	(nautilus_index_title_set_uri): Monitor file for changes
	in directory item count.
	(release_file): Remove monitoring of file.
	
	* src/file-manager/fm-properties-window.c:
	(name_field_done_editing), (name_field_focus_out),
	(name_field_focus_in), (create_properties_window):
	Made focusing away from the name field in the Properties
	window deselect the text, and focusing in select it.

2000-04-17  John Sullivan <sullivan@eazel.com>

	Fixed bugs, mostly related to editable text fields.

	* README: Made the contents of this file slightly helpful.
	
	* data/mime/nautilus.keys: Added an obscure MIME type that
	someone reported running into.

	* libnautilus-extensions/nautilus-entry.h,
	* libnautilus-extensions/nautilus-entry.c: New files. Define a
	subclass of GtkEntry (one-line text editing field) that fixes
	bugs and adds convenience functions.
	(nautilus_entry_key_press): Override key_press handler to treat
	the keypad Enter key the same as the other Enter key (in GtkEntry
	it inserts a "/r" into the text).
	(nautilus_entry_select_all): Select all text, and move the text
	cursor position to the end.
	(nautilus_entry_select_all_at_idle): Same, but do it at the next
	idle opportunity. Useful since nautilus_entry_select_all won't
	work right if called in a key_press signal handler.
	* libnautilus-extensions/Makefile.am: Build these two new files.

	* src/file-manager/fm-properties-window.c:
	(name_field_activate): New function, updates file name and
	selects all text.
	(create_properties_window): Make name_field be a NautilusEntry.
	This fixes half of bug 433 (Enter keys don't work properly in
	properties window). Also attach to "activate" signal and update
	name change then. This fixes other half of bug 433. Also start
	with name field selected & focused. This fixes bug 432 (properties
	window should appear with name text selected).
	(name_field_update_to_match_file): Only update the displayed text
	if the new name coming in is different. This was needed to make
	select-all-on-activate work.
	(name_field_done_editing): Don't accept empty string as name;
	silently revert back to original name.

	* src/nautilus-bookmarks-window.c:
	(create_bookmarks_window): Change name & uri text fields to 
	NautilusEntry; this causes keypad Enter key to behave like other 
	Enter key. Also connect to focus_in and activate signals.
	(update_bookmark_from_text): New function, extracted from
	on_text_field_focus_out_event.
	(on_text_field_focus_out_event): Deselect all text after updating
	bookmark.
	(on_text_field_focus_in_event): New function, select all text.
	(name_or_uri_field_activate): New function, update bookmark and
	select all text.
	
	* src/nautilus-location-bar.c:
	(nautilus_location_bar_initialize): Use NautilusEntry instead of
	GtkEntry. This makes keypad Enter act like other Enter in uri-entry
	field.
	
	* src/ntl-window-msgs.c:
	(nautilus_window_end_location_change_callback): Make "Nautilus can't 
	handle this type of file" message mention (human-readable version of) 
	file type.

2000-04-17  Andy Hertzfeld <andy@eazel.com>

	fixed bug involving making thumbnails for directories where we don't
	have write permissions by making them in $HOME/.nautilus/thumbnails.
	
	* libnautilus/nautilus-directory.c:
	moved escape_slashes routine to nautilus-strings so it can be shared
	* libnautilus/nautilus-string.c,h:
	added nautilus_str_escape_slashes, copies from nautilus-directory
	* libnautilus/nautilus-icon-factory.c:
	added boolean to make_thumbnail_path to make the thumbnails in
	$HOME/.nautilus/thumbnails instead of in the local directory, and
	then used it when we can't write to the local one.
	
2000-04-16  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	fixed problem where the command buttons in the index panel were overlapping
	the metaview.  They are not supposed to be showing if a metaview is selected.
	Fixed by hiding them in nautilus_index_panel_update_buttons if a metaview
	is selected.
	
2000-04-15  Andy Hertzfeld <andy@eazel.com>

	installed some icons for common file types, purloined from gmc
	
	* icons/Makefile.am:
	added a bunch of icons
	* icons/gnome-icon-x-mp3.png: new icon for mp3s
	* icons/gnome-compressed.png: new icon for gzips
	* icons/gnome-library.png: new icon for shared libraries
	* icons/gnome-manpage.png: new icon for man pages
	* icons/gnome-objectfile.png: new icon for object code files
	* icons/gnome-pack-deb.png: new icon for debian packages
	* icons/gnome-pack-rpm.png: new icon for rpm packages
	* icons/gnome-package: new icon for tar archives
	* data/mime/nautilus.keys:
	added icon-filename entries to appropriate mime-types
	
2000-04-14  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-string.c: 
	* libnautilus-extensions/nautilus-string.h:
	After a chat with Rebecca, named nautilus_str_underscore_escape to
	nautilus_str_double_underscores since the latter name more
	accurately describes what it does.
	(nautilus_str_double_underscores): Changed the function to allow
	NULL and return NULL instead of doing g_return_val_if_fail.
	(Also reformatted a bit and made a few gratuitous changes.)

	* libnautilus-extensions/nautilus-bookmark.c:
	* libnautilus-extensions/nautilus-bookmark.h:
	(nautilus_bookmark_get_menu_display_name):
	Moved the logic about escaping menu characters up one level so
	the bookmark class doesn't have to know about it. This removes
	the function from NautilusBookmark completely.

	* src/nautilus-window-menus.c:
	(append_bookmark_to_menu): Fixed a storage leak and moved the
	double-underscore escaping in here.

2000-04-14 Rebecca Schulman <rebecka@eazel.com>

	Fixed test cases on nautilus-string.c to be correct
	
2000-04-14 Rebecca Schulman <rebecka@eazel.com>

	Bookmarks with '_' characters display
	correctly now on menus
	
	* libnautilus-extensions/nautilus-string.c
	New function to escape '_' characters in strings
	for menu display
	* libnautilus-extensions/nautilus-bookmark.c
	New function to take bookmarks and return
	'_' escaped names
	* src/nautilus-window-menus.c
	Calls function to escape bookmark names

2000-04-14  Darin Adler  <darin@eazel.com>

	Finished task 174 (Use deferred calculation to compute directory
	counts).

	* libnautilus-extensions/Makefile.am: 
	* libnautilus-extensions/nautilus-file-attributes.h: 
	Added a header file for names of file attributes.

	* libnautilus-extensions/nautilus-directory-private.h: 
	* libnautilus-extensions/nautilus-directory.c: 
	* libnautilus-extensions/nautilus-directory.h: 
	* libnautilus-extensions/nautilus-file-private.h: 
	* libnautilus-extensions/nautilus-file.c: 
	* libnautilus-extensions/nautilus-file.h: 
	Added background computation of the "directory item count"
	attribute. This is serving as a test case for the API for
	requesting additional information.

	* src/file-manager/fm-directory-view.c:
	(display_selection_info): Changed to use the new interface that
	can sometimes return "I don't know" for the number of items in
	a particular directory.
	(stop_load), (done_loading), (display_pending_files),
	(fm_directory_view_stop): Fixed a mistake in the old code where
	we stopped monitoring once the files were discovered. We need to
	keep monitoring.
	(finish_loading_uri): Pass in an attribute that we want to monitor:
	NAUTILUS_FILE_ATTRIBUTE_DIRECTORY_ITEM_COUNT.

2000-04-14 Rebecca Schulman <rebecka@eazel.com>
	
	Bookmarks with '_' characters display
	correctly now on menus
	
	* libnautilus-extensions/nautilus-string.c
	New function to escape '_' characters in strings
	for menu display
	* libnautilus-extensions/nautilus-bookmark.c
	New function to take bookmarks and return
	'_' escaped names
	* src/nautilus-window-menus.c
	Calls function to escape bookmark names

Fri Apr 14 16:35:32 2000  Raph Levien  <raph@acm.org>

	* librsvg/test-rsvg.c: Added a command line tester for rsvg, which
	outputs alpha-transparent PNG's from SVG input files. The PNG save
	code is lifted from similar code in nautilus-icon-factory, and
	should be deleted when this functionality appears in gdk-pixbuf.

	* librsvg/Makefile.am: Build test-rsvg.

2000-04-14  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	using Raph's new machinery, made icons for .svg files use 
	a rendering of the file itself.
	
2000-04-14  Christopher James Lahey  <clahey@helixcode.com>

	* src/ntl-window.c (nautilus_window_constructed): Change the
	packing of the first pane so that it doesn't autoresize.

	* libnautilus-extensions/nautilus-file-utilities.c
	(nautilus_user_top_directory): Change this routine to use
	gnome_datadir_file to get the share directory.  Also, change to
	using g_strdup_printf.

2000-04-14  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/.cvsignore: Fixed to match new directory
	contents.

2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	Split libnautilus into two pieces.  

	libnautilus now only contains the view interfaces needed by nautilus 
	components.

	These are the interfaces defined in nautilus-view-component.idl.
	
	libnautilus-extensions containes the remainder of the stuff.

	Also used the cvs repository munging opportunity to do some of the
	ntl-* renaming outlined in the RENAIMING file.

	* libnautilus/bonobo-stream-vfs.c
	  libnautilus/bonobo-stream-vfs.h,
	  libnautilus/gtkscrollframe.c,
	  libnautilus/gtkscrollframe.h,
	  libnautilus/nautilus-alloc.h,
	  libnautilus/nautilus-background-canvas-group.c,
	  libnautilus/nautilus-background-canvas-group.h,
	  libnautilus/nautilus-background.c,
	  libnautilus/nautilus-background.h,
	  libnautilus/nautilus-bonobo-extensions.c,
	  libnautilus/nautilus-bonobo-extensions.h,
	  libnautilus/nautilus-bookmark.c,
	  libnautilus/nautilus-bookmark.h,
	  libnautilus/nautilus-debug.c,
	  libnautilus/nautilus-debug.h,
	  libnautilus/nautilus-default-file-icon.c,
	  libnautilus/nautilus-default-file-icon.h,
	  libnautilus/nautilus-directory-background.c,
	  libnautilus/nautilus-directory-background.h,
	  libnautilus/nautilus-directory-private.h,
	  libnautilus/nautilus-directory.c,
	  libnautilus/nautilus-directory.h,
	  libnautilus/nautilus-file-private.h,
	  libnautilus/nautilus-file-utilities.c,
	  libnautilus/nautilus-file-utilities.h,
	  libnautilus/nautilus-file.c,
	  libnautilus/nautilus-file.h,
	  libnautilus/nautilus-gdk-extensions.c,
	  libnautilus/nautilus-gdk-extensions.h,
	  libnautilus/nautilus-gdk-pixbuf-extensions.c,
	  libnautilus/nautilus-gdk-pixbuf-extensions.h,
	  libnautilus/nautilus-glib-extensions.c,
	  libnautilus/nautilus-glib-extensions.h,
	  libnautilus/nautilus-global-preferences.c,
	  libnautilus/nautilus-global-preferences.h,
	  libnautilus/nautilus-gnome-extensions.c,
	  libnautilus/nautilus-gnome-extensions.h,
	  libnautilus/nautilus-graphic-effects.c,
	  libnautilus/nautilus-graphic-effects.h,
	  libnautilus/nautilus-gtk-extensions.c,
	  libnautilus/nautilus-gtk-extensions.h,
	  libnautilus/nautilus-gtk-macros.h,
	  libnautilus/nautilus-icon-canvas-item.c,
	  libnautilus/nautilus-icon-canvas-item.h,
	  libnautilus/nautilus-icon-container.c,
	  libnautilus/nautilus-icon-container.h,
	  libnautilus/nautilus-icon-dnd.c,
	  libnautilus/nautilus-icon-dnd.h,
	  libnautilus/nautilus-icon-factory.c,
	  libnautilus/nautilus-icon-factory.h,
	  libnautilus/nautilus-icon-grid.c,
	  libnautilus/nautilus-icon-grid.h,
	  libnautilus/nautilus-icon-private.h,
	  libnautilus/nautilus-lib-self-check-functions.c,
	  libnautilus/nautilus-lib-self-check-functions.h,
	  libnautilus/nautilus-list-column-title.c,
	  libnautilus/nautilus-list-column-title.h,
	  libnautilus/nautilus-list.c,
	  libnautilus/nautilus-list.h,
	  libnautilus/nautilus-metadata.h,
	  libnautilus/nautilus-mime-type.c,
	  libnautilus/nautilus-mime-type.h,
	  libnautilus/nautilus-self-checks.c,
	  libnautilus/nautilus-self-checks.h,
	  libnautilus/nautilus-string-list.c,
	  libnautilus/nautilus-string-list.h,
	  libnautilus/nautilus-string.c,
	  libnautilus/nautilus-string.h,
	  libnautilus/nautilus-xml-extensions.c,
	  libnautilus/nautilus-xml-extensions.h: moved to
	libnautilus-extensions.

	  libnautilus/ntl-content-view-frame.c,
	  libnautilus/ntl-content-view-frame.h,
	  libnautilus/ntl-meta-view-frame.c,
	  libnautilus/ntl-meta-view-frame.h,
	  libnautilus/ntl-view-frame.c,
	  libnautilus/ntl-view-frame.h: moved to
	libnautilus-extensions and renamed from "ntl-*" to "nautilus-*"

	* Makefile.am,
	  configure.in: added libnautilus-extensions to the build.

	* libnautilus/.cvsignore,
	  libnautilus/Makefile.am,
	  libnautilus/libnautilus.h,
	  libnautilus/nautilus-content-view-frame.c,
	  libnautilus/nautilus-content-view-frame.h,
	  libnautilus/nautilus-meta-view-frame.c,
	  libnautilus/nautilus-meta-view-frame.h,
	  libnautilus/nautilus-view-frame-private.h,
	  libnautilus/nautilus-view-frame.c,
	  libnautilus/nautilus-view-frame.h,
	  libnautilus/nautilus-zoomable.c: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* libnautilus-extensions/Makefile.am,
	  libnautilus-extensions/nautilus-global-preferences.c,
	  libnautilus-extensions/nautilus-global-preferences.h,
	  libnautilus-extensions/nautilus-icon-factory.h: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* nautilus-widgets/nautilus-preferences-box.c,
	  nautilus-widgets/nautilus-preferences-dialog.c,
	  nautilus-widgets/nautilus-preferences-group.c,
	  nautilus-widgets/nautilus-preferences-item.c,
	  nautilus-widgets/nautilus-preferences-pane.c,
	  nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-radio-button-group.c: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* src/Makefile.am,
	  src/nautilus-bookmark-list.c,
	  src/nautilus-bookmark-list.h,
	  src/nautilus-bookmarks-window.c,
	  src/nautilus-index-tabs.c,
	  src/nautilus-index-title.c,
	  src/nautilus-location-bar.c,
	  src/nautilus-signaller.c,
	  src/nautilus-window-menus.c,
	  src/nautilus-window-toolbars.c,
	  src/nautilus-zoom-control.c,
	  src/ntl-app.c,
	  src/ntl-index-panel.c,
	  src/ntl-main.c,
	  src/ntl-meta-view.c,
	  src/ntl-uri-map.c,
	  src/ntl-uri-map.h,
	  src/ntl-view-bonobo-subdoc.c,
	  src/ntl-view.c,
	  src/ntl-window-msgs.c,
	  src/ntl-window-state.c,
	  src/ntl-window.c,
	  src/ntl-window.h: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* src/file-manager/fm-directory-view.c,
	  src/file-manager/fm-directory-view.h,
	  src/file-manager/fm-icon-text-window.c,
	  src/file-manager/fm-icon-view.c,
	  src/file-manager/fm-list-view.c,
	  src/file-manager/fm-properties-window.c,
	  src/file-manager/fm-properties-window.h: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* components/history/Makefile.am,
	  components/history/ntl-history-view.c,
	  components/html/Makefile.am,
	  components/html/ntl-web-browser.c,
	  components/music/Makefile.am,
	  components/music/nautilus-music-view.c,
	  components/music/nautilus-music-view.h,
	  components/notes/Makefile.am,
	  components/notes/ntl-notes.c,
	  components/rpmview/Makefile.am,
	  components/rpmview/nautilus-rpm-view.c,
	  components/rpmview/nautilus-rpm-view.h,
	  components/sample/Makefile.am,
	  components/sample/nautilus-sample-content-view.c,
	  components/sample/nautilus-sample-content-view.h,
	  components/services/startup/Makefile.am,
	  components/services/startup/eazel-register.c,
	  components/services/startup/nautilus-service-startup-view.c,
	  components/services/startup/nautilus-service-startup-view.h:
	Updated components for libnautilus -> libnautilus-extensions changes. 
	
2000-04-14  Fatih Demir	<kabalak@gmx.net>

	* configure.in : Added tr to ALL_LINGUAS .

2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	* po/ChangeLog: Added this thing to make 'make dist' happy.

	Use that from now on for changes in po/.  Seems to be the standard
	thing to do.
	
2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus/libnautilus.h
	  libnautilus/nautilus-zoomable.h
	  libnautilus/ntl-view-frame.h:

	Include the new <nautilus-view-component.h> instead of
	<nautilus.h>
	
	  src/ntl-uri-map.h
	  src/ntl-view.h:

	Same.
	
2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	* components/rpmview/nautilus-rpm-view.c:

	Did not build on redhat 5.2 because RPMTAG_FILENAMES has been
	obseleted in the version of rpm that ships with 5.2 apparently.
	I added a dumb hack to define RPMTAG_FILENAMES to
	RPMTAG_OLDFILENAMES which is almost surely the wrong thing to do,
	but i really need to have nautilus building while i do the
	nautilus view changes.  I gave myself a bug to properly address
	this soon (472).
	
2000-04-14  Maciej Stachowiak  <mjs@eazel.com>

	* ChangeLog-20000414: rolled over from ChangeLog.
	

