AC_INIT(src)

if test -n "$GNOME2_PATH"; then
	PATH="$GNOME2_PATH/bin:$PATH"
	export PATH
fi

AM_INIT_AUTOMAKE(nautilus, 0.1)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AM_DISABLE_STATIC
AM_PROG_LIBTOOL

AM_SANITY_CHECK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_ISC_POSIX

dnl Checks for libraries.
AM_PATH_GLIB(1.2.0,,
AC_MSG_ERROR([
*** GLIB 1.2.0 or better is required. The latest version of GLIB
*** is always available from ftp://ftp.gtk.org/.]))

AM_PATH_GNOME(1.0.0,,AC_MSG_ERROR([*** GNOME 1.0.0 or better is
required.]), gdk_pixbuf gnorba bonobo vfs)
AC_SUBST(GDK_PIXBUF_CFLAGS)
AC_SUBST(GDK_PIXBUF_LIBS)
AC_SUBST(GNORBA_CFLAGS)
AC_SUBST(GNORBA_LIBS)
AC_SUBST(BONOBO_CFLAGS)
AC_SUBST(BONOBO_LIBS)
AC_SUBST(VFS_CFLAGS)
AC_SUBST(VFS_LIBS)

AM_PATH_LIBGLADE(,AC_MSG_ERROR([*** Libglade 0.7 or better is needed.]), gnome)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Some additional warning options.
AC_ARG_ENABLE(more-warnings, [--enable-more-warnings	Maximum compiler warnings],
	enable_compile_warnings="$enableval", enable_compile_warnings=yes)
AC_ARG_ENABLE(fatal-warnings, [--enable-fatal-warnings	Make warnings fatal],
	enable_fatal_warnings="$enableval", enable_fatal_warnings=yes)

# Arg is enabled
if test "$GCC" = "yes" && test "$enable_compile_warnings" != "no"; then
	CFLAGS="$CFLAGS \
	-W -Wcast-align -Wchar-subscripts \
	-Wmissing-declarations -Wmissing-prototypes \
	-Wnested-externs -Wpointer-arith \
	-Wno-sign-compare -Wsign-promo -Wshadow \
	-Wpadded -Wundef"
fi
if test "$GCC" = "yes" && test "$enable_fatal_warnings" != "no"; then
	CFLAGS="$CFLAGS -Werror"
fi

AC_OUTPUT([
Makefile
icons/Makefile
idl/Makefile
libnautilus/Makefile
src/Makefile
src/file-manager/Makefile
components/Makefile
components/history/Makefile
components/help/Makefile
])
