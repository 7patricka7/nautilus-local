2000-05-31  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-program-chooser.c:
	(populate_program_list), (nautilus_program_chooser_new),
	(nautilus_program_chooser_get_application),
	(nautilus_program_chooser_get_component):
	* libnautilus-extensions/nautilus-program-chooser.h:
	* libnautilus-extensions/nautilus-program-choosing.c:
	(set_up_program_chooser), (nautilus_choose_component_for_file),
	(nautilus_choose_application_for_file): Got rid of enum
	NautilusProgramChooserType, replaced with equivalent but
	more general enum GnomeVFSMimeActionType.

2000-05-31  Darin Adler  <darin@eazel.com>

	* src/nautilus-application.c: (nautilus_app_startup):
	Make a new window even when you say --manage-desktop for now,
	because closing the last window or Quit is the only way to get
	rid of the desktop until we do some more work on it.
	
	* src/nautilus-window-manage-views.c:
	(nautilus_window_request_location_change):
	Always open in a new window when starting with the desktop.
	
	* src/nautilus-window.c: (nautilus_window_goto_uri_callback),
	(nautilus_window_constructed): Tiny formatting tweak.

2000-05-31  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-mime-type.c,
	* libnautilus-extensions/nautilus-mime-type.h:
	Removed these files, which had contained the old stopgap
	mime-type-to-application table.
	* libnautilus-extensions/Makefile.am: Take removed files out
	of build.
	* src/nautilus-property-browser.c,
	* src/nautilus-sidebar.c: Remove #includes for removed files.

2000-05-31  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-program-chooser.c:
	(populate_program_list): Change the way data from program lists
	is freed; this clarifies the code and fixes a double-destroy.
	* src/nautilus-sidebar.c: (nautilus_sidebar_update_buttons):
	Don't display "Open With..." button if there are no available
	choices. This fixes part of bug 1044 (need to do the same
	kind of thing for menus). 

2000-05-31  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(start_rubberbanding):
	at Susan's suggestion, made the selection box 25% opaque instead
	of 50% opaque in anti-aliased mode.
	
	* src/file-manager/fm-icon-view.c: (play_file):
	added the "-q" option to mpg123 invocation so it doesn't spew
	stuff to standard output

2000-05-31  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c: 
	(compute_menu_item_info): Initialize *return_sensitivity to
	TRUE; it was uninitialized in some cases.
	(add_application_to_gtk_menu), (create_open_with_gtk_menu):
	Cleaned up list-handling using new gnome-vfs API.
	
	* src/nautilus-sidebar.c: Removed placeholder local implementation
	of gnome_vfs_mime_application_list_free now that there's a real
	one in gnome-vfs.

2000-05-31  Darin Adler  <darin@eazel.com>

	Another cut on the desktop. Way closer.

	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-generous-bin.h:
	* libnautilus-extensions/nautilus-generous-bin.c:
	Added a new class NautilusGenerousBin. This is a GtkBin
	subclass that gives its entire allocation to its child.
	Used both in the widgetry for desktop windows and as a
	base class for NautilusViewFrame for now.
	
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	(turn_on_line_wrap_flag), (turn_on_line_wrap_flag_callback):
	Changed to use gtk_container_foreach instead of the old
	gtk_container_children, since I now understand that the
	latter is just a convenience cover for the former.
	
	* src/Makefile.am:
	* src/nautilus-window-state.c: [removed]
	* src/nautilus-window-state.h: [removed]
	The only function in here was a wonky one that did goto_uri
	of go_home depending on the parameter. Changed the callers
	and things got clearer anyway.
	
	* src/nautilus-application.h:
	* src/nautilus-application.c: (display_caveat),
	(nautilus_app_startup):
	* src/nautilus-main.c: (main):
	Changed rules about which windows are created on startup. This
	puts us into a slightly bad state because it's now easy to
	create a desktop window with no way to get rid of it.
	
	* src/nautilus-desktop-window.h:
	* src/nautilus-desktop-window.c:
	(nautilus_desktop_window_initialize_class),
	(nautilus_desktop_window_initialize), (destroy), (realize):
	A better cut at the desktop window creation that now mostly works.
	
	* src/nautilus-main.c: (main):
	Changed the "--desktop" option's name to "--manage-desktop".
	
	* src/nautilus-view-frame.h:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_initialize_class),
	(nautilus_view_frame_initialize),
	(nautilus_view_frame_destroy_client),
	(nautilus_view_frame_destroy),
	(nautilus_view_frame_construct_arg_set):
	Changed to use NautilusGenerousBin as base class. Also use the
	Nautilus boilerplate macros.
	
	* src/nautilus-window-manage-views.c:
	(nautilus_window_request_location_change):
	Use goto_uri instead of set_initial_state.
	
	* src/nautilus-window-private.h:
	* src/nautilus-window.h:
	* src/nautilus-window.c: (nautilus_window_go_home):
	Make go_home public and move the actual code needed to go to the
	home package into the function.

	* src/nautilus-window.c: (nautilus_window_constructed):
	Reduced the amount of hackery on behalf of the desktop window and
	used the NautilusGenerousBin class.

2000-05-31  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_load_uri),
	(mozilla_content_view_request_location_change):
	Exorcist the moz:// hack.
	
	* components/mozilla/nautilus-mozilla-content-view.oafinfo:
	Change the protocol from moz to http.

	* src/nautilus-applicable-views.c:
	Prefer the mozilla component over the ntl-web-browser.
	
2000-05-31  Ramiro Estrugo  <ramiro@eazel.com>

	* components/rpmview/nautilus-rpm-view.oafinfo:

	"fix" bug 725 by changing the supported uri types of the rpm view
	component to be only "file" since it doesnt grok remote uris.

	Having the rpm view grok remote uris would be a cool, feature.  I
	have resummarized bug 725 to reflect this.
	
2000-05-31  Darin Adler  <darin@eazel.com>

	* RENAMING: Small updates.
	
	* components/help/converters/gnome-info2html2/main.c: (main):
	* components/html/glibwww-init.c: (glibwww_parse_proxy_env):
	* components/html/ntl-web-browser.c: (main):
	* components/loser/content/nautilus-content-loser.c:
	(ensure_fail_env):
	* components/loser/sidebar/nautilus-sidebar-loser.c:
	(ensure_fail_env):
	* components/notes/nautilus-notes.c: (main):
	* libnautilus-extensions/nautilus-view-identifier.c:
	(get_lang_list):
	* src/nautilus-application.c: (nautilus_app_startup):
	* src/nautilus-main.c: (main):
	Changed from getenv to g_getenv, even though it makes no
	difference right now, because it's "the right thing to do (tm)".
	
	* components/services/time/nautilus-view/trilobite-eazel-time-view.h:
	Fixed include (the build was broken for me or anyone who doesn't
	have old .h files sitting around in their install directory).
	
	* libnautilus-extensions/nautilus-directory.c:
	(construct_alternate_metafile_uri):
	Use nautilus_get_user_directory instead of hard-coding the name
	of the user directory.
	
	* libnautilus-extensions/nautilus-file-utilities.h:
	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_get_user_directory), (nautilus_get_user_main_directory):
	Use #defines instead of global constants since these are things
	that do not change and this is not C++ :-) Added "get_" to the
	names of these functions so they would be verbs instead of nouns.
	(nautilus_get_desktop_directory): Added this new function for use
	by the desktop code.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(nautilus_global_preferences_get_enabled_sidebar_panel_view_identifiers),
	(nautilus_global_preferences_get_disabled_sidebar_panel_view_identifiers),
	(global_preferences_register_sidebar_panels_preferences_for_ui):
	* libnautilus-extensions/nautilus-view-identifier.h:
	* libnautilus-extensions/nautilus-view-identifier.c:
	(nautilus_view_identifier_list_free):
	* src/nautilus-applicable-views.c: (nautilus_navigation_info_free):
	Changed nautilus_view_identifier_free_list to *_list_free to match
	other calls with similar names.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(user_level_changed_callback):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(get_themed_icon_file_path):
	* src/file-manager/fm-properties-window.c: (get_property_names):
	* src/nautilus-bookmark-list.c:
	(nautilus_bookmark_list_get_file_path):
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_drag_data_get), (make_drag_image),
	(remove_color), (remove_background), (remove_emblem),
	(get_xml_path), (add_background_to_browser), (add_color_to_file),
	(emblem_dialog_clicked), (make_properties_from_directory):
	Change to use directory calls by new "get_" names.
	
	* src/Makefile.am: Removed nautilus.h since it is long gone,
	and fixed spelling of nautlus-window-state.h.
	
	* src/file-manager/.cvsignore: Stop ignoring things that we
	no longer generated.
	
	* src/file-manager/desktop-item.c: [removed]
	* src/file-manager/desktop-item.h: [removed]
	* src/file-manager/desktop-layout.c: [removed]
	* src/file-manager/desktop-layout.h: [removed]
	* src/file-manager/desktop-window.c: [removed]
	* src/file-manager/desktop-window.h: [removed]
	The rest of the code has been harvested from the desktop
	implementation. As I said before we can always recover it if we
	decide we want to reuse it.
	
	* src/file-manager/fm-main.c: [removed]
	This was no longer used and was getting out of date. The file manager
	is now compiled in rather than being a separate process.
	
	* src/nautilus-desktop-window.c:
	(nautilus_desktop_window_initialize_class),
	(nautilus_desktop_window_initialize),
	(nautilus_desktop_window_new), (realize):
	Another cut at the desktop code. Still not working too well,
	but way further along.
	
	* src/nautilus-sidebar.h:
	* src/nautilus-sidebar.c:
	* src/nautilus-view-frame.c:
	(nautilus_view_frame_handle_client_destroy_2):
	* src/nautilus-window-manage-views.c:
	* src/nautilus-window.h:
	* src/nautilus-window.c:
	* src/nautilus-window-private.h:
	Changed the names to use Sidebar instead of IndexPanel.
	Also changed to say sidebar panel instead of meta view in many
	places.

2000-05-31  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-user-level-manager.c:
	(nautilus_user_level_manager_make_gconf_key),
	(nautilus_user_level_manager_make_current_gconf_key):
	* nautilus-widgets/nautilus-user-level-manager.h:

	New functions to generate keys for the current user level as well
	as any other user level.
	
2000-05-31  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences-pane.c:
	(nautilus_preferences_pane_destroy), (prefs_pane_construct):

	Fix bug 993.  Some frames in the preferences dialog were too big
	cause the parent vbox was erroneously marked homogenous.
	
2000-05-31  Ramiro Estrugo  <ramiro@eazel.com>

	Remove the user level pane from the preferences dialog.  Place the
	user level choices directly in the settings menu.

	Also uncouple user level from preferences.  User level is no
	longer a preference itself.

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui),
	(user_level_changed_callback),
	(nautilus_global_preferences_shutdown),
	(nautilus_global_preferences_startup):
	Remove all of the user level ui stuff.
	
	* nautilus-widgets/nautilus-user-level-manager.c:
	(user_level_manager_new), (nautilus_user_level_manager_initialize),
	(nautilus_user_level_manager_initialize_class),
	(user_level_manager_destroy), (gconf_get_user_level_string),
	(user_level_set_default_if_needed),
	(gconf_user_level_changed_callback),
	(nautilus_user_level_manager_get),
	(nautilus_user_level_manager_set_user_level),
	(nautilus_user_level_manager_get_user_level):
	Emit the the "user_level_changed" signal from a gconf callback
	instead of "by hand".  Otherwise we are out of whack because of
	gconf asyncness.

	* src/nautilus-window-menus.c:
	(settings_menu_user_level_radio_group_callback),
	(settings_menu_user_level_customize_callback),
	(settings_menu_customize_callback),
	(nautilus_window_initialize_menus),
	(user_level_menu_path_to_user_level),
	(user_level_user_level_to_menu_path):
	* src/nautilus-window.h:
	Remove the "General Settings" menu item.  Replace it with a
	user level chooser as well as current user level customizer.
	
2000-05-31  Fatih Demir	<kabalak@gmx.net>
	
	* nautilus.desktop: Added the Turkish entries.

2000-05-31  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/time/nautilus-view/.cvsignore:
	Ignore generated files.
	
2000-05-31  Pavel Cisler <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c: (fs_move_to_trash):
	* src/file-manager/fm-directory-view.c: (fm_directory_is_trash),
	(fm_directory_view_confirm_deletion),
	(fm_directory_view_trash_or_delete_selection),
	(duplicate_callback):
	More work on fallback deletion when move to Trash is not available.
	Display a warning dialog.
	Get rid of commented out code that I'll no longer need.
	Removed FIXMEs that are no longer true.
	
2000-05-30  Mike Fleming  <mfleming@eazel.com>

	* components/services/time/Makefile.am:

	Added simple time view to the build

2000-05-30  Mike Fleming  <mfleming@eazel.com>

	* components/services/time/nautilus-view/.cvsignore:
	* components/services/time/nautilus-view/Makefile.am:
	* components/services/time/nautilus-view/main.c:
	(sample_object_destroyed), (sample_make_object), (main):
	* components/services/time/nautilus-view/trilobite-eazel-time-view.c:
	(set_status_text), (sync_button_pressed), (url_button_pressed),
	(timediff_button_pressed), (update_time_display),
	(trilobite_eazel_time_view_initialize_class),
	(trilobite_eazel_time_view_initialize),
	(trilobite_eazel_time_view_destroy),
	(trilobite_eazel_time_view_get_nautilus_view),
	(trilobite_eazel_time_view_load_uri),
	(sample_notify_location_change_callback), (bonobo_sample_callback),
	(sample_merge_bonobo_items_callback):
	*
	components/services/time/nautilus-view/trilobite-eazel-time-view.h:
	*
	components/services/time/nautilus-view/trilobite-eazel-time-view.oa
	finfo:
	*
	components/services/time/service/trilobite-eazel-time-service.oafin
	fo:

	Added embarassingly weak simple Nautilus View for the eazal-time 
	service

2000-05-30  Andy Hertzfeld  <andy@eazel.com>

	* icons/Makefile.am:
	* icons/audio.png:
	new icon for audio preview feedback; I'm sure Susan will want to improve this.
	* libnautilus-extensions/nautilus-icon-canvas-item.c: (map_pixbuf):
	finished off audio preview task 259 by showing an image to indicate previewing audio.
	* src/file-manager/fm-icon-view.c: (play_file), (preview_sound):
	fixed problem with aborting sound previews by calling setsid() and killing the entire group

2000-05-30  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(launch_application_from_menu_item), (add_application_to_gtk_menu),
	(add_component_to_gtk_menu), (create_open_with_gtk_menu),
	(add_open_with_bonobo_menu_item), (add_application_to_bonobo_menu),
	(add_component_to_bonobo_menu), (reset_bonobo_open_with_menu),
	(fm_directory_view_real_update_menus):

2000-05-30  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-types.h:
	* nautilus-installer/src/callbacks.h:
	* nautilus-installer/src/support.c: (lookup_widget),
	(create_dummy_pixmap), (create_pixmap), (create_image):
	* nautilus-installer/src/support.h:
	Added the support files
	
2000-05-30  Eskil Heyn Olsen  <eskil@eazel.com>

	* nautilus-installer/Makefile.in:
	* nautilus-installer/src/Makefile.am:
	* nautilus-installer/src/Makefile.in:
	Removed the Makefile.in's and added the .am instead.
	
2000-05-30  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.h:
	* src/file-manager/dfos-xfer.c: (handle_xfer_ok), 
	(fs_delete):
	Added delete calls that set up a gnome-vfs delete operation.

	* src/file-manager/dfos-xfer.c:
	(fs_xfer), (fs_move_to_trash), (fs_empty_trash):
	Changed to use new xfer options making it a little
	clearer which copy engine operation gets to run.

	* src/file-manager/dfos-xfer.c:
	(fs_xfer), (fs_move_to_trash):
	Fixed a leak of the item_names list.
	
	* src/file-manager/dfos-xfer.c: 
	(fs_new_folder):
	Changed to use "untitled folder".
	
	* src/file-manager/fm-directory-view.c:
	(bonobo_menu_move_to_trash_callback),
	(fm_directory_can_move_to_trash),
	(fm_directory_view_trash_or_delete_selection), (trash_callback),
	(compute_menu_item_info), (reset_bonobo_trash_delete_menu),
	(fm_directory_view_real_merge_menus),
	(fm_directory_view_real_update_menus),
	(fm_directory_view_get_context_menu_index):
	Add logic that picks the Delete/Move To Trash menu items depending
	on whether selected items can be moved to Trash or not. Added code
	that decides if items can be moved to Trash from a given folder.  

	* src/file-manager/dfos-corba.c: (convert_options):
	Disabled some dead code.
	
2000-05-30  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/eazel-alt-install.c:
	(main):
	* components/services/install/lib/Makefile.am:
	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_class_initialize), (fetch_remote_package_list),
	(eazel_install_emit_download_progress),
	(eazel_install_emit_download_failed),
	(eazel_install_emit_install_failed),
	(eazel_install_emit_uninstall_failed), (eazel_install_log),
	(eazel_install_open_log):
	Fixed a horribly cut'n'paste bug in the signal bindings. Also
	doing some stuff on making the lib log properly
	
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-protocols.c:
	(http_fetch_remote_file):
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(download_all_packages), (install_all_packages),
	(uninstall_packages):
	More cleaning out of g_errors, g_asserts and such.
	
	* components/services/trilobite/libtrilobite/Makefile.am:
	* nautilus-installer/src/Banner_Left.xpm:
	* nautilus-installer/src/Final_Inside.xpm:
	* nautilus-installer/src/Final_Top.xpm:
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.in:
	* nautilus-installer/src/Step_3a_Inside.xpm:
	* nautilus-installer/src/Step_3b_Inside.xpm:
	* nautilus-installer/src/Step_One_Inside.xpm:
	* nautilus-installer/src/Step_One_Top.xpm:
	* nautilus-installer/src/Step_Three_Top.xpm:
	* nautilus-installer/src/Step_Two_Inside.xpm:
	* nautilus-installer/src/Step_Two_Top.xpm:
	* nautilus-installer/src/callbacks.c: (set_images):
	* nautilus-installer/src/installer.c: (append_name_to),
	(download_failed), (install_failed), (gen_report),
	(dump_failure_info), (installer):
	* nautilus-installer/src/interface.c: (create_window):
	* nautilus-installer/src/main.c: (main):
	More work on the installer, especially making it
	use Arlo's graphics and still be a static binary.
	
2000-05-30  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_label_text_aa), (nautilus_icon_canvas_item_render):
	fixed bug where we would crash when going down to the lowest zoom
	level on the anti-aliased canvas, by checking the drawing conditions
	and exiting if they're not met.
	
2000-05-30  John Sullivan  <sullivan@eazel.com>

	Adapted much of the open-with and view-as code to use
	the new API, whose implementation awaits. This causes 
	us to temporarily lose the command-buttons-in-sidebar 
	feature until the new API's implementation happens.

	Some of these changes are only partially done; I've
	got a list of things to finish still. But feel free 
	to bug me about anything in particular that seems bad.

	* libnautilus-extensions/nautilus-program-chooser.h:
	* libnautilus-extensions/nautilus-program-chooser.c:
	(populate_program_list): Use real API to add programs
	to list in dialog.
	(nautilus_program_chooser_new): Remember whether this
	is an application-choosing or component-choosing dialog.
	(nautilus_program_chooser_get_application),
	(nautilus_program_chooser_get_component): New functions,
	get the item in the list that the user selected.
	* libnautilus-extensions/nautilus-program-choosing.h:
	Change parameter in NautilusApplicationChoiceCallback
	from char * to GnomeVFSMimeApplication.
	* libnautilus-extensions/nautilus-program-choosing.c:
	(nautilus_choose_application_for_file),
	(nautilus_choose_component_for_file): Get the chosen
	item from the dialog instead of returning a hardwired
	value.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_chose_application_callback): Take
	GnomeVFSMimeApplication instead of char *.
	(add_open_with_gtk_menu_item): Enable menu items now
	that they work.
	(launch_application_from_menu_item): New function, callback
	used when user picks an app from context menu.
	(view_uri_from_menu_item): New function, callback used
	when user picks a viewer from context menu. 
	(add_application_to_gtk_menu),
	(add_component_to_gtk_menu): New functions, set up menu items.
	(create_open_with_gtk_menu): Use real API to populate
	open_with context menu items.
	(bonobo_menu_select_all_callback), (select_all_callback),
	(fm_directory_view_real_merge_menus):
	Fixed bug where context menu "Select All" didn't work by
	separating bonobo and gtk callbacks.
	* src/nautilus-sidebar.c:
	(nautilus_index_panel_chose_application_callback),
	(add_command_buttons), (gnome_vfs_mime_application_list_free),
	(nautilus_index_panel_update_buttons): Use real API instead
	of hardwired set of buttons for different MIME types. This
	currently means you always get only the "Open with ..." button,
	but the real buttons will reappear once we have our new
	application-choosing scheme in place.

2000-05-30  Andy Hertzfeld  <andy@eazel.com>

	* src/file-manager/fm-icon-view.c: (play_file),
	(icon_container_preview_callback):
	play it preview a much broader range of sounds using "play"
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_filled_rectangle_aa), (draw_stretch_handles_aa),
	(nautilus_icon_canvas_item_render):
	draw the stretch handles in anti-aliased mode.  This isn't quite
	finished yet, since there's a bug that makes the icon itself disappear
	
2000-05-30  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.h:
	* src/file-manager/dfos-xfer.c: (sync_xfer_callback), (fs_xfer),
	(new_folder_xfer_callback), (fs_new_folder), (fs_move_to_trash),
	(fs_empty_trash):
	New copy engine entry calls supporting New Folder creation.
	Pass NULL to sync_xfer_callback because it doesn't use any pass-thru
	state.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class),
	(bonobo_menu_new_folder_callback), (start_renaming_item),
	(new_folder_rename_later), (new_folder_done),
	(fm_directory_view_new_folder), (compute_menu_item_info),
	(fm_directory_view_real_create_selection_context_menu_items),
	(reset_bonobo_open_with_menu),
	(fm_directory_view_real_merge_menus),
	(fm_icon_view_start_renaming_item),
	(fm_icon_view_initialize_class):
	Add the "New Folder" command. Add a menu item that invokes it.
	Add code to allow me to select the new folder once it was 
	created and start a rename on it.
	

Tue May 30 11:21:31 2000  Raph Levien  <raph@acm.org>

	* librsvg/art_render.h:
	* librsvg/art_render.c:
	* librsvg/art_render_svp.h:
	* librsvg/art_render_svp.c:
	* librsvg/art_render_gradient.h:
	* librsvg/art_render_gradient.c: Changed version number test to
	2.3. This will avoid build problems against latest
	gnome-libs-1-0 libart_lgpl.

2000-05-30  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c:
	(nautilus_preferences_initialize):
	Instead of creating our own gconf client, share one with the user
	level manager.  Otherwise i get weird gconf connection errors.

	* nautilus-widgets/nautilus-user-level-manager.c:
	(user_level_manager_new),
	(nautilus_user_level_manager_initialize_class),
	(user_level_manager_ensure_global_manager),
	(user_level_set_default_if_needed),
	(nautilus_user_level_manager_get),
	(nautilus_user_level_manager_get_user_level),
	(nautilus_user_level_manager_get_user_level_names),
	(nautilus_user_level_manager_get_gconf_client):
	* nautilus-widgets/nautilus-user-level-manager.h:
	Add method to expose a refed gconf client.
	Change the global manager initialization code to prevent stoopid
	infinite loop.  Let gconf know about the ~/.gconf/nautilus
	directory.  
	
2000-05-30  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	Fix bug 724 by adding a slightly better, but still lame mozilla
	detection artificial intelligence.

2000-05-30  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-user-level-manager.c:
	(user_level_manager_new), (nautilus_user_level_manager_initialize),
	(nautilus_user_level_manager_initialize_class),
	(user_level_manager_destroy),
	(user_level_manager_get_global_manager),
	(user_level_manager_is_initialized), (get_gconf_user_level_string),
	(user_level_set_default_if_needed),
	(nautilus_user_level_manager_get),
	(nautilus_user_level_manager_set_user_level),
	(nautilus_user_level_manager_get_user_level),
	(nautilus_user_level_manager_get_num_user_levels),
	(nautilus_user_level_manager_get_user_level_names):
	* nautilus-widgets/nautilus-user-level-manager.h:
	New class to manage user level stuff.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(nautilus_global_preferences_startup):
	* nautilus-widgets/Makefile.am:
	* nautilus-widgets/nautilus-preferences.c:
	(nautilus_preferences_initialize):
	* nautilus-widgets/nautilus-preferences.h:
	* nautilus-widgets/test-nautilus-preferences.c: (main):
	Undo the last stoopid change cuz the user level stuff is now
	hidden in the NautilusUserLevelManager class.
	
2000-05-30  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-drag.c:
	* libnautilus-extensions/nautilus-drag.h:
	(nautilus_drag_items_local), (nautilus_drag_can_accept_item),
	(nautilus_drag_can_accept_items):
	More drag&drop support calls shared between list and icon view.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_selection_items_local),
	(receive_dropped_keyword),
	(nautilus_icon_container_receive_dropped_icons),
	(nautilus_icon_dnd_update_drop_target):
	Remove calls that are replaced by nautilus-drag.c equivalents.
	Tweak some whitespace.

	* libnautilus-extensions/nautilus-gtk-extensions.c:
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	(nautilus_gtk_marshal_NONE__INT_INT_INT):
	Add some more signal glue.
	
	* libnautilus-extensions/nautilus-list.h:
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize_class), (nautilus_list_drag_drop),
	(nautilus_list_row_at):
	Add more drop handling. Add signal that sends of dropped data
	and context to fm-list-view.c. Added nautilus_list_row_at
	that fm-list-view.c needs to handle the drop.
	
	* src/file-manager/fm-directory-view.c:
	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-icon-view.c: (icon_view_can_accept_item),
	(icon_view_get_container_uri), (icon_view_move_copy_items),
	(create_icon_container), (fm_directory_view_get_uri), 
	(fm_directory_view_move_copy_items),
	(fm_directory_view_can_accept_item):
	Rework public calls to not take a container view as an argument
	and can be used by both list and icon view classes.
	Add new private signal handler callbacks that replace the 
	public calls.
	
	* src/file-manager/fm-list-view.c: (fm_list_nautilus_file_at),
	(fm_list_handle_dropped_icons), (create_list):
	Drop handling code.

2000-05-30  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences-group.c:
	(nautilus_preferences_group_add_item):
	* nautilus-widgets/nautilus-preferences-item.c:
	(preferences_item_construct), (enum_radio_group_changed_callback):
	* nautilus-widgets/nautilus-preferences.c:
	(nautilus_preferences_find_preference):
	* nautilus-widgets/nautilus-preferences.h:

	Rename (nautilus_preferences_find_preference) to 
	(nautilus_preferences_find_preference) to avoid confusion with a
	function ill add next.
	
2000-05-30  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(nautilus_global_preferences_startup):
	* nautilus-widgets/nautilus-preferences.c:
	(preferences_hash_node_alloc), (preferences_hash_node_free),
	(preferences_hash_node_add_callback),
	(preferences_hash_node_remove_callback),
	(preferences_hash_node_free_func),
	(preferneces_callback_node_alloc),
	(preferneces_callback_node_free),
	(preferneces_callback_node_free_func),
	(preferneces_callback_node_invoke_func), (preferences_register),
	(nautilus_preferences_get_preference),
	(nautilus_preferences_set_info), (set_default_value_if_needed),
	(nautilus_preferences_enum_add_entry),
	(preferences_hash_node_lookup),
	(preferences_hash_node_lookup_with_registration),
	(preferences_gconf_callback),
	(nautilus_preferences_add_boolean_callback),
	(nautilus_preferences_add_enum_callback),
	(nautilus_preferences_add_callback),
	(nautilus_preferences_remove_callback),
	(nautilus_preferences_set_boolean),
	(nautilus_preferences_get_boolean),
	(nautilus_preferences_set_enum), (nautilus_preferences_get_enum),
	(nautilus_preferences_set), (nautilus_preferences_get),
	(nautilus_preferences_initialize),
	(nautilus_preferences_is_initialized),
	(nautilus_preferences_shutdown):
	* nautilus-widgets/nautilus-preferences.h:
	* nautilus-widgets/test-nautilus-preferences.c: (main):

	Cleanup preferences to make the code easier to modify.  Name
	things more consistently.  Put global variables in a struct to
	make then clearly distiguishable from local ones.  

	Also, add change the initialize api to be fed the number of user
	levels and their names.  More on this later.
	
2000-05-30  Ramiro Estrugo  <ramiro@eazel.com>

	* components/history/nautilus-history-view.c: (main):
	* libnautilus-extensions/nautilus-global-preferences.c:
	(nautilus_global_preferences_startup):
	* libnautilus-extensions/nautilus-global-preferences.h:
	* src/nautilus-application.c: (nautilus_app_class_init):
	* src/nautilus-main.c: (main):

	Change preferences startup code to occur in only one place.
	
2000-05-29  Raph Levien  <raph@acm.org>

	* librsvg/art_render_gradient.c (art_render_gradient_setpix): Fixed
	an off-by-one loop error.

2000-05-29  Andy Hertzfeld  <andy@eazel.com>

	implemented task 259, simple UI for previewing sounds.  Implemented by
	making the icon container emit a preview signal on mouse-over, then connecting
	to it in fm-icon-view to inspect the mime-type and launch/kill a sound player.
	Currently only works for mp3 files, but others types are coming soon.
	
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_marshal_INT__POINTER_INT):
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	added new marshaller to handle our "preview" signal
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_event):
	generate the preview signal when the mouse enters and leaves the icon
	
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	(nautilus_icon_container_initialize_class),
	(nautilus_icon_container_emit_preview_signal):
	support for the preview signal
	
	* src/file-manager/fm-icon-view.c: (play_file), (preview_sound),
	(icon_container_preview_callback), (create_icon_container):
	receive the preview signal and inspect the mime type.  Right now we
	just handle mp3s.  Use a timeout to delay, current set at 1000 ms.
	When the timeout fires, launch a player.  If we leave the icon, kill the
	timeout and player as necessary.
	
2000-05-29  Raph Levien  <raph@acm.org>

	This commit adds the ability to render SVG gradients to librsvg.
	The full imaging model is supported. However, coordinate handling
	is still a subset of the SVG spec. In particular, only
	gradientUnits = userSpace is supported, and coordinates can only
	be specified in user units (ie not percentages or other CSS
	dimensions). Nonetheless, this level of functionality should be
	adequate for rendering gradient-containing images converted from
	Illustrator.

	* librsvg/art_render.c:
	* librsvg/art_render.h:
	* librsvg/art_render_gradient.c:
	* librsvg/art_render_gradient.h:
	* librsvg/art_render_svp.c:
	* librsvg/art_render_svp.h: Added these files, which provide
	features of Libart 2.3.0 (ie, cvs HEAD as of today) conditionally
	on systems with 2.2.0 (ie, cvs gnome-libs-1-0 as of today)
	installed.

	* librsvg/art_rgba.c:
	* librsvg/art_rgba.h:
	* librsvg/art_rgba_svp.c:
	* librsvg/art_rgba_svp.h: Removed these libart source files, as
	they are no longer used (rgba compositing is done in art_render
	now).

	* librsvg/rsvg.c: Numerous changes to accomodate new paint server
	approach (based on libart's new modular rendering architecture).

	* librsvg/rsvg-defs.h:
	* librsvg/rsvg-defs.c: Added these files, containing utility
	functions for managing SVG defs.

	* librsvg/rsvg-css.h:
	* librsvg/rsvg-css.c: Added these files. Moved all CSS parsing
	functions of rsvg.c here.

	* librsvg/rsvg-paint-server.h:
	* librsvg/rsvg-paint-server.c: Added these files. Filling and
	stroking are now done through the paint server abstraction
	rather than direct calls to Libart.

	* librsvg/test.svg: Added this test file containing some SVG
	gradients.

	* librsvg/Makefile.am: Added new files.

	* librsvg/test-rsvg.c (main): Added multiple iteration option, for
	memory leak testing.

2000-05-29  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_drag_drop): Removed unused variable.

2000-05-29  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-drag.c:
	* libnautilus-extensions/nautilus-drag.h:
	* libnautilus-extensions/nautilus-icon-dnd.c:
	* libnautilus-extensions/nautilus-icon-dnd.h:
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_drag_selection_item_new), (drag_selection_item_destroy),
	(nautilus_drag_destroy_selection_list),
	(nautilus_drag_build_selection_list),
	(create_selection_shadow),
	(nautilus_icon_container_dropped_icon_feedback),
	(drag_data_received_callback),
	(nautilus_icon_container_ensure_drag_data), (drag_end_callback),
	(nautilus_icon_container_selection_items_local),
	(nautilus_icon_canvas_item_can_accept_items), (handle_local_move),
	(handle_nonlocal_move),
	(nautilus_icon_container_receive_dropped_icons),
	(nautilus_icon_container_free_drag_data), (nautilus_icon_dnd_fini),
	(drag_drop_callback), (nautilus_list_initialize), (nautilus_list_drag_end),
	(nautilus_list_drag_leave), (nautilus_list_drag_drop),
	(nautilus_list_drag_data_received):
	Start splitting out drag&drop code common between icon view and list view
	into a new file.
	Start adding drag&drop calls to list view.
	Bunch of renamings.

2000-05-29  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-list.c:
	(nautilus_string_list_get_index_for_string),
	(nautilus_self_check_string_list):
	* libnautilus-extensions/nautilus-string-list.h:
	New function to access the index for a given string.
	
2000-05-29  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-clean.sh:
	Update for latest ntl-* -> nautilus-* renaming.  Keep the old ntl-
	names as well to prevent stale component braindamage.
	
2000-05-29  Ramiro Estrugo  <ramiro@eazel.com>

	* components/history/.cvsignore:
	* components/notes/.cvsignore:
	* components/services/time/command-line/.cvsignore:
	Ignore generated files.
	
2000-05-29  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-string-picker.c,
	* nautilus-widgets/nautilus-string-picker.h:
	New widget to pick a string from a list.
	
	* nautilus-widgets/test-nautilus-preferences.c:
	New test program.  Test prefrences things.

	* nautilus-widgets/test-nautilus-widgets.c:
	Remove preference tests.  Test only non preference widgetry.

	* nautilus-widgets/Makefile.am,
	* nautilus-widgets/.cvsignore:
	Add test-nautilus-preferences.	

2000-05-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-string-list.h,
	* libnautilus-extensions/nautilus-string-list.c:
	(nautilus_string_list_as_g_list): New function to return the
	string list as a GList. 	

2000-05-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.h:
	Remove unneeded inclusion of nautilus-string-list.h
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	Fix a user visible typo in appearance/graphics.
	Add a better description for the sidebar panels pane (bug 304)

2000-05-28  Andy Hertzfeld  <andy@eazel.com>

	fixed bug 604, handle dropped files in sidebar by setting location.  Followed
	Maciej's suggestion of making sidebar work like the location bar, emitting the
	"location_changed" signal and making the window attach to it.
	
	* src/nautilus-sidebar.c: (nautilus_index_panel_initialize_class),
	(receive_dropped_uri_list):
	added a location_changed signal, and emitted it when receiving a dropped uri
	* src/nautilus-sidebar.h:
	added slot for the location_changed signal
	* src/nautilus-window.c: (nautilus_window_constructed):
	connect window to sidebar's location_changed signal
	
2000-05-28  Andy Hertzfeld  <andy@eazel.com>

	added a preference for alternative toolbar icons, which defaults to the
	standard Gnome icons.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	added a checkbox for alternative toolbar icons in appearance pane	
	* libnautilus-extensions/nautilus-global-preferences.h:
	added NAUTILUS_PREFERENCES_EAZEL_TOOLBAR_ICONS
	
	* src/nautilus-window-private.h:
	added field to remember home button	
	* src/nautilus-window-toolbars.c: (remember_buttons),
	(setup_button), (setup_toolbar_images),
	added code to change the button images according to the preference
	(nautilus_window_initialize_toolbars),
	restructured to choose proper icons, and added a callback to watch the preference
	(nautilus_window_toolbar_remove_theme_callback):
	* src/nautilus-window.c: (nautilus_window_destroy):
	* src/nautilus-window.h:
	made it remove the preference callback when the window is destroyed
	
	* icons/eazel/Makefile.am:
	* icons/eazel/Back.png:
 	* icons/eazel/Forward.png:
	* icons/eazel/Up.png:
	* icons/eazel/Home.png:
 	added Susan's icons to eazel images folder

2000-05-28  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-sidebar-tabs.c: (nautilus_index_tabs_add_view),
	(nautilus_index_tabs_remove_view),
	(nautilus_index_tabs_set_visible):
	* src/nautilus-window.c:
	(window_update_sidebar_panels_from_preferences):

	g_warning with trailing \n == EVIL! - fix.

2000-05-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_register_for_ui):
	* nautilus-widgets/nautilus-preferences.c:
	(nautilus_preferences_set_boolean),
	(nautilus_preferences_set_enum), (nautilus_preferences_set):

	Make sure the preference values are indeed different than the
	currently stored ones.  Otherwise, bogus callbacks get emitted
	causing innefecient (and unneeded!) things such as directories
	reloading.
	
2000-05-28  Pavel Cisler  <pavel@eazel.com>

	* src/nautilus-window-menus.c: (help_menu_about_nautilus_callback):
	Fix an accent.

2000-05-27  Pavel Cisler  <pavel@eazel.com>

	* src/nautilus-application.c: (nautilus_app_quit):
	Used the fixed-up gnome_vfs_shutdown to properly synchronize 
	with GnomeVFS threads that are still finishing up. Got rid of
	nautilus_app_real_quit and the other hacky code that I used
	to do this before gnome_vfs_shutdown was working properly.
	Got rid of a bunch of FIXMEs that are now take care of.

	* libnautilus-extensions/nautilus-directory-async.c:
	(cancel_directory_counts), (top_left_read_close),
	(cancel_top_left_read), (nautilus_metafile_read_cancel),
	(start_getting_directory_counts), (start_getting_top_lefts):
	Added cancel calls to the different GnomeVFS async tasks that
	can be running when opening a Nautilus window, called them
	from the NautilusDirectory destroy call.
	
	Nautilus now shuts down GnomeVFS jobs cleanly during a quit. 
	There is still a problem where in some cases it will take a 
	while before the async jobs go away. This seems to be because
	the corresponding NautilusDirectory doesn't get destroyed right
	away when a window is closed. I need to get Darin to help me fix
	this. 

2000-05-27  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/lib/eazel-install-object.c:
	(eazel_install_uninstall):
	* components/services/install/lib/eazel-install-public.h:
	Added eazel_install_uninstall call to the gtk+ object. This
	opened a can of worms reg. error during uninstall, which is
	also relevant to install. See bug#1024.
	
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (download_a_package),
	(download_all_packages), (install_all_packages),
	(uninstall_packages), (uninstall_a_package), (do_rpm_uninstall),
	(rpm_uninstall):
	More passing around of a EazelService object. And more sane
	errorhandling to avoid the lib causing an exit.
	
	* nautilus-installer/src/installer.c: (installer):
	Partial uninstall support.

2000-05-27  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/time/command-line/Makefile.am:
	* components/services/time/service/trilobite-eazel-time-service.c:
	(trilobite_eazel_time_service_initialize):
	The eazel-time service cli binary is now called eazel-time.
	Default maxdiff is now set to 180 secs.
	
2000-05-27  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-scroll-frame.c,
	libnautilus-extensions/nautilus-scroll-frame.h: Removed these
	unused files.
	* libnautilus-extensions/Makefile.am: Remove them from the build.

	* Renamed files as follows, as per RENAMING: 
	components/history/ntl-history-view.c -> components/history/nautilus-history-view.c
	components/history/ntl-history-view.oafinfo -> components/history/nautilus-history-view.oafinfo
	components/notes/ntl-notes.c -> components/notes/nautilus-notes.c
	components/notes/ntl-notes.oafinfo -> components/notes/nautilus-notes.oafinfo
	libnautilus-extensions/gtkscrollframe.c -> libnautilus-extensions/nautilus-scroll-frame.c
	libnautilus-extensions/gtkscrollframe.h -> libnautilus-extensions/nautilus-scroll-frame.h
	libnautilus/nautilus-view-frame.c -> libnautilus/nautilus-view.c
	libnautilus/nautilus-view-frame.h -> libnautilus/nautilus-view.h
	src/nautilus-index-tabs.c -> src/nautilus-sidebar-tabs.c
	src/nautilus-index-tabs.h -> src/nautilus-sidebar-tabs.h
	src/nautilus-index-title.c -> src/nautilus-sidebar-title.c
	src/nautilus-index-title.h -> src/nautilus-sidebar-title.h
	src/nautilus-zoomable-frame-svr.c -> src/nautilus-zoomable-frame-corba.c
	src/ntl-app.c -> src/nautilus-application.c
	src/ntl-app.h -> src/nautilus-application.h
	src/ntl-index-panel.c -> src/nautilus-sidebar.c
	src/ntl-index-panel.h -> src/nautilus-sidebar.h
	src/ntl-main.c -> src/nautilus-main.c
	src/ntl-miniicon.c -> libnautilus-extensions/nautilus-mini-icon.c
	src/ntl-miniicon.h -> libnautilus-extensions/nautilus-mini-icon.h
	src/ntl-uri-map.c -> src/nautilus-applicable-views.c
	src/ntl-uri-map.h -> src/nautilus-applicable-views.h
	src/ntl-view-bonobo-control.c -> src/nautilus-view-frame-bonobo-control.c
	src/ntl-view-bonobo-subdoc.c -> src/nautilus-view-frame-bonobo-embeddable.c
	src/ntl-view-frame-svr.c -> src/nautilus-view-frame-corba.c
	src/ntl-view-nautilus.c -> src/nautilus-view-frame-nautilus-view.c
	src/ntl-view-private.h -> src/nautilus-view-frame-private.h
	src/ntl-view.c -> src/nautilus-view-frame.c
	src/ntl-view.h -> src/nautilus-view-frame.h
	src/ntl-window-msgs.c -> src/nautilus-window-manage-views.c
	src/ntl-window-msgs.h -> src/nautilus-window-manage-views.h
	src/ntl-window-private.h -> src/nautilus-window-private.h
	src/ntl-window-state.c -> src/nautilus-window-state.c
	src/ntl-window-state.h -> src/nautilus-window-state.h
	src/ntl-window.c -> src/nautilus-window.c
	src/ntl-window.h -> src/nautilus-window.h

	* components/history/Makefile.am, components/notes/Makefile.am,
	libnautilus-extensions/Makefile.am, libnautilus/Makefile.am,
	po/POTFILES.in, src/Makefile.am,
	components/hardware/nautilus-hardware-view.h,
	components/loser/content/nautilus-content-loser.h,
	components/loser/sidebar/nautilus-sidebar-loser.h,
	components/mozilla/nautilus-mozilla-content-view.h,
	components/music/nautilus-music-view.h,
	components/rpmview/nautilus-rpm-view.h,
	components/sample/nautilus-sample-content-view.h,
	components/services/startup/nautilus-view/nautilus-service-startup-view.h,
	libnautilus/libnautilus.h, src/nautilus-desktop-window.h,
	src/nautilus-window-menus.c, src/nautilus-window-toolbars.c,
	src/file-manager/fm-directory-view.h : Updated for renamings.

	* RENAMING: removed old renamings

2000-05-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* nautilus-installer/Makefile:
	* nautilus-installer/Makefile.am:
	* nautilus-installer/Makefile.in:
	* nautilus-installer/nautilus-installer.c:
	* nautilus-installer/nautilus-installer.glade:
	* nautilus-installer/src/HACKING:
	* nautilus-installer/src/Makefile:
	* nautilus-installer/src/Makefile.in:
	* nautilus-installer/src/callbacks.c: (druid_cancel),
	(begin_install), (druid_finish), (prep_install):
	* nautilus-installer/src/installer.c: (eazel_install_progress),
	(eazel_download_progress), (installer):
	* nautilus-installer/src/installer.h:
	* nautilus-installer/src/interface.c: (create_window):
	* nautilus-installer/src/interface.h:
	* nautilus-installer/src/main.c: (main):
	Added the first pieces if the GUI installer. Since we don't want
	it to be part of the built, I've committed the generated makefiles
	as well. This also means you should be able to build it straigt
	from cvs. It already has base functionality, and is almost 70% done.
	
2000-05-26  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/command-line/eazel-alt-install.c:
	(set_parameters_from_command_line), (eazel_install_progress),
	(eazel_download_progress), (main):
	Don't build eazel-install, only eazel-alt-install, which
	uses the EazelInstall object.
	
	* components/services/install/lib/eazel-install-object.c:
	(impl_Eazel_Install_new_packages), (eazel_install_get_epv),
	(eazel_install_destroy), (eazel_install_set_arg),
	(eazel_install_class_initialize),
	(eazel_install_create_corba_object), (eazel_install_initialize),
	(eazel_install_get_type), (eazel_install_new),
	(eazel_install_new_with_config), (create_temporary_directory),
	(fetch_remote_package_list), (eazel_install_emit_install_progress),
	(eazel_install_emit_download_progress),
	(eazel_install_new_packages):
	Implemented a GTK+ object for libinstall. It has the basic
	functionality needed for the May 31st gui installer. This means it
	can be instantiated, the install and transferoptions be set and it
	can do the download of the packagelist, and download and install
	the files mentioned there. Needs upgrade & uninstall, plus a lot
	of errorchecking and memleaks (bug#982). This halfway completed bug#980.
	
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-protocols.c:
	(http_fetch_remote_file):
	* components/services/install/lib/eazel-install-protocols.h:
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (download_a_package),
	(download_all_packages), (install_all_packages),
	(uninstall_packages), (rpm_show_progress), (do_rpm_install),
	(rpm_install):
	* components/services/install/lib/eazel-install-rpm-glue.h:
	Did a lot of hacking and slashing to pass the EazelInstall object
	downwards so progress signals can be emitted. Also a lot of
	errorhandling was fixed so it doesn't just g_assert or such.
	But a lot more of that is needed (bug#1014) and some major
	slashing so the EazelInstall passing isn't so ugly (bug#980).
	
2000-05-26  Darin Adler  <darin@eazel.com>

	A little more desktop window work.

	* src/nautilus-desktop-window.c:
	(nautilus_desktop_window_initialize_class),
	(nautilus_desktop_window_initialize),
	(nautilus_desktop_window_new):
	* src/nautilus-desktop-window.h:
	* src/ntl-app.c: (nautilus_app_startup), (nautilus_app_quit),
	(nautilus_app_create_window):
	* src/ntl-app.h:
	* src/ntl-main.c: (main):
	Made a desktop window that's created when you start the program
	if you pass the --desktop option. At the moment it's a normal
	window and not set up to take over the desktop.

	* libnautilus-extensions/nautilus-glib-extensions.c:
	(nautilus_self_check_glib_extensions): Fixed some broken self-
	checks. Now we have one really broken self-check in the
	nautilus-directory.c file. I might turn that one off soon so we
	can at least run the others.
	
	* libnautilus-extensions/nautilus-gtk-macros.h:
	Changed how some of the macros work. Few of these macros were used
	in Nautilus. I hope they aren't used in the Mozilla component,
	because then I broke it.
	
	* libnautilus-extensions/nautilus-list-column-title.c:
	(nautilus_list_column_title_motion),
	(nautilus_list_column_title_button_press),
	(nautilus_list_column_title_button_release):
	Updated to use NAUTILUS_INVOKE_METHOD instead of NAUTILUS_KLASS,
	because I renamed it to NAUTILUS_CLASS and had to change these
	anyway.
	
	A little sweep for code that should be using
	CORBA_Object_is_nil instead of direct compares with
	CORBA_OBJECT_NIL.
	
	* components/html/main.c: (url_requested_cb):
	* libnautilus-extensions/bonobo-stream-vfs.c:
	(bonobo_stream_create):
	* libnautilus/nautilus-undo-manager.c:
	(set_up_bonobo_control):
	* libnautilus/nautilus-undoable.c: (nautilus_undo_register_full),
	(nautilus_undo_unregister), (nautilus_undo):
	* src/file-manager/dfos.c: (dfos_new):
	Switch to use CORBA_Object_is_nil.

	* libnautilus/nautilus-undo-manager.c: (undo_manager_unref),
	(nautilus_attach_undo_manager), (nautilus_share_undo_manager),
	(set_up_bonobo_control):
	Do some missing duplicate and release calls.
	
	* libnautilus/nautilus-undoable.c: (nautilus_undo_unregister):
	Fix a place where we'd keep a reference to a freed list.
	Change O(n^2) walk of list by index to O(n) walk by pointer.
	
	* src/ntl-index-panel.c: (nautilus_index_panel_remove_meta_view):
	Changed g_warning to a g_return_if_fail, which was designed for
	cases just like this one.
	
	* src/ntl-view-bonobo-subdoc.c:
	(bonobo_subdoc_notify_location_change):
	Put in a better version of the FIXME.

	* RENAMING: More updates.

2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	Add support for toggling sidebar panels on the fly via the
	preferences dialog.

	Also moved function prototypes and macro definitions to top of
	file.

	* src/ntl-window.c: (impl_Nautilus_ViewWindow__create),
	(nautilus_window_remove_meta_view):
	Removed the *_real cruft.  Cleaned this a tiny bit.
	
	(window_find_sidebar_panel_by_identifier):
	New function for finding panels given an identifiers.
	
	(window_update_sidebar_panels_from_preferences):
	New function to update the current list of sidebar panels from
	preferences. 
	Disabled panels are removed if they are already in the list.
	Enabled panels are added if they are not already in the list.

	NOTE: It would be 'nice' if in the future all updates of the
	sidebar panel occur in just one place - the above function for
	example.  This is in contrast to the current mess where both
	ntl-window.c and ntl-window-msgs.c abuse the meta_views list at
	random places.  Ill look into this later.

	(sidebar_panels_changed_callback):
	Now actually responds to changes.
	
	* src/ntl-window.h:
	Style dumbness.
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(nautilus_global_preferences_get_enabled_sidebar_panel_view_identifiers),
	(nautilus_global_preferences_get_disabled_sidebar_panel_view_identifiers):
	* libnautilus-extensions/nautilus-global-preferences.h:

	Add a function that returns the disabled sidebar panels.  Needed
	so that on-the-fly sidebar panel toggling can be smart about
	adding and removing views.

	Also rename some variabled to make it obvious which are the enabled
	and disabled lists.
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-index-panel.c: (nautilus_index_panel_remove_meta_view):
	Remove the tab associated with meta view as well.  Add a warning
	for the case when the page_num is bogus.  Perhaps this should be
	an assertion.  But at least this way it wont fail silently.
	
2000-05-26  John Sullivan  <sullivan@eazel.com>

	* src/ntl-view-bonobo-subdoc.c:
	(bonobo_subdoc_notify_location_change):
	Added a FIXME to the line that Dan Winship says should
	be passing a MIME type but is currently passing "".

2000-05-26  John Sullivan  <sullivan@eazel.com>

	Fixed bug 992 ("Fully Decorate Remote Views" is not a 
	sensible preference). Note that before making the
	quick wording fix Darin, Ian, and I came up with a
	longer-term plan for handling this general kind of
	thing well (bug 995).

	* libnautilus-extensions/nautilus-global-preferences.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(state_changed):
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file):
	Changed "Fully Decorate Remote Views" to "Display text in
	icons even for remote text files"
	Changed NAUTILUS_PREFERENCES_REMOTE_VIEWS to
	NAUTILUS_PREFERENCES_SHOW_TEXT_IN_REMOTE_ICONS

2000-05-26  John Sullivan  <sullivan@eazel.com>

	* src/ntl-view-bonobo-subdoc.c:
	(bonobo_subdoc_notify_location_change):
	Changed the NULL to a "", now text files work. I think
	it's back to normal now.

2000-05-26  John Sullivan  <sullivan@eazel.com>

	* src/ntl-view-bonobo-subdoc.c:
	(bonobo_subdoc_notify_location_change):
	Added a NULL parameter to a Bonobo_PersistStream_load call
	to get the build to finish. The API for this call changed.
	I have no idea whether this is the correct change, but with it
	I can build and run Nautilus. I noticed clicking on a text file
	crashes, which might be related (maybe no Bonobo components will
	work until we fix this properly)?

2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>
	* src/ntl-window.c: (nautilus_window_init),
	(nautilus_window_destroy), (nautilus_window_real_set_content_view),
	(sidebar_panels_changed_callback):

	Keep track of sidebar panel enabled/disabled toggling.  Currently
	the callback doesnt do nothing.  Soon it will.
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/install/command-line/.cvsignore:
	* components/services/install/lib/.cvsignore:
	Ignore generated files.
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_get_sidebar_panel_view_identifiers),
	(nautilus_global_preferences_get_enabled_sidebar_panel_view_identifiers),
	(global_preferences_register_sidebar_panels_preferences_for_ui),
	(global_preferences_is_sidebar_panel_enabled),
	(nautilus_global_preferences_shutdown):
	* libnautilus-extensions/nautilus-global-preferences.h:

	Expose only a single function to deal with sidebar panels.  Return
	a list of enabled view indentifiers, saving callers the work and
	complication of figuring out which panels are on.

	Make NAUTILUS_PREFERENCES_SIDEBAR_PANELS_NAMESPACE cause i need it
	to later keep track of sidebar panel changes in NautilusWindow.

	* src/ntl-uri-map.c: (got_file_info_callback),
	(nautilus_navigation_info_free):
	* src/ntl-uri-map.h:
	* src/ntl-window-msgs.c: (nautilus_window_update_state):
	Exorcise the 'sidebar_panel_identifiers' member.  Instead of
	complicating life by managing this list, simply obtain it when
	needed from global preferences.
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-index-tabs.c: (nautilus_index_tabs_initialize),
	(nautilus_index_tabs_size_request), (draw_one_tab),
	(draw_or_hit_test_all_tabs), (tab_item_find_by_name),
	(nautilus_index_tabs_add_view),
	(nautilus_index_tabs_get_title_from_index),
	(nautilus_index_tabs_remove_view),
	(nautilus_index_tabs_prelight_tab),
	(nautilus_index_tabs_select_tab), (nautilus_index_tabs_set_color),
	(nautilus_index_tabs_receive_dropped_color),
	(nautilus_index_tabs_set_title),
	(nautilus_index_tabs_set_title_mode),
	(nautilus_index_tabs_set_visible):

	Some cleanup of index tabs.

	Changed find_tab() to tab_item_find_by_name() which returns the
	actual tab item instead of a list node.

	Changed the GList append and remove operations to be more sane and
	actually work in the latter case.

	Print warnings on attempts to operate on non-existing tab items as
	these indicate programming errors upstream.

	Also add bulletproofing g_return_* macros.
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c: (pref_hash_node_alloc),
	(pref_hash_node_free), (pref_hash_node_add_callback),
	(pref_hash_node_remove_callback), (pref_callback_info_alloc),
	(preferences_gconf_callback):

	Install only ONE gconf notification for each preference or
	namespace that we care about.  Otherwise we get an exponential
	number of notifications.  Move the gconf_connection from the
	callback list info to the preference hash node.

	Remove lingering gconf notifications on destruction of hash
	nodes. 
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* components/help/hyperbola-nav-index.c:
	(hyperbola_navigation_index_new):
	* components/help/hyperbola-nav-search.c:
	(hyperbola_navigation_search_new):

	Fix the annoying as hell assertions coming from these components.
	Dont install the entry widgets as the titles for the clist.  You
	cant do this cause they have already be added to the vbox
	container and thus the barfing in gtk_container_add() about the
	widget already having a parent.  There doesnt seem to be any
	noticeable ui change because of this.  The help search/index
	continue to work as "good" as before.
	
2000-05-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c:
	(pref_hash_node_add_callback), (pref_hash_node_remove_callback),
	(preferences_gconf_callback):

	Add support for keeping track of changes within a whole preference
	namespace.  

	Pass in the expected preference to the gconf callback.  Do this so
	that we can compare the expected prefrence name with the one that
	gconf reports.  If they dont match, then we have something that
	changed within a namespace and not an individual key.
	
	Also fix some memory leaks.  Was forgetting to free a couple of
	returned preference names.
	
2000-05-26  Eskil Heyn Olsen  <chief_wanker@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/command-line/eazel-alt-install.c:
	(set_parameters_from_command_line), (eazel_install_progress),
	(main):
	* components/services/install/lib/eazel-install-object.c:
	(impl_Eazel_Install_new_packages), (eazel_install_get_epv),
	(eazel_install_destroy), (eazel_install_set_arg),
	(eazel_install_class_initialize),
	(eazel_install_create_corba_object), (eazel_install_initialize),
	(eazel_install_get_type), (eazel_install_new),
	(eazel_install_new_with_config), (create_temporary_directory),
	(fetch_remote_package_list), (eazel_install_emit_install_progress),
	(eazel_install_new_packages):
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-public.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (download_a_package),
	(download_all_packages), (install_all_packages),
	(uninstall_packages), (rpm_show_progress), (do_rpm_install),
	(rpm_install):
	* components/services/install/lib/eazel-install-rpm-glue.h:
	*
	components/services/install/lib/trilobite-eazel-install-service.oaf
	info:
	Missed a file...
	
2000-05-25  Gene Z. Ragan  <gzr@eazel.com>

	More work on undo.  Note that undo in text entry fields still
	misbehaves.  More improvements are on the way.
	
	* components/websearch/ntl-web-search.c: 
	(make_obj):
	Removed obsolete enable undo code.
	
	* libnautilus-extensions/nautilus-entry.c:
	* libnautilus-extensions/nautilus-entry.h:
	(nautilus_entry_initialize_class), (nautilus_entry_key_press),
	(nautilus_entry_insert_text), (nautilus_entry_delete_text),
	(register_edit_undo), (nautilus_entry_set_undo_key):
	Removed the enable_undo function and made undo functionality
	a default feature of NautilusEntry.
	
	* libnautilus/nautilus-undo-transaction.c:
	(nautilus_undo_transaction_add_undoable),
	(nautilus_undo_transaction_undo):
	
	* libnautilus/nautilus-undoable.c:
	* libnautilus/nautilus-undoable.h:
	(nautilus_undoable_save_undo_snapshot), (nautilus_undo_unregister):
	
	* src/file-manager/fm-properties-window.c: (create_basic_page):
	Removed obsolete enable undo code.
	
	* src/nautilus-bookmarks-window.c: (on_text_field_focus_in_event),
	(on_text_field_focus_out_event), (on_window_delete_event):
	Removed obsolete enable undo code.
	
	* src/nautilus-location-bar.c:
	* src/nautilus-location-bar.h:
	(nautilus_location_bar_set_location):
	Removed obsolete enable undo code.
	
	* src/ntl-window.c: (nautilus_window_constructed):
	Removed obsolete enable undo code.

2000-05-25  Eskil Heyn Olsen  <chief_wanker@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/command-line/eazel-alt-install.c:
	Small program to test the gtk+ version of the installer.
	
	(set_parameters_from_command_line), (main):
	* components/services/install/idl/trilobite-eazel-install.idl:
	* components/services/install/lib/Makefile.am:	
	* components/services/install/lib/eazel-install-object.c:
	(impl_Trilobite_Eazel_Install_new_packages),
	(trilobite_eazel_install_get_epv),
	(trilobite_eazel_install_destroy),
	(trilobite_eazel_install_set_arg),
	(trilobite_eazel_install_class_initialize),
	(trilobite_eazel_install_create_corba_object),
	(trilobite_eazel_install_initialize),
	(trilobite_eazel_install_get_type), (trilobite_eazel_install_new),
	(trilobite_eazel_install_new_with_config),
	(create_temporary_directory), (fetch_remote_package_list),
	(trilobite_eazel_install_new_packages):
	* components/services/install/lib/eazel-install-private.h:
	* components/services/install/lib/eazel-install-public.h:
	Created a gtk+ object for the installer. Will be needed for the ui
	object to do callbacks for the progress bars
	
	* components/services/install/lib/eazel-install-metadata.c:
	(xml_doc_sanity_checks), (init_default_install_configuration),
	(init_default_transfer_configuration):
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_local_xml_package_list):
	Removed various g_errors and g_asserts and replaced them
	with some sort of return code (boolean or NULL)
	
2000-05-25  John Sullivan  <sullivan@eazel.com>

	* src/ntl-app.c: (display_caveat): Added a missing space.


	More work on the "Open with Other" dialogs. Most of
	the UI features are present now, but they don't do
	anything since there's no API to call yet.

	* libnautilus-extensions/nautilus-gtk-extensions.h,
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_clist_get_first_selected_row),
	(nautilus_gtk_clist_get_last_selected_row):
	Moved these functions to here from NautilusList, since
	they only require a GtkCList and I needed to use one
	of them outside of NautilusList.
	
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_get_first_selected_row),
	(nautilus_list_get_last_selected_row),
	(nautilus_list_keyboard_navigation_key_press),
	(nautilus_list_new_with_titles):
	Removed get_first and get_last_selected_row, and updated
	callers to call new nautilus_gtk_clist versions.
	
	* libnautilus-extensions/nautilus-program-chooser.c:
	(populate_program_list), (nautilus_program_chooser_get_file),
	(nautilus_program_chooser_get_clist),
	(nautilus_program_chooser_get_frame),
	(nautilus_program_chooser_get_status_label),
	(nautilus_program_chooser_set_file),
	(nautilus_program_chooser_set_clist),
	(nautilus_program_chooser_set_frame),
	(nautilus_program_chooser_set_status_label), (is_in_short_list),
	(is_in_metadata_list), (update_selected_item_details),
	(program_list_selection_changed_callback), (pack_radio_button),
	(run_program_configurator_callback),
	(nautilus_program_chooser_new):
	Whole bunch of changes to push the "Open with Other" dialogs
	closer to reality.
	
	* src/ntl-window.c: 
	(view_menu_choose_view_callback): Comment changes only.
	(nautilus_window_load_content_view_menu): Changed menu item
	text from "View as ..." to "View as Other..."

2000-05-25  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	I am getting a little careless. This must end.
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_denies_access_permission): Fixed some checks
	that I had reversed.
	
	* src/ntl-app.c: (display_caveat): Took out some test code I
	checked in.

2000-05-25  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_denies_access_permission): Checked it in
	without finishing it. Bad Darin.

2000-05-25  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_denies_access_permission),
	(nautilus_file_can_set_permissions): Made the permission check
	match the Unix access model. Maciej points out that this is
	still not good enough, and Pavel points out that bug 458 is
	about just this problem.
	
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	(turn_on_line_wrap_flag): Got rid of a bad g_free that was
	trashing memory when locating the label for line wrapping.
	
	* src/ntl-app.c: (display_caveat): Used line wrapping, now that
	I know wrapping wasn't the cause of the bug before.

2000-05-25  Ramiro Estrugo  <ramiro@eazel.com>

	Cleanup cut-n-paste code for dealing the sidebar panels.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_sidebar_panels_preferences_for_ui),
	(global_preferences_get_sidebar_panel_key),
	(nautilus_global_preferences_is_sidebar_panel_enabled),
	(global_preferences_register_for_ui),
	(user_level_changed_callback),
	(nautilus_global_preferences_startup):
	Added define for sidebar panels namespace.
	
	Rename preference defines to make it clear whether they are keys
	or namespaces.

	Add function to obtain a sidebar panel key from an iid.

	Use "sidebar panels" consistently in both code and preferences
	dialog. 
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	New public function
	nautilus_global_preferences_is_sidebar_panel_enabled () that
	returns whether a sidebar panel is enabled.

	* src/ntl-uri-map.c: (sidebar_panel_preference_is_on):
	Use nautilus_global_preferences_is_sidebar_panel_enabled() instead
	of hard-coding the namespace string.
	
2000-05-25  Robin * Slomkowski <rslomkow@eazel.com>

	* configure.in (added fr)
	* po/fr.po (added new file)
	Added French language support as created by 
	Jean-Michel Ardantz <jmardantz@ifrance.com>

2000-05-25  Darin Adler  <darin@eazel.com>

	* libnautilus/nautilus-clipboard.c:
	(nautilus_clipboard_set_up_editable): Instead of ref'ing the
	control we want to do a "while_alive". The old way could be
	dangerous, so I'm glad I caught this.

2000-05-25  Darin Adler  <darin@eazel.com>

	* libnautilus/nautilus-view-frame.c:
	(nautilus_view_get_bonobo_control): Took out an extra
	bonobo_object_ref that was wreaking havoc.  If we want to make
	this ref the thing before returning it, we'll have to get it
	right.

2000-05-25  Darin Adler  <darin@eazel.com>

	* RENAMING: Updated to reflect completed tasks.
	
	* components/notes/ntl-notes.c: (make_notes_view):
	* components/websearch/ntl-web-search.c: (make_obj):
	Changed to use simplified clipboard API.
	
	* components/services/trilobite/libtrilobite/.cvsignore:
	Ignore generated files.
	
	* libnautilus-extensions/gtkscrollframe.c:
	* libnautilus-extensions/gtkscrollframe.h:
	Renamed GtkScrollFrame to NautilusScrollFrame so we won't conflict
	if a GtkScrollFrame actually gets added to gtk some day. The file
	still needs renaming (mentioned in RENAMING).
	
	* libnautilus/nautilus-clipboard.h:
	* libnautilus/nautilus-clipboard.c: (cut_callback),
	(copy_callback), (paste_callback), (clear_callback),
	(add_menu_item), (add_menu_items_callback),
	(remove_menu_items_callback), (nautilus_clipboard_set_up_editable):
	Simplified clipboard implementation. Does the same thing the old
	code did without needing a class and with a simpler API.
	
	* nautilus-widgets/nautilus-preferences-item.c:
	* src/file-manager/fm-icon-text-window.c:
	* src/nautilus-zoom-control.c:
	* src/ntl-window.c:
	Renamed _cb to _callback. Some other (minor) cleanup.

	* src/file-manager/Makefile.am:
	* src/file-manager/desktop-canvas.c: [removed]
	* src/file-manager/desktop-canvas.h: [removed]
	* src/file-manager/desktop-menu.c: [removed]
	* src/file-manager/desktop-menu.h: [removed]
	* src/file-manager/gnome-desktop.c: [removed]
	Now that I'm doing the desktop work, I know we don't need these.
	I'll be deleting the desktop source files that Havoc added as I
	harvest the useful code from them.
	
	* src/file-manager/fm-directory-view.c:
	(bonobo_control_activate_callback): Add comments.
	
	* src/nautilus-zoom-control.h: Fixed problem where the zoom
	control didn't know if it was an event box or a pixmap.
	
	* src/ntl-index-panel.c: (nautilus_index_panel_add_meta_view):
	Fixed bug that was trashing the sidebar panel names. I put
	the g_free call in the wrong place.
	
	* src/ntl-uri-map.c: (sidebar_panel_preference_is_on):
	Fixed bug where the sidebar preference wasn't saved. I found
	another place with another copy of the preference path. This
	sort of thing really needs to go in a header file, I think.
	
2000-05-25  J Shane Culpepper  <pepper@eazel.com>

	* nautilus-installer/Makefile:
	* nautilus-installer/nautilus-installer.c:
	(create_temporary_directory), (fetch_remote_package_list), (main):

	Fixed nautilus-installer so that it uses the async ghttp fetch of the
	package-list.xml.  My changes to eazel-install broke it last night.

2000-05-25  Ali Abdin  <aliabdin@aucegypt.edu

	* components/help/help-methods.c:
	(transform_absolute_file): Fixed a bug to get it to really treat
	URI's as 'absolute'. Also fixed another bug with trailing spaces.
	Necessary because the URI holds the '\n' (when the user presses
	enter.
	
	Also added debugging statements in the functions (#define ALI_DEBUG
	to turn them on). I will take them out once help actually starts
	working

2000-05-25  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/eazel-install.c:
	(generate_new_package_list), (create_temporary_directory),
	(fetch_remote_package_list), (main):
	* components/services/install/lib/eazel-install-metadata.c:
	(create_default_metadata), (create_default_configuration_metafile),
	(xml_doc_sanity_checks), (get_urltype_from_string):
	* components/services/install/lib/eazel-install-protocols.c:
	* components/services/install/lib/eazel-install-protocols.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (download_a_package),
	(download_all_packages), (install_all_packages),
	(uninstall_packages), (uninstall_a_package), (do_rpm_install):
	* components/services/install/lib/eazel-install-tests.c:
	(dump_package_list):
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(parse_category), (parse_local_xml_package_list),
	(generate_xml_package_list), (parse_pkg_template):
	* components/services/trilobite/libtrilobite/helixcode-utils.c:
	* components/services/trilobite/libtrilobite/helixcode-utils.h:

	Big time clean up of the overall flow of installs.  Now, all packages
	are downloaded before install.  Tried to setup as many of the print 
	functions as possible to support internationalization.  Removed old
	gnet http groks of the package list and now grab the package list with
	the async ghttp fetch functionality.  Did alot of cleanups in the
	rpm glue functions to make them more managable.  Removed the prune_xml
	function i swiped from Helix Code since it is no longer needed.

2000-05-24  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:
	(mozilla_net_status_callback):

	Update status flags to latest and gratest gtkmozembed api.

2000-05-24  Gene Z. Ragan  <gzr@eazel.com>
	
	* libnautilus/nautilus-undo-manager.c:
	(impl_Nautilus_Undo_Manager__forget),
	(nautilus_undo_manager_add_transaction),
	(nautilus_undo_manager_forget_transaction):
	Added code to these functions that actually works.

	* libnautilus-extensions/nautilus-entry.c:
	(nautilus_entry_enable_undo):
	Work in progress on undo.
			
	* libnautilus/nautilus-undo-manager.h:
	* libnautilus/nautilus-undoable.c: 
	* libnautilus/nautilus-undoable.h:
	(nautilus_undo_unregister):
	Make this call private to the source file.
	
	* src/ntl-window-msgs.c: 
	(nautilus_window_request_title_change):
	Fixed a build breakeing typo made by my hero.  
	I can't believe it!

2000-05-24  Darin Adler  <darin@eazel.com>

	Eliminated ContentView and ContentViewFrame.

	* components/hardware/nautilus-hardware-view.c:
	(nautilus_hardware_view_initialize),
	(hardware_view_notify_location_change_callback):
	* components/hardware/nautilus-hardware-view.h:
	* components/help/hyperbola-nav-index.c:
	(hyperbola_navigation_index_select_row):
	* components/help/hyperbola-nav-search.c:
	(hyperbola_navigation_search_select_row),
	(hyperbola_navigation_search_new):
	* components/html/ntl-web-browser.c: (browser_url_load_done),
	(browser_vfs_callback), (browser_goto_url_real),
	(browser_goto_url), (browser_select_url), (browser_title_changed),
	(browser_notify_location_change), (make_obj):
	* components/loser/content/main.c: (loser_make_object):
	* components/loser/content/nautilus-content-loser.c:
	(nautilus_content_loser_initialize),
	(loser_notify_location_change_callback):
	* components/loser/content/nautilus-content-loser.h:
	* components/loser/sidebar/main.c: (loser_make_object):
	* components/loser/sidebar/nautilus-sidebar-loser.c:
	(nautilus_sidebar_loser_initialize),
	(loser_notify_location_change_callback):
	* components/mozilla/main.c: (mozilla_make_object):
	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize),
	(mozilla_content_view_request_progress_change),
	(mozilla_content_view_request_location_change),
	(mozilla_notify_location_change_callback),
	(mozilla_title_changed_callback), (mozilla_link_message_callback):
	* components/mozilla/nautilus-mozilla-content-view.h:
	* components/music/main.c: (music_view_make_object):
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (click_column_callback),
	(music_view_notify_location_change_callback),
	(nautilus_music_view_drag_data_received):
	* components/music/nautilus-music-view.h:
	* components/rpmview/main.c: (rpm_view_make_object):
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_initialize),
	(rpm_view_notify_location_change_callback):
	* components/rpmview/nautilus-rpm-view.h:
	* components/sample/main.c: (sample_make_object):
	* components/sample/nautilus-sample-content-view.c:
	(nautilus_sample_content_view_initialize),
	(sample_notify_location_change_callback):
	* components/sample/nautilus-sample-content-view.h:
	* components/services/startup/nautilus-view/main.c:
	(services_make_object):
	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(go_to_uri), (nautilus_service_startup_view_initialize),
	(service_main_notify_location_change_cb):
	* components/services/startup/nautilus-view/nautilus-service-startup-view.h:
	* libnautilus/Makefile.am:
	* libnautilus/libnautilus.h:
	* libnautilus/nautilus-content-view-frame.c: [removed]
	* libnautilus/nautilus-content-view-frame.h: [removed]
	* libnautilus/nautilus-view-component.idl:
	* libnautilus/nautilus-view-frame-private.h:
	* libnautilus/nautilus-view-frame.c:
	(impl_Nautilus_View_save_state), (impl_Nautilus_View_load_state),
	(impl_Nautilus_View_notify_location_change),
	(impl_Nautilus_View_show_properties),
	(impl_Nautilus_View_notify_selection_change),
	(impl_Nautilus_View_stop_location_change),
	(impl_Nautilus_View__destroy), (impl_Nautilus_View__create),
	(nautilus_view_initialize_class), (nautilus_view_initialize),
	(nautilus_view_new), (nautilus_view_new_from_bonobo_control),
	(get_view_frame), (nautilus_view_request_location_change),
	(nautilus_view_request_selection_change),
	(nautilus_view_request_status_change),
	(nautilus_view_request_progress_change),
	(nautilus_view_request_title_change),
	(nautilus_view_get_bonobo_control),
	(nautilus_view_get_main_window):
	* libnautilus/nautilus-view-frame.h:
	* src/Makefile.am:
	* src/file-manager/fm-directory-view.c: (get_bonobo_control),
	(fm_directory_view_initialize), (display_selection_info),
	(fm_directory_view_send_selection_change),
	(notify_location_change_callback), (stop_location_change_callback),
	(done_loading), (fm_directory_view_activate_file_internal),
	(finish_loading_uri):
	* src/file-manager/fm-directory-view.h:
	* src/ntl-app.c: (impl_Nautilus_Application_create_object):
	* src/ntl-content-view.c: [removed]
	* src/ntl-content-view.h: [removed]
	* src/ntl-uri-map.c: (make_oaf_query_with_known_mime_type),
	(make_oaf_query_with_uri_scheme_only):
	* src/ntl-view-frame-svr.c: (impl_Nautilus_ViewFrame__destroy),
	(impl_Nautilus_ViewFrame__create),
	(impl_Nautilus_ViewFrame__get_main_window),
	(impl_Nautilus_ViewFrame_request_location_change),
	(impl_Nautilus_ViewFrame_request_selection_change),
	(impl_Nautilus_ViewFrame_request_status_change),
	(impl_Nautilus_ViewFrame_request_progress_change),
	(impl_Nautilus_ViewFrame_request_title_change):
	* src/ntl-view-private.h:
	* src/ntl-view.c: (nautilus_view_frame_class_init),
	(nautilus_view_frame_set_arg), (nautilus_view_frame_get_arg),
	(nautilus_view_frame_request_location_change),
	(nautilus_view_frame_request_selection_change),
	(nautilus_view_frame_request_status_change),
	(nautilus_view_frame_request_progress_change),
	(nautilus_view_frame_request_title_change),
	(nautilus_view_frame_set_label), (nautilus_view_frame_activate):
	* src/ntl-view.h:
	* src/ntl-window-msgs.c: (nautilus_window_request_title_change),
	(nautilus_window_load_meta_view),
	(nautilus_window_request_location_change),
	(nautilus_window_load_content_view):
	* src/ntl-window-msgs.h:
	* src/ntl-window-private.h:
	* src/ntl-window.c:
	(nautilus_window_request_title_change_callback),
	(nautilus_window_connect_content_view),
	(nautilus_window_real_set_content_view):
	Got rid of ContentView and ContentViewFrame.

2000-05-24  John Sullivan  <sullivan@eazel.com>

	* src/ntl-app.c: (display_caveat): Made the startup caveat
	window look cool. Everyone who set an environment variable
	to avoid it will now be sad.

2000-05-24  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog): Oops. Missed one case of
	"metaview" -> "sidebar-view".
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_pixbuf_aa), (draw_label_text_aa),
	(nautilus_icon_canvas_item_render): Some minor code tweaks.

2000-05-24  Darin Adler  <darin@eazel.com>

	* libnautilus/nautilus-view-component.idl:
	* src/Makefile.am:
	* src/ntl-index-panel.c: (nautilus_index_panel_add_meta_view):
	* src/ntl-meta-view.c: [deleted]
	* src/ntl-meta-view.h: [deleted]
	* src/ntl-view.c: (nautilus_view_frame_handle_client_destroy_2),
	(nautilus_view_frame_set_active_errors),
	(nautilus_view_frame_get_label), (nautilus_view_frame_set_label):
	* src/ntl-view.h:
	* src/ntl-window-msgs.c: (nautilus_window_load_meta_view),
	(nautilus_window_update_state):
	* src/ntl-window.c:
	Removed Nautilus::MetaViewFrame and all the related classes.

2000-05-24  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus/nautilus-undo-context.c:
	(impl_Nautilus_Undo_Context__get_undo_manager):
	Removed commented out cruft code.

2000-05-24  Gene Z. Ragan  <gzr@eazel.com>

	* components/notes/ntl-notes.c: 
	(notes_notify_location_change):
	Removed undo manager test code.
	
	* components/websearch/ntl-web-search.c: 
	(make_obj):
	Added undo functionality to web search component.
	
	* libnautilus/nautilus-undo-context.c:
	(impl_Nautilus_Undo_Context__get_undo_manager):
	Added ref code to call CORBA_object_duplicate()
	
	* libnautilus/nautilus-undo-manager.c:
	(impl_Nautilus_Undo_Manager__append), (nautilus_undo_manager_redo),
	(nautilus_undo_manager_add_transaction):
	Added ref code to call CORBA_object_duplicate()
	
2000-05-24  John Sullivan  <sullivan@eazel.com>

	* src/ntl-app.c: (display_caveat), (nautilus_app_startup):
	Round one of caveat dialog improvement. I managed to get it
	to be modeless and come up in front of the Nautilus window.
	The word-wrapping had to be done by hand to work around
	unsolved bug (963). The next round will involve using Arlo's
	cool picture.

2000-05-24  Darin Adler  <darin@eazel.com>

	* libnautilus/Makefile.am:
	* libnautilus/libnautilus.h:
	* libnautilus/nautilus-meta-view-frame.c: [deleted]
	* libnautilus/nautilus-meta-view-frame.h: [deleted]
	* libnautilus/nautilus-view-component.idl:
	* po/POTFILES.in:
	* src/ntl-index-panel.c: (nautilus_index_panel_add_meta_view):
	* src/ntl-window.c: (nautilus_window_add_meta_view):
	Removed Nautilus::MetaView and all the related classes.
	We still have Nautilus::MetaViewFrame (will go soon).
	
	* components/help/hyperbola-nav-index.c:
	(hyperbola_navigation_index_new):
	* components/help/hyperbola-nav-search.c:
	(hyperbola_navigation_search_new):
	* components/help/hyperbola-nav-tree.c:
	(hyperbola_navigation_tree_new):
	* components/history/ntl-history-view.c: (make_obj):
	* components/loser/sidebar/nautilus-sidebar-loser.c:
	(nautilus_sidebar_loser_initialize),
	(loser_notify_location_change_callback):
	* components/loser/sidebar/nautilus-sidebar-loser.h:
	* components/notes/ntl-notes.c: (make_notes_view):
	* components/websearch/ntl-web-search.c: (make_obj):
	Changed to use just plain view insetad of meta_view.
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(nautilus_global_preferences_get_sidebar_panel_view_identifiers),
	(nautilus_global_preferences_get_sidebar_view_iids),
	(nautilus_preferences_register_sidebar_view_preferences_for_ui),
	(global_preferences_register_for_ui):
	Changed naming to call them sidebar views instead of meta views,
	and got rid of code that depends on MetaView interface. We now
	use the sidebar_panel_name to determine if a view should show
	up in the sidebar.
	
	* src/ntl-view.h: Fixed a comment to reflect the future
	instead of the past.
	
2000-05-24  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-program-chooser.c:
	(populate_program_list), (nautilus_program_chooser_new):
	Some work on the innards of the program-choosing dialogs.
	Still not wired up to any actual data.

2000-05-24  Darin Adler  <darin@eazel.com>

	* HACKING: Moved to make clear that popt must build first.
	
	* RENAMING: Added some new file renamings.
	
	* src/nautilus-zoomable-frame-svr.c:
	* src/nautilus.h: [removed]
	* src/ntl-app.c:
	* src/ntl-main.c:
	* src/ntl-meta-view.c:
	* src/ntl-types.h: [removed]
	* src/ntl-uri-map.c:
	* src/ntl-view-bonobo-control.c:
	* src/ntl-view-bonobo-subdoc.c:
	* src/ntl-view-frame-svr.c:
	* src/ntl-view-nautilus.c:
	* src/ntl-view-private.h:
	* src/ntl-view.c:
	* src/ntl-window-msgs.c:
	* src/ntl-window-state.c:
	* src/ntl-window.c:
	Got rid of "nautilus.h" and "ntl-types.h".

	* libnautilus/nautilus-undo-context.c:
	(impl_Nautilus_Undo_Context__destroy),
	(impl_Nautilus_Undo_Context__create),
	(impl_Nautilus_Undo_Context__get_undo_manager),
	(nautilus_undo_context_new), (nautilus_undo_context_initialize),
	(destroy):
	* libnautilus/nautilus-undo-manager.c:
	(impl_Nautilus_Undo_Manager__destroy),
	(impl_Nautilus_Undo_Manager__create),
	(impl_Nautilus_Undo_Manager__append),
	(impl_Nautilus_Undo_Manager__forget),
	(impl_Nautilus_Undo_Manager__undo), (nautilus_undo_manager_new),
	(nautilus_undo_manager_initialize),
	(nautilus_undo_manager_initialize_class),
	(nautilus_undo_manager_undo), (nautilus_undo_manager_redo),
	(nautilus_undo_manager_add_transaction),
	(nautilus_undo_manager_unregister_object),
	(nautilus_undo_manager_can_undo), (nautilus_undo_manager_can_redo),
	(destroy), (nautilus_undo_manager_enable_redo),
	(nautilus_undo_manager_set_queue_depth), (free_undo_manager_list):
	Various code cleanups. Specifically, get rid of unused
	bonobo_object and rename gtk_object to bonobo_object.
	Get rid of some yucky function pointer casts.
	
	* src/ntl-app.c: (nautilus_app_init):
	Got rid of bogus extra ref.

	* libnautilus-extensions/nautilus-program-chooser.c:
	(nautilus_program_chooser_new): Reindent part just to annoy John.
	* libnautilus-extensions/nautilus-program-choosing.c:
	(nautilus_launch_application): Newline at end of file (ugh).
	
	* src/ntl-index-panel.c: (add_command_buttons): Format tweaking.
	
2000-05-24  Eskil Heyn Olsen  <eskil@eazel.om>

	* configure.in: 
	* components/services/install/command-line/Makefile.am:
	* components/services/install/lib/Makefile.am: 
	* components/services/startup/lib/Makefile.am: 
	* components/services/startup/nautilus-view/Makefile.am:
	* components/services/time/command-line/Makefile.am: 
	* components/services/time/command-line/main.c: 
	* components/services/time/service/Makefile.am: 
	* components/services/time/service/main.c: 
	* components/services/time/service/trilobite-eazel-time-service.c: 
	* components/services/trilobite/Makefile.am (SUBDIRS): 
	* components/services/trilobite/sample/command-line/Makefile.am: 
	* components/services/trilobite/sample/command-line/main.c: 
	* components/services/trilobite/sample/nautilus-view/Makefile.am (SUBDIR): 
	* components/services/trilobite/sample/service/Makefile.am: 
	* components/services/trilobite/sample/service/main.c: 
	* components/services/trilobite/sample/service/sample-service-impl.c: 
	Major cvs gymnastics to move trilobite/lib into
	trilobite/libtrilobite.

	All files in components/services/trilobite/src and lib have been
	deleted and are now in components/services/trilobite/libtrilobite.
	
2000-05-24  J Shane Culpepper  <pepper@eazel.com>

	* nautilus-installer/nautilus-installer.c:
	* nautilus-installer/Makefile:
	Removed the duplicate helixcode files from the installer.  Temporarily
	added 4 duplicate functions to the installer until I get libtrilobite
	statically linked in.

2000-05-24  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c: Make content loser component have lower
	priority than anything else.

2000-05-24  Eskil Heyn Olsen  <eskil@eazel.om>

	* components/services/trilobite/Makefile.am:
	Accidently removed the wrong subdir, reinserted lib and removed src.

	* components/services/trilobite/sample/service/Makefile.am
	* components/services/trilobite/sample/command-line/Makefile.am
	* components/services/time/service/Makefile.am:
	updated to use libtrilobite instead of libtrilobited

	* components/services/time/command-line/Makefile.am:
	Updated to only use libtrilobite

	* components/services/trilobite/Makefile.am (SUBDIRS): 
	Removed src from subdirs.

	* components/services/trilobite/lib/Makefile.am
	* components/services/trilobite/lib/libtrilobite.h: Moved
	the libtrilobited stuff into libtrilobite.

2000-05-24  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_label_text_aa), (nautilus_icon_canvas_item_render):
	made the text beneath the icons draw properly on the anti-aliased
	canvas.  There may be performance issues that require caching, but
	first I want to try this straightforward approach.
	
2000-05-23  Ramiro Estrugo  <ramiro@eazel.com>

	* HACKING:
	Added control-center blurb
	
2000-05-23  Darin Adler  <darin@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize),
	(nautilus_mozilla_content_view_destroy),
	(nautilus_mozilla_content_view_get_nautilus_view),
	(mozilla_content_view_request_progress_change),
	(mozilla_content_view_request_location_change),
	(mozilla_notify_location_change_callback),
	(mozilla_title_changed_callback), (mozilla_link_message_callback):
	* components/mozilla/nautilus-mozilla-content-view.h:
	* components/mozilla/main.c:
	Updated the Mozilla component too (oops).

2000-05-23  Arlo Rose  <arlo@eazel.com>

	* icons/Makefile.am:
	* src/nautilus-window-menus.c: (help_menu_about_nautilus_callback):
	* icons/nautilus3.jpg
	* icons/About_Image.png
	Added new about image, and a few names to the about box 
        that were missing.

2000-05-23  Maciej Stachowiak  <mjs@eazel.com>

	* RENAMING: Put in renamings for some of the "?" renamings that
	Darin had put in.

2000-05-23  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus/nautilus-undo-context.c:
	(impl_Nautilus_Undo_Context__get_undo_manager):
	Added call to CORBA_Object_duplicate(). This fixed an explosive
	bug.
	
	* libnautilus/nautilus-undo-manager.c:
	* libnautilus/nautilus-undo-manager.h:
	(nautilus_undo_manager_stash_global_undo),
	(nautilus_undo_manager_get_global_undo):
	New functions to save application global instance of
	Nautilus_Undo_Manager
	
	* src/ntl-app.c: (nautilus_app_init):
	Add call to nautilus_undo_manager_stash_global_undo.
	
	* src/ntl-view.c:
	(nautilus_view_frame_load_client):
	Connected Nautilus_Undo_Context interface to view frame.

2000-05-23  Ramiro Estrugo  <ramiro@eazel.com>

	* icons/Makefile.am:
	  icons/gnome-application-encapsulated_postscript.png,
	  icons/gnome-application-pdf.png,
	  icons/gnome-application-pgp.png,
	  icons/gnome-application-postscript.png,
	  icons/gnome-application-x-c-header.png,
	  icons/gnome-application-x-c-source.png,
	  icons/gnome-application-x-cc-source.png,
	  icons/gnome-application-x-e-theme.png,
	  icons/gnome-application-x-generic-spreadsheet.png,
	  icons/gnome-application-x-gnome-app-info.png,
	  icons/gnome-application-x-java-source.png,
	  icons/gnome-application-x-kde-app-info.png,
	  icons/gnome-application-x-php.png,
	  icons/gnome-application-x-reject.png,
	  icons/gnome-application-x-scheme-source.png,
	  icons/gnome-application-x-sql.png,
	  icons/gnome-audio-basic.png,
	  icons/gnome-audio-midi.png,
	  icons/gnome-audio-ulaw.png,
	  icons/gnome-audio-x-aiff.png,
	  icons/gnome-audio-x-mod.png,
	  icons/gnome-audio-x-pn-realaudio.png,
	  icons/gnome-audio-x-s3m.png,
	  icons/gnome-audio-x-stm.png,
	  icons/gnome-audio-x-voc.png,
	  icons/gnome-audio-x-wav.png,
	  icons/gnome-audio-x-xi.png,
	  icons/gnome-audio-x-xm.png,
	  icons/gnome-audio.png,
	  icons/gnome-core.png,
	  icons/gnome-font-afm.png,
	  icons/gnome-font-ttf.png,
	  icons/gnome-font-x-pcf.png,
	  icons/gnome-http-url.png,
	  icons/gnome-image-bmp.png,
	  icons/gnome-image-generic.png,
	  icons/gnome-image-gif.png,
	  icons/gnome-image-ief.png,
	  icons/gnome-image-jpeg.png,
	  icons/gnome-image-pbm.png,
	  icons/gnome-image-pgm.png,
	  icons/gnome-image-png.png,
	  icons/gnome-image-pnm.png,
	  icons/gnome-image-ppm.png,
	  icons/gnome-image-psd.png,
	  icons/gnome-image-ras.png,
	  icons/gnome-image-rgb.png,
	  icons/gnome-image-tga.png,
	  icons/gnome-image-tiff.png,
	  icons/gnome-image-x-xfig.png,
	  icons/gnome-image-xbm.png,
	  icons/gnome-image-xcf.png,
	  icons/gnome-image-xpm.png,
	  icons/gnome-image-xwd.png,
	  icons/gnome-pack-deb.png,
	  icons/gnome-tex.png,
	  icons/gnome-text-html.png,
	  icons/gnome-text-x-authors.png,
	  icons/gnome-text-x-copying.png,
	  icons/gnome-text-x-credits.png,
	  icons/gnome-text-x-install.png,
	  icons/gnome-text-x-makefile.png,
	  icons/gnome-text-x-readme.png,
	  icons/gnome-textfile.png,
	  icons/gnome-video-mpeg.png,
	  icons/gnome-video-quicktime.png,
	  icons/gnome-video-x-msvideo.png:
	Copy icons from gmc so that icon-association for mime type keys
	work with nautilus.

2000-05-23  John Sullivan  <sullivan@eazel.com>

	A few cleanup tweaks inspired by debugging session
	with Darin.

	* libnautilus-extensions/nautilus-program-choosing.h,
	* libnautilus-extensions/nautilus-program-choosing.c:
	(nautilus_choose_application_for_file): Make callback
	take a const char * instead of a char *.
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_chose_application_callback): take
	a const char * instead of a char *.
	* src/ntl-index-panel.c:
	(nautilus_index_panel_chose_application_callback):
	take a const char * instead of a char *.
	(open_with_callback): unref file
	(add_command_buttons): Use gtk_signal_connect instead of
	nautilus_gtk_signal_connect_free_data when passing NULL
	as the data (Doh!).

2000-05-23  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_pixbuf_aa), (nautilus_icon_canvas_item_render):
	made emblems draw properly in anti-aliased mode
	
2000-05-23  John Sullivan  <sullivan@eazel.com>

	Some pieces of the application and component-choosing UI.
	They don't do anything useful yet.

	* libnautilus-extensions/nautilus-program-chooser.h,
	* libnautilus-extensions/nautilus-program-chooser.c:
	New files with code for creating a program-choosing
	dialog (which is really degenerate right now).

	* libnautilus-extensions/nautilus-program-choosing.h,
	* libnautilus-extensions/nautilus-program-choosing.c:
	New files with functions for choosing a component or other
	program to display or open a file with. This uses the
	dialog in nautilus-program-chooser, but callers don't
	need to know that.

	* libnautilus-extensions/Makefile.am: add these new
	files to the build.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_chose_application_callback),
	(fm_directory_view_chose_component_callback), (choose_application),
	(choose_component), (bonobo_menu_other_program_callback),
	(other_application_callback), (other_viewer_callback): 
	New functions that connect the program-choosing UI to the
	menu items.
	(compute_menu_item_info): Stop desensitizing the "Other ..." items.
	(append_gtk_menu_item): Eliminated this function, made callers use
	more elaborate append_gtk_menu_item_with_view instead.
	(fm_directory_view_real_create_background_context_menu_items),
	(create_open_with_gtk_menu):
	Updated callers to append_gtk_menu_item.
	(fm_directory_view_real_create_selection_context_menu_items):
	Pass view to create_open_with_gtk_menu.
	(reset_bonobo_open_with_menu): Now takes an FMDirectoryView and
	uses it as callback data for "Other..." items.
	(fm_directory_view_real_merge_menus),
	(fm_directory_view_real_update_menus): Pass view to
	reset_bonobo_open_with_menu.
	
	* src/ntl-index-panel.c: (command_button_callback): Renamed from
	command_button_cb, also broke out application-launching code and
	moved it to libnautilus-extensions/nautilus-program-choosing.c.
	(nautilus_index_panel_chose_application_callback),
	(open_with_callback): New functions, used to wire up functionality
	of "Open with ..." button.
	(add_command_buttons): Stop desensitizing "Open with ..." button,
	and wire it up to do something.
	
	* src/ntl-window.h: Renamed field "option_cvtype" to "view_as_option_menu".
	* src/ntl-window.c: 
	(nautilus_window_constructed): Updated to match field name change.
	(nautilus_window_switch_views): New function, broken out of
	view_menu_switch_views_callback; switches window to new content view.
	(view_menu_switch_views_callback): Now calls nautilus_window_switch_views.
	(synch_view_as_menu): New function, resets displayed name of "View as"
	menu to match current content view.
	(chose_component_callback), (view_menu_choose_view_callback): New
	functions, used to implement "View as ..." menu item.
	(nautilus_window_load_content_view_menu): Store iid in menu item;
	call synch_view_as_menu; wire up "View as ..." menu item.


	* src/ntl-window-msgs.c: (handle_unreadable_location):
	Tweaked wording of an error message.
	
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_renaming_file): Tweaked wording of an error message.

2000-05-23  Darin Adler  <darin@eazel.com>

	* libnautilus/nautilus-undo-manager.c:
	(impl_Nautilus_Undo_Manager__append), (nautilus_undo_manager_undo),
	(nautilus_undo_manager_redo),
	(nautilus_undo_manager_add_transaction),
	(nautilus_undo_manager_unregister_object), (destroy),
	(nautilus_undo_manager_set_queue_depth), (free_undo_manager_list),
	(prune_undo_manager_list), (nautilus_get_undo_manager),
	(undo_manager_unref), (undo_manager_ref),
	(nautilus_attach_undo_manager), (set_up_bonobo_control),
	(nautilus_undo_set_up_bonobo_control):
	Some cleanup of the undo code, including a first cut of the
	set_up_bonobo_control function. Also got rid of all the excess
	unrefs that we didn't need. I hope this is right now. Also fixed
	bug where code was trying to bonobo_object_unref a CORBA object
	directly.
	
	* libnautilus/nautilus-undo-manager.c:
	(nautilus_undo_set_up_bonobo_control):
	* libnautilus/nautilus-undo-manager.h:
	* libnautilus/nautilus-view-frame.c:
	(nautilus_view_real_set_bonobo_control):
	Change from setup to set_up. Setup is a noun, set up a verb phrase.
	
	* libnautilus/nautilus-undoable.c: (nautilus_undo_register_full),
	(nautilus_undo): Some minor cleanup and unrefing the transaction
	after adding it to the undo manager.
	
2000-05-23  Darin Adler  <darin@eazel.com>

	The ViewFrame <-> View renaming.
	We still have to rename the files.

	* RENAMING: Put in explicit cases for file name renaming.
	
	* src/Makefile.am:
	* src/nautilus-desktop-window.c:
	* src/nautilus-desktop-window.h:
	Added placeholders. I'll be putting code in here soon.
	
	* src/ntl-app.c: (display_prototype_caveat):
	Changed to use nautilus_simple_dialog again since otherwise it
	comes up behind the main window. Perhaps someone will resolve
	that issue and change it back.

	* libnautilus-extensions/nautilus-gnome-extensions.h:
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	(nautilus_warning_dialog), (nautilus_warning_dialog_parented):
	Added centered version of the warning dialog as well, since
	Eskil was using gnome_warning_dialog in a case where he really
	wanted lines wrapped.
	
	* components/loser/.cvsignore:
	* components/loser/content/.cvsignore:
	* components/loser/sidebar/.cvsignore:
	Ignore some generated files.

	* components/hardware/main.c: (hardware_view_make_object):
	* components/hardware/nautilus-hardware-view.c:
	(nautilus_hardware_view_initialize),
	(nautilus_hardware_view_destroy),
	(nautilus_hardware_view_get_nautilus_view),
	(hardware_view_notify_location_change_callback):
	* components/hardware/nautilus-hardware-view.h:
	* components/help/hyperbola-nav-index.c:
	(hyperbola_navigation_index_select_row),
	(hyperbola_navigation_index_new):
	* components/help/hyperbola-nav-search.c:
	(hyperbola_navigation_search_select_row),
	(hyperbola_navigation_search_new):
	* components/help/hyperbola-nav-tree.c:
	(hyperbola_navigation_tree_new),
	(hyperbola_navigation_tree_notify_location_change),
	(hyperbola_navigation_tree_select_row):
	* components/history/ntl-history-view.c:
	(hyperbola_navigation_history_notify_location_change),
	(hyperbola_navigation_history_select_row), (make_obj):
	* components/html/ntl-web-browser.c: (browser_url_load_done),
	(browser_vfs_callback), (browser_goto_url_real),
	(browser_goto_url), (browser_select_url), (browser_title_changed),
	(browser_notify_location_change), (make_obj):
	* components/loser/content/main.c: (loser_make_object):
	* components/loser/content/nautilus-content-loser.c:
	(nautilus_content_loser_initialize),
	(nautilus_content_loser_destroy),
	(nautilus_content_loser_get_nautilus_view),
	(nautilus_content_loser_load_uri),
	(loser_notify_location_change_callback), (bonobo_loser_callback):
	* components/loser/content/nautilus-content-loser.h:
	* components/loser/sidebar/main.c: (loser_make_object):
	* components/loser/sidebar/nautilus-sidebar-loser.c:
	(nautilus_sidebar_loser_initialize),
	(nautilus_sidebar_loser_destroy),
	(nautilus_sidebar_loser_get_nautilus_view),
	(loser_notify_location_change_callback):
	* components/loser/sidebar/nautilus-sidebar-loser.h:
	* components/music/main.c: (music_view_make_object):
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (nautilus_music_view_destroy),
	(nautilus_music_view_get_nautilus_view),
	(music_view_notify_location_change_callback):
	* components/music/nautilus-music-view.h:
	* components/notes/ntl-notes.c: (notes_notify_location_change),
	(make_notes_view):
	* components/rpmview/main.c: (rpm_view_make_object):
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_initialize), (nautilus_rpm_view_destroy),
	(nautilus_rpm_view_get_nautilus_view),
	(rpm_view_notify_location_change_callback):
	* components/rpmview/nautilus-rpm-view.h:
	* components/sample/main.c: (sample_make_object):
	* components/sample/nautilus-sample-content-view.c:
	(nautilus_sample_content_view_initialize),
	(nautilus_sample_content_view_destroy),
	(nautilus_sample_content_view_get_nautilus_view),
	(sample_notify_location_change_callback):
	* components/sample/nautilus-sample-content-view.h:
	* components/services/startup/nautilus-view/main.c:
	(services_make_object):
	* components/services/startup/nautilus-view/nautilus-service-startup-view.c:
	(go_to_uri), (nautilus_service_startup_view_initialize),
	(nautilus_service_startup_view_get_nautilus_view),
	(service_main_notify_location_change_cb):
	* components/services/startup/nautilus-view/nautilus-service-startup-view.h:
	* components/websearch/ntl-web-search.c:
	(web_search_notify_location_change), (do_search), (make_obj):
	* libnautilus/nautilus-clipboard.c:
	(nautilus_clipboard_info_set_view),
	(nautilus_clipboard_info_get_view),
	(nautilus_clipboard_info_get_bonobo_control):
	* libnautilus/nautilus-clipboard.h:
	* src/file-manager/fm-directory-view.c:
	(bonobo_menu_move_to_trash_callback), (get_bonobo_control),
	(fm_directory_view_initialize), (display_selection_info),
	(fm_directory_view_send_selection_change),
	(notify_location_change_callback),
	(notify_selection_change_callback),
	(stop_location_change_callback), (done_loading),
	(fm_directory_view_get_nautilus_view),
	(fm_directory_view_activate_file_internal), (finish_loading_uri):
	* src/file-manager/fm-directory-view.h:
	Updated for new libnautilus where the NautilusViewFrame
	classes are now named NautilusView.
	
	* libnautilus/nautilus-content-view-frame.c:
	(nautilus_content_view_initialize), (nautilus_content_view_new),
	(nautilus_content_view_new_from_bonobo_control),
	(nautilus_content_view_destroy),
	(nautilus_content_view_initialize_class),
	(nautilus_content_view_request_title_change):
	* libnautilus/nautilus-content-view-frame.h:
	* libnautilus/nautilus-meta-view-frame.c:
	(nautilus_meta_view_initialize), (nautilus_meta_view_new),
	(nautilus_meta_view_new_from_bonobo_control),
	(nautilus_meta_view_destroy),
	(nautilus_meta_view_initialize_class):
	* libnautilus/nautilus-meta-view-frame.h:
	Changed Nautilus*ViewFrame classes to Nautilus*View. This is
	something we had in RENAMING for some time, and it's consistent
	with Bonobo's naming of BonoboControl and BonoboControlFrame.
	Also changed interfaces to use actual BonoboControl * instead of
	using BonobObject * and query_interface.
	
	* libnautilus/nautilus-undo-manager.c:
	(nautilus_undo_setup_bonobo_control):
	* libnautilus/nautilus-undo-manager.h:
	Changed the BonoboControl parameter to actually be of type
	BonoboControl * instead of BonoboObject *.
	
	* libnautilus/nautilus-view-frame-private.h:
	* libnautilus/nautilus-view-frame.c:
	(impl_Nautilus_View_save_state), (impl_Nautilus_View_load_state),
	(impl_Nautilus_View_notify_location_change),
	(impl_Nautilus_View_show_properties),
	(impl_Nautilus_View_notify_selection_change),
	(impl_Nautilus_View_stop_location_change),
	(impl_Nautilus_View__destroy), (impl_Nautilus_View__create),
	(nautilus_view_initialize_class), (nautilus_view_set_arg),
	(nautilus_view_get_arg), (nautilus_view_initialize),
	(nautilus_view_new), (nautilus_view_new_from_bonobo_control),
	(nautilus_view_destroy), (nautilus_view_ensure_view_frame),
	(nautilus_view_request_location_change),
	(nautilus_view_request_selection_change),
	(nautilus_view_request_status_change),
	(nautilus_view_request_progress_change),
	(nautilus_view_get_bonobo_control),
	(nautilus_view_get_main_window),
	(nautilus_view_real_set_bonobo_control):
	* libnautilus/nautilus-view-frame.h:
	* libnautilus/nautilus-zoomable.c:
	(impl_Nautilus_Zoomable__get_zoom_level),
	(impl_Nautilus_Zoomable__set_zoom_level),
	(impl_Nautilus_Zoomable__get_min_zoom_level),
	(impl_Nautilus_Zoomable__get_max_zoom_level),
	(impl_Nautilus_Zoomable__get_is_continuous),
	(impl_Nautilus_Zoomable_zoom_in),
	(impl_Nautilus_Zoomable_zoom_out),
	(impl_Nautilus_Zoomable_zoom_to_fit),
	(impl_Nautilus_Zoomable__destroy),
	(impl_Nautilus_Zoomable__create), (marshal_NONE__DOUBLE),
	(nautilus_zoomable_initialize_class), (nautilus_zoomable_set_arg),
	(nautilus_zoomable_get_arg), (nautilus_zoomable_initialize),
	(nautilus_zoomable_new),
	(nautilus_zoomable_new_from_bonobo_control),
	(nautilus_zoomable_destroy),
	(nautilus_zoomable_ensure_zoomable_frame),
	(nautilus_zoomable_set_zoom_level),
	(nautilus_zoomable_get_bonobo_control),
	(nautilus_zoomable_real_set_bonobo_control):
	* libnautilus/nautilus-zoomable.h:
	* src/nautilus-zoomable-frame-svr.c:
	(impl_Nautilus_ZoomableFrame__destroy),
	(impl_Nautilus_ZoomableFrame__create),
	(impl_Nautilus_ZoomableFrame_notify_zoom_level):
	* src/ntl-app.c: (impl_Nautilus_Application_create_object),
	* src/ntl-content-view.c:
	(impl_Nautilus_ContentViewFrame_request_title_change),
	(nautilus_content_view_frame_get_type),
	(nautilus_content_view_frame_class_init),
	(nautilus_content_view_frame_init),
	(nautilus_content_view_frame_set_active),
	(nautilus_content_view_frame_request_title_change):
	* src/ntl-content-view.h:
	* src/ntl-index-panel.c: (nautilus_index_panel_add_meta_view),
	(nautilus_index_panel_remove_meta_view):
	* src/ntl-index-panel.h:
	* src/ntl-meta-view.c: (nautilus_meta_view_frame_initialize_class),
	(nautilus_meta_view_frame_initialize),
	(nautilus_meta_view_frame_set_label),
	(nautilus_meta_view_frame_get_label):
	* src/ntl-meta-view.h:
	* src/ntl-view-bonobo-control.c: (destroy_bonobo_control_view),
	(nautilus_view_frame_activate_uri),
	(bonobo_control_try_load_client),
	(bonobo_control_notify_location_change):
	* src/ntl-view-bonobo-subdoc.c: (destroy_bonobo_subdoc_view),
	(bonobo_subdoc_notify_location_change),
	(bonobo_subdoc_try_load_client):
	* src/ntl-view-frame-svr.c: (impl_Nautilus_ViewFrame__destroy),
	(impl_Nautilus_ViewFrame__create),
	(impl_Nautilus_ViewFrame_request_location_change),
	(impl_Nautilus_ViewFrame_request_selection_change),
	(impl_Nautilus_ViewFrame_request_status_change),
	(impl_Nautilus_ViewFrame_request_progress_change):
	* src/ntl-view-nautilus.c: (nautilus_view_try_load_client),
	(destroy_nautilus_view), (nv_show_properties), (nv_save_state),
	(nv_load_state), (nv_notify_location_change),
	(nv_notify_selection_change), (nv_stop_location_change):
	* src/ntl-view-private.h:
	* src/ntl-view.c: (nautilus_view_frame_get_type),
	(nautilus_view_frame_class_init), (nautilus_view_frame_set_arg),
	(nautilus_view_frame_get_arg), (nautilus_view_frame_init),
	(nautilus_view_frame_destroy_client),
	(nautilus_view_frame_destroy), (nautilus_view_frame_constructed),
	(nautilus_view_frame_construct_arg_set),
	(nautilus_view_frame_size_request),
	(nautilus_view_frame_size_allocate),
	(nautilus_view_frame_handle_client_destroy),
	(nautilus_view_frame_handle_client_destroy_2),
	(nautilus_view_frame_load_client),
	(nautilus_view_frame_notify_location_change),
	(nautilus_view_frame_notify_selection_change),
	(nautilus_view_frame_load_state), (nautilus_view_frame_save_state),
	(nautilus_view_frame_show_properties),
	(nautilus_view_frame_stop_location_change),
	(nautilus_view_frame_is_zoomable),
	(nautilus_view_frame_get_zoom_level),
	(nautilus_view_frame_set_zoom_level),
	(nautilus_view_frame_get_min_zoom_level),
	(nautilus_view_frame_get_max_zoom_level),
	(nautilus_view_frame_get_is_continuous),
	(nautilus_view_frame_zoom_in), (nautilus_view_frame_zoom_out),
	(nautilus_view_frame_zoom_to_fit), (nautilus_view_frame_get_iid),
	(nautilus_view_frame_get_client_objref),
	(nautilus_view_frame_get_objref),
	(nautilus_view_frame_request_location_change),
	(nautilus_view_frame_request_selection_change),
	(nautilus_view_frame_request_status_change),
	(nautilus_view_frame_request_progress_change),
	(nautilus_view_frame_notify_zoom_level), (check_object),
	(nautilus_view_frame_set_active_errors):
	* src/ntl-view.h:
	* src/ntl-window-msgs.c: (nautilus_window_notify_selection_change),
	(nautilus_window_request_selection_change),
	(nautilus_window_request_status_change),
	(nautilus_window_request_progress_change),
	(nautilus_window_request_title_change),
	(nautilus_window_update_internals), (nautilus_window_update_view),
	(nautilus_window_view_destroyed), (nautilus_window_load_meta_view),
	(nautilus_window_request_location_change),
	(nautilus_window_load_content_view),
	(nautilus_window_update_state), (nautilus_window_set_state_info),
	(nautilus_window_begin_location_change):
	* src/ntl-window-msgs.h:
	* src/ntl-window-private.h:
	* src/ntl-window.c: (zoom_in_cb), (zoom_out_cb),
	(nautilus_window_set_arg), (nautilus_window_send_show_properties),
	(view_menu_switch_views_callback),
	(nautilus_window_set_content_view),
	(nautilus_window_add_meta_view),
	(nautilus_window_remove_meta_view_real),
	(nautilus_window_remove_meta_view),
	(nautilus_window_request_location_change_cb),
	(nautilus_window_request_selection_change_cb),
	(nautilus_window_request_status_change_cb),
	(nautilus_window_request_progress_change_cb),
	(nautilus_window_request_title_change_callback),
	(nautilus_window_connect_view),
	(nautilus_window_connect_content_view),
	(nautilus_window_real_set_content_view):
	* src/ntl-window.h:
	Changed Nautilus*View classes to Nautilus*ViewFrame. This is
	something we had in RENAMING for some time, and it's consistent
	with Bonobo's naming of BonoboControl and BonoboControlFrame.
	Also changed interfaces to use actual BonoboControl * instead of
	using BonoboObject * and query_interface.
	
2000-05-23  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus/nautilus-undo-context.c:
	* libnautilus/nautilus-undo-context.h:
	(impl_Nautilus_Undo_Context__get_undo_manager),
	(nautilus_undo_context_new), (nautilus_undo_context_initialize):
	Additonal work on making the undo context CORBA object.
	
	* libnautilus/nautilus-undo-manager.c:
	* libnautilus/nautilus-undo-manager.h:
	* libnautilus/nautilus-undo-manager-private.h:
	(impl_Nautilus_Undo_Manager__undo),
	(nautilus_undo_manager_initialize),
	(nautilus_undo_manager_add_transaction),
	(nautilus_undo_manager_unregister_object),
	(nautilus_get_undo_manager), (nautilus_attach_undo_manager),
	Changed APIs to accept and return Nautilus_Undo_Manager CORBA
	object instead of NautilusUndoManager pointer.

	(nautilus_undo_setup_bonobo_control):
	Added function stub to be filled later.  This function
	will attach an undo manager to a bonobo control.

	Removed several functions no longer needed in new design,
	including nautilus_undo_manager_begin_transaction(),
	and nautilus_undo_manager_end_transaction().
	
	* src/nautilus-window-menus.c: (edit_menu_undo_callback),
	(nautilus_window_initialize_menus), (update_undo_menu_item):
	Changed to use modified undo API
	
	* src/ntl-app.c: 
	(nautilus_app_init):
	Changed to use modified undo API
	
	* src/ntl-window.c: (nautilus_window_constructed)
	Changed to use modified undo API

2000-05-23  Andy Hertzfeld  <andy@eazel.com>

	Made a preference for the anti-aliased canvas, and hooked it up so
	you can switch on the fly. Anti-aliased drawing is still only
	partially implemented, so it defaults off.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	added a preference category "Appearance" and an entry for
	"smoother but slower"
	* libnautilus-extensions/nautilus-global-preferences.h:
	added NAUTILUS_PREFERENCE_ANTI_ALIASED_CANVAS
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_pixbuf_aa), (map_pixbuf), (nautilus_icon_canvas_item_draw),
	(nautilus_icon_canvas_item_render):
	made the render method draw right at different scales, partially
	implemented emblems
	* libnautilus-extensions/nautilus-icon-container.c: (destroy),
	(nautilus_icon_container_initialize),
	(nautilus_icon_container_new),
	(nautilus_icon_container_set_anti_aliased_mode),
	(click_policy_changed_callback),
	(anti_aliased_preferences_changed):
	receive notification when the anti-aliased preference changes, and
	update the canvas
	* libnautilus-extensions/nautilus-icon-container.h:
	added nautilus_icon_container_set_anti_aliased_mode
	
2000-05-22  Maciej Stachowiak  <mjs@eazel.com>

	Completed bugzilla task 763, Test component needed for failure
	cases. Two new components called "Content Loser" and "Sidebar
	Loser" will fail on startup based on environment variables or in
	response to menu or toolbar items (Darin suggested using silly
	names, though not these specific ones).
	
	* components/loser/README: Some docs on making the new components
	fail.

	* components/loser/content/main.c,
	components/loser/content/nautilus-content-loser.c,
	components/loser/content/nautilus-content-loser.h: New content
	view which fails on demand.
	* components/loser/content/nautilus-content-loser.oafinfo: oaf
	activation record for it.

	* components/loser/sidebar/main.c,
	components/loser/sidebar/nautilus-sidebar-loser.c,
	components/loser/sidebar/nautilus-sidebar-loser.h: New sidebar
	panel that fails on demand.
	* components/loser/sidebar/nautilus-sidebar-loser.oafinfo: oaf
	activation record for it.

	* components/Makefile.am, components/loser/Makefile.am,
	components/loser/content/Makefile.am,
	components/loser/sidebar/Makefile.am, configure.in: Added loser
	components to build.

	* nautilus-clean.sh: Added loser components to nautilus-clean.sh

2000-05-22  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages):
	* configure.in:
	* nautilus-installer/.cvsignore:
	* nautilus-installer/Makefile:
	* nautilus-installer/Makefile.am:
	* nautilus-installer/helixcode-utils.c: (xml_get_value),
	(prune_xml), (check_for_root_user), (check_for_redhat),
	(determine_redhat_version), (determine_mandrake_version),
	(determine_turbolinux_version), (determine_suse_version),
	(determine_debian_version), (determine_distribution_type),
	(get_distribution_name):
	* nautilus-installer/helixcode-utils.h:
	* nautilus-installer/nautilus-installer.c: (show_usage),
	(show_license), (init_default_iopts), (init_default_topts),
	(create_temporary_directory), (fetch_remote_package_list), (main):
	Adding a simple implementation of the nautilus-installer.  Beginning
	of the fix for Bug # 863.  This is a statically linked command line
	implementation only right now.

2000-05-22  Eskil Heyn Olsen  <eskil@eazel.om>

	* src/ntl-app.c (display_prototype_caveat): Changed to simply use
	a gnome_warning_dialog instead of a nautilus_simple_dialog. We
	loose the word wrapping though. But now the main window loads
	while the warning is present, plus it's a real GNOME warning box,
	so be afraid...
	(display_prototype_caveat): If NAUTILUS_NO_CAVEAT_DIALOG is set,
	do not display the caveat warning.

	* components/services/time/service/trilobite-eazel-time-service.oafinfo: 
	* components/services/trilobite/sample/service/trilobite-eazel-sample-service.oafinfo: 
	Fixed faulty tags
	
2000-05-22  Darin Adler  <darin@eazel.com>

	* components/services/time/command-line/.cvsignore:
	Ignore some generated files.

	* components/services/time/service/trilobite-eazel-time-service.oafinfo: 
	Eskil rescued this file from the attic, but he probably won't think
	that's worth putting into the change log :-)

2000-05-22  Darin Adler  <darin@eazel.com>

	Implemented Reload for directory views.
	
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(nautilus_directory_monitor_add_internal),
	(dequeue_pending_idle_callback), (cancel_directory_load),
	(directory_load_done),
	(nautilus_directory_monitor_remove_internal),
	(nautilus_directory_call_when_ready_internal),
	(mark_all_files_unconfirmed), (start_monitoring_file_list),
	(nautilus_directory_stop_monitoring_file_list),
	(nautilus_directory_force_reload):
	* libnautilus-extensions/nautilus-directory.c:
	(call_files_changed_unref_free_list),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved),
	(nautilus_directory_file_monitor_add):
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c: (nautilus_file_get),
	(destroy), (nautilus_file_monitor_remove), (nautilus_file_delete),
	(nautilus_file_mark_gone), (nautilus_file_changed),
	(nautilus_file_emit_changed):
	Added the necessary tweaks to the async. I/O so we can handle
	a reload, not just the initial load.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_add): Changed API so it will detect if
	you try to add the same item twice and indicate it with a return
	value; needed so we can handle reload.
	
	* libnautilus-extensions/nautilus-list.c: (set_single_click_mode),
	(update_single_click_mode_from_preferences),
	(nautilus_list_initialize), (click_policy_changed_callback):
	Fixed bug where a change in single click mode would chang the
	appearance of the names in the list, but not cause a redraw when
	the setting was changed.
	
	* libnautilus/nautilus-undoable.c:
	(undo_atom_destroy_callback_data), (undo_atom_destroy),
	(undo_atom_destroy_callback_data_g_func_cover),
	(nautilus_undo_register_full):
	Fixed a bug where it would try to destroy the undo atom even when
	it didn't own it.
	
	* libnautilus/nautilus-undoable.h:
	Got rid of some cruft I left in here by accident.
	
	* src/file-manager/fm-icon-view.c: (fm_icon_view_add_file):
	* src/file-manager/fm-list-view.c: (fm_list_view_add_file):
	Only add the files if they are not already in the list. This is
	needed for reload.
	
	* src/ntl-main.c: (main): Tweaked this function to be easier to
	understand and better organized. Also added a "desktop" option
	as a start for my next task.

2000-05-22  Eskil Heyn Olsen  <eskil@eazel.om>

	* components/services/trilobite/src/trilobite-service-private.h: 
	* components/services/trilobite/src/trilobite-service-public.h: 
	* components/services/trilobite/src/trilobite-service.c:
	Changed for the _uri change.
	
	* components/services/trilobite/sample/service/main.c: 
	* components/services/trilobite/sample/command-line/main.c: 
	Changed for the new OAFID's.

	* components/services/trilobite/idl/trilobite-service.idl: 
	Removed the _uri from get_icon_uri

	* components/services/time/service/trilobite-eazel-time-service.c:
	Better error handling, eg. for bad urls and whatnot.

	* components/services/time/service/Makefile.am (pixmap_DATA): 
	Installs an icon for the service (now we need an icon)

	* components/services/time/idl/trilobite-eazel-time-service.idl: 
	Added two strings to the CannotGetTime exception.

	* components/services/time/command-line/main.c (main): 
	Updated to use the new oafids. Better error handling.

	* components/services/Makefile.am (SUBDIRS): 
	Added the time service

	* components/services/trilobite/sample/service/trilobite-eazel-sample-service.oafinfo: 
	* components/services/time/service/trilobite-eazel-time-service.oafinfo: 
	Added attributes to the oafinfo files. Also gave them some real oafids.
	
2000-05-22  Andy Hertzfeld  <andy@eazel.com>

	fixed task 514, show file/folder permissions with emblems.
	
	* icons/Makefile.am:
	* icons/emblem-noread.png:
	* icons/emblem-nowrite.png:
	added Susan's emblems for "cant read" and "cant write"
	
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_emblem_names):
	made get_emblem_names return appropriate keywords when we can't
	read the file or we can't write it.
	
2000-05-22  John Sullivan  <sullivan@eazel.com>

	* src/ntl-app.c: (display_prototype_caveat): Tweaked
	wording to match Maciej & Arlo's latest agreement. 

2000-05-22  John Sullivan  <sullivan@eazel.com>

	Put up a "Nautilus is still flaky" dialog at launch so
	people who obtain Nautilus some random way won't expect
	too much.

	* src/ntl-app.c: (display_prototype_caveat),
	(nautilus_app_startup): Put up simple text-only modal
	dialog at launch.

2000-05-22  Andy Hertzfeld  <andy@eazel.com>

	first, incomplete attempt to use the anti-aliased canvas.
	For now, it's a compile-time flag in nautilus-icon-container to
	optionally enable it, and there's no text drawing in aa mode yet.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_initialize_class), (draw_pixbuf),
	(nautilus_icon_canvas_item_render):
	added a render method to draw the item in anti-aliased mode
	
	* libnautilus-extensions/nautilus-icon-container.c:
	(start_rubberbanding), (nautilus_icon_container_new):
	optionally put the canvas in anti-aliased mode if a compile-time
	flag is set; added code to make the selection rectangle semi-transparent
	in anti-aliased mode.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_dnd_begin_drag):
	at Arlo's suggestion, changed the alpha threshold used to compute
	the pixmap to drag from the pixbuf, so it doesn't look so lumpy when
	there's lots of information in the alpha channel
	
2000-05-22  J Shane Culpepper  <pepper@eazel.com>

	* components/services/time/service/.cvsignore: Adding .cvsignore.

2000-05-22  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/eazel-install.c:
	(show_usage), (main):

	Cosmetic fixes to the command line options.

2000-05-22  Ian McKellar  <yakk@yakk.net>

	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_new), (nautilus_directory_is_local):
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-file.c: (nautilus_file_is_local):
	* libnautilus-extensions/nautilus-file.h:
	Added nautilus_directory_is_local and nautilus_file_is_local.

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog),
	(global_preferences_register_for_ui):
	* libnautilus-extensions/nautilus-global-preferences.h:
	Added a preference to specify whether to display detailed remote
	views.

	* libnautilus-extensions/nautilus-directory-async.c:
	(state_changed):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_for_file):
	Only download top left text if the file is local or if
	the user has specified that they want detailed remote views.

2000-05-21  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(make_thumbnail_path):
	fixed bad bug introduced a few days ago that made thumbnailing no longer work - it was
	appending ".png" to directory names.
	* libnautilus-extensions/nautilus-graphic-effects.c:
	(nautilus_draw_frame):
	made the thumbnail frame drop shadow lighter
	
2000-05-21  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c: (get_song_text):
	fixed a crash in the music view due to uninitialized variables that occured when
	the album name was not present.
	
2000-05-21  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/Makefile.am:
	* components/services/install/lib/Makefile.am:
	* components/services/install/lib/eazel-install-protocols.c:
	(http_fetch_remote_file):
	* components/services/install/lib/eazel-install-protocols.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages):
	* components/services/install/lib/eazel-install-rpm-glue.h:

	Added async http fetches of remote files.  Fix for bug # 810.

2000-05-21  J Shane Culpepper  <pepper@eazel.com>

        * components/services/install/lib/eazel-install-rpm-glue.c:
        (install_new_packages), (uninstall_packages), (do_rpm_install),
        (do_rpm_uninstall), (rpm_uninstall): Adding uninstall depend checks.
        More fixes for Bug # 731. Added a few minor tweaks to the rpm install
        functions.

2000-05-21  Ettore Perazzoli  <ettore@helixcode.com>

	* components/html/ntl-web-browser.c: Updated for latest GtkHTML
	API that uses `GtkHTMLStream *' instead of `GtkHTMLStreamHandle'.
	(browser_goto_url_real): No need to pass the url to
	`gtk_html_begin()' anymore.  Also, call the
	`browser_url_requested()' signal explicitly because
	"url_requested" is not emitted by `gtk_html_begin()' anymore.

2000-05-21  Ettore Perazzoli  <ettore@helixcode.com>

	* components/notes/Makefile.am (INCLUDES): Add
	`-I$(top_builddir)/libnautilus'.

2000-05-20  Andy Hertzfeld  <andy@eazel.com>

	* components/music/mpg123_handler.c: (sigchld_handler),
	(start_playing_file), (stop_playing_file):
	* components/music/nautilus-music-view.c: (selection_callback),
	(update_play_controls_status), (reset_playtime),
	(play_status_display), (go_to_next_track), (slider_moved_callback),
	(xpm_dual_label_box), (add_play_controls):
	pretty much finished up playing in the music view.  Made it reflect
	play and pause status, advance to the next track when a song is completed,
	and terminate at the end of the last song.  Made clicking on a new song
	while playing work properly.
	
	* components/music/pixmaps.h:
	added colored play and pause images to reflect status

2000-05-20  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/eazel-install.c: (main):
	fixed the package list generation routine.  It was corrupting the
        eazel-services-config.xml file instead of creating a package-list.xml.
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (rpm_show_progress), (do_rpm_install),
	(rpm_install): Found the magic function rpmRunTransactions that allows
	me to check for dependancies and get a progress callback without having
	to hack rpmlib like helixcode did.  These functions need to be cleaned
	up because they are too long but they work very well.
	This is part of the fix of Bug # 731.  Need to clean up the uninstall
	routine now as well using rpmRunTransactions instead of rpmErase.

2000-05-20  Andy Hertzfeld  <andy@eazel.com>

	* components/music/mpg123_handler.c: (get_play_status),
	(get_current_frame), (set_current_frame), (parse_header_info):
	* components/music/mpg123_handler.h:
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (get_song_text),
	(music_view_set_selected_song_title), (play_status_display),
	(play_current_file), (stop_if_playing), (go_to_next_track),
	(go_to_previous_track), (play_button_callback),
	(prev_button_callback), (next_button_callback),
	(slider_press_callback), (slider_moved_callback),
	(slider_release_callback), (add_play_controls),
	(nautilus_music_view_update_from_uri):
	
	made all of the play command buttons in the music view work correctly, although
	they still don't give play state feedback by hilighting properly.  Also, added a
	timeout task, removed the volume slider and made the play time slider work.
	
2000-05-19  Ettore Perazzoli  <ettore@helixcode.com>

	* libnautilus/Makefile.am (INCLUDES): Add `-I.' so that it works
	with builddir != srcdir.

	* libnautilus-extensions/Makefile.am (INCLUDES): Add
	`-I$(top_builddir)/libnautilus' that it works with builddir !=
	srcdir.  [This module needs generated include files from the
	builddir.]
	* src/Makefile.am (INCLUDES): Likewise.

2000-05-20  Andy Hertzfeld  <andy@eazel.com>

	After Maciej's checkin, I didn't kill oafd so I was getting OAFIIDs as sidebar panel labels.
	We should never show the user OAFIIDs, even as a fallback, so I added a little code
	to clean them up before displaying them.
	* libnautilus-extensions/nautilus-view-identifier.c:
	(nautilus_view_identifier_new_from_oaf_server_info):

2000-05-19 Andy Hertzfeld  <andy@eazel.com>

	* components/music/mpg123_handler.c: (parse_header_info),
	(start_playing_file), (stop_playing_file), (pause_playing_file):
	* components/music/mpg123_handler.h:
	* components/music/nautilus-music-view.c: (selection_callback),
	(play_button_callback), (stop_button_callback),
	(pause_button_callback):
	made basic playing from the music view work.  The play, stop and pause button
	now work, but there's still a lot more refinement necessary
	
2000-05-19  Maciej Stachowiak  <mjs@eazel.com>

	Fix bugzilla tasks #599 (hex number is bad default for meta view
	names) and #631 (nead oaf query to determine metaviews).

	* libnautilus-extensions/nautilus-view-identifier.h,
	libnautilus-extensions/nautilus-view-identifier.c:
	(nautilus_view_identifier_new, get_lang_list,
	nautilus_view_identifier_new_from_oaf_server_info,
	nautilus_view_identifier_free): Moved NautilusViewIdentifier code
	here from ntl-uri-map.[ch].
	(nautilus_view_identifier_new_from_content_view),
	(nautilus_view_identifier_new_from_sidebar_panel),
	(nautilus_view_identifier_free_callback),
	(nautilus_view_identifier_free_list): New functions.
	* libnautilus-extensions/Makefile.am: Add
	nautilus-view-identifier.[ch] to build.
	* src/ntl-types.h: Removed typedef for NautilusViewIdentifier.

	* libnautilus-extensions/nautilus-glib-extensions.h:
	* libnautilus-extensions/nautilus-glib-extensions.c
	(nautilus_g_list_free_deep_custom): New function, like
	`nautilus_g_list_free_deep' but lets you pass your own free
	function.
	(nautilus_g_list_free_deep): Use `nautilus_g_list_free_deep_custom'
	(nautilus_g_list_partition): New function to destructively
	partition a GList into two, depending on whether they satisfy the
	provided predicate or not.
	(nautilus_test_predicate), (nautilus_self_check_glib_extensions):
	Added unit tests for `nautilus_g_list_partition' and for
	`nautilus_g_list_equal' since the `nautilus_g_list_partition'
	tests rely on it.
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_moved): Use
	`nautilus_g_list_free_deep_custom'.
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c
	(nautilus_gdk_pixbuf_list_free): Likewise.
	* libnautilus-extensions/nautilus-icon-factory.c
	(nautilus_scalable_icon_list_free): Likewise.
	* libnautilus-extensions/nautilus-string-list.c
	(nautilus_string_list_clear): Likewise.
	* nautilus-widgets/nautilus-preferences.c (pref_hash_node_free,
	prefs_hash_lookup_with_implicit_registration): Likewise.
	
	* libnautilus-extensions/nautilus-global-preferences.c,
	libnautilus-extensions/nautilus-global-preferences.h
	(global_preferences_create_dialog,
	nautilus_global_preferences_get_sidebar_panel_view_identifiers,
	nautilus_global_preferences_get_meta_view_iids,
	nautilus_preferences_register_meta_view_preferences_for_ui,
	global_preferences_register_for_ui): Change things around to
	determine the set of sidebar panel prefs at run time, and to pass
	around NautilusViewIdentifiers rather than just iid strings so we
	can use the statically defined name in the oafinfo.

	* src/ntl-uri-map.h, src/ntl-uri-map.c: (set_initial_content_iid,
	got_file_info_callback, sidebar_panel_preference_is_on,
	(add_sidebar_panel_identifiers, nautilus_navigation_info_free):
	Changed things around to better handle sidebar panel (AKA meta
	view) selection, and pass around both name and iid.

	* src/ntl-window-msgs.c:
	(nautilus_window_request_selection_change,
	nautilus_window_has_really_changed,
	nautilus_window_load_meta_view, nautilus_window_update_state,
	nautilus_window_set_state_info): Fixed everything to pass around
	ViewIdentifiers instead of iids for sidebar panels and set the
	label approrpiately when activating; replaced a whole bunch of
	GSList usage with GList (we can always optimize this stuff later).
	* src/ntl-window.h, src/ntl-window.c: (nautilus_window_destroy,
	nautilus_window_load_content_view_menu,
	nautilus_window_set_content_view, nautilus_window_add_meta_view,
	nautilus_window_remove_meta_view_real,
	nautilus_window_remove_meta_view): Deal with the above changes
	(mostly GSList -> GList changes).

	* src/ntl-view-bonobo-control.c, src/ntl-view-bonobo-subdoc.c,
	src/ntl-view-nautilus.c, src/ntl-view-private.h: Remove all
	get_label related calls since we get that from the oafinfo now.
	* libnautilus/nautilus-meta-view-frame.h,
	libnautilus/nautilus-meta-view-frame.c:
	(nautilus_meta_view_frame_initialize,
	nautilus_meta_view_frame_new_from_bonobo_control,
	nautilus_meta_view_frame_destroy): Remove
	`nautilus_meta_view_frame_set_label' machinery and associated
	machinery since we now get the label statically from the oafinfo.
	* components/history/ntl-history-view.c: (make_obj): Don't call
	`nautilus_meta_view_frame_set_label' any more, the label is now
	statically determined from the oafinfo file.
	* components/notes/ntl-notes.c: (make_notes_view): Likewise.
	* components/websearch/ntl-web-search.c: (make_obj): Likewise.
	* components/help/hyperbola-nav-index.c: Likewise.
	(hyperbola_navigation_index_new): Likewise.
	* components/help/hyperbola-nav-search.c: Likewise.
	(hyperbola_navigation_search_new): Likewise.
	* components/help/hyperbola-nav-tree.c: Likewise.
	(hyperbola_navigation_tree_new): Likewise.
	* src/ntl-meta-view.h, src/ntl-meta-view.c:
	(nautilus_meta_view_set_label),
	(nautilus_meta_view_get_label): Have an explicit value to set,
	rather than trying to get it through CORBA. This is kind of a
	hack, really we should pass around a label and a NautilusMetaView
	separately and remove this stuff.
	* components/help/hyperbola.oafinfo,
	components/notes/ntl-notes.oafinfo,
	components/websearch/ntl-web-search.oafinfo,
	components/history/ntl-history-view.oafinfo: Updated to include
	latest Nautilus attributes.
	
2000-05-19  Andy Hertzfeld  <andy@eazel.com>

	* components/music/Makefile.am:
	* components/music/mpg123_handler.c: (sigchld_handler),
	(parse_header_info), (parse_frame_info), (stop_data),
	(song_finished), (parse_pipe_buffer), (check_pipe_for_data),
	(read_data), (start_playing_file), (stop_playing_file),
	(do_mpg123_pause):
	* components/music/mpg123_handler.h:
	* components/music/nautilus-music-view.c: (selection_callback),
	(play_button_callback), (stop_button_callback),
	(pause_button_callback), (prev_button_callback),
	(next_button_callback), (add_play_controls):
	added playing code to the music view, but it's still not working
	so it's disabled
	
2000-05-19  Eskil Heyn Olsen  <eskil@eazel.om>

	* configure.in:
	added the components/services/time/ makefiles

	* components/services/time/service/trilobite-eazel-time-service.oafinfo: 
	Fixed the horribly cut'n'paste errors.

	* components/services/time/service/trilobite-eazel-time-service-public.h:
	Stripped some superflous stuff from the TrilobiteEazelTimeService
	structure.

	* components/services/time/command-line/main.c (main): 
	Implemented the basic cli for the time service

	* components/services/time/idl/trilobite-eazel-time-service.idl: 
	The check_time now returns the difference instead of a bool. If
	diff != 0, your clock is wrong (or the server is).

	* components/services/time/command-line/Makefile.am:
	Lot of juju to make the time service cli work

	* components/services/trilobite/src/trilobite-service.c
	(trilobite_service_create_corba_object): Uncommented some
	more g_message noise

	* components/services/trilobite/src/libtrilobited.h: 
	Now assuming the libtrilobited headers are in libtrilobite/, not
	libtrilobited/

	* components/services/trilobite/sample/command-line/Makefile.am: 
	Some idl compiling rearranging.

2000-05-19  Gene Z. Ragan  <gzr@eazel.com>
	
	* libnautilus/nautilus-undo-context.c:
	* libnautilus/nautilus-undo-context.h:
	(impl_Nautilus_Undo_Context__destroy),
	(impl_Nautilus_Undo_Context__create),
	(impl_Nautilus_Undo_Context__get_undo_manager),
	(nautilus_undo_context_new), (nautilus_undo_context_initialize),
	(nautilus_undo_context_initialize_class), (destroy):
	GTK and CORBA object that acts as interface to an undo manager.
	
	* libnautilus/Makefile.am:
	Added entries for new NautilusUndoContext files. 
	
	* libnautilus/nautilus-undo-manager.c:		
	(impl_Nautilus_Undo_Manager__forget), (nautilus_undo_manager_undo),
	(nautilus_undo_manager_unregister_object),
	(get_current_transaction_name), (free_undo_manager_list_data),
	(prune_undo_manager_list):
	Removed all references to NautilusUndoTransaction and changed them to use
	the Nautilus_Undo_Transaction CORBA object instead.

2000-05-19  Darin Adler  <darin@eazel.com>

	* components/services/trilobite/sample/command-line/.cvsignore:
	* components/services/trilobite/sample/service/.cvsignore:
	File name changes.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_file_monitor_add),
	(nautilus_self_check_directory):
	* libnautilus-extensions/nautilus-directory.h:
	* src/file-manager/fm-directory-view.c: (finish_loading_uri):
	Added reload interface.
	
	* libnautilus/nautilus-undoable.c: (nautilus_undo_register),
	(undo_atom_destroy), (undo_atom_destroy_notify_cover),
	(undo_atom_destroy_g_func_cover), (save_callback),
	(restore_callback), (nautilus_undo_register_full),
	(nautilus_undo_unregister), (nautilus_undo):
	* libnautilus/nautilus-undoable.h:
	Implemented new simplified Undo API.
	
	* libnautilus-extensions/nautilus-entry.c:
	(nautilus_entry_initialize), (nautilus_entry_destroy),
	(nautilus_entry_key_press), (nautilus_entry_changed),
	(register_edit_undo), (update_undo_text),
	(restore_from_undo_snapshot_callback),
	(nautilus_entry_enable_undo):
	* libnautilus-extensions/nautilus-icon-container.c:
	(hide_rename_widget):
	* libnautilus-extensions/nautilus-icon-text-item.c: (iti_event),
	(register_rename_undo), (restore_from_undo_snapshot_callback):
	* src/nautilus-bookmarks-window.c: (on_window_delete_event):
	* src/nautilus-location-bar.c: (destroy):
	Use new simplified Undo API.
	
	* libnautilus/nautilus-undo-manager.h:
	Remove UNDO_MANAGER_NAME, which is no longer used.
	
	* src/file-manager/fm-icon-view.c:
	(icon_position_changed_callback): Fixed a bad g_free that was
	cause seg faults when you resized an icon.
	
2000-05-19  John Sullivan  <sullivan@eazel.com>

	Finished task 174 (make "Open in new window" preference
	sensible)

	* libnautilus-extensions/nautilus-global-preferences.c:
	(global_preferences_create_dialog), 
	(global_preferences_register_for_ui): Consolidated "Window
	Options" pane & "Click Policy" pane into new "Directory 
	Views" pane, to make it clear that these preferences apply 
	just to directory views. Also removed unimplemented "use 
	existing window for same location" preference that is not 
	in our plans. Tweaked wording a little.

	* libnautilus-extensions/nautilus-global-preferences.h:
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(in_single_click_mode): New function, checks preference.
	(draw_or_measure_label_text): Don't draw underlines on icons
	if we're not in single-click mode.

2000-05-19  John Sullivan  <sullivan@eazel.com>

	A few tweaks to this new class inspired by Darin's
	review.

	* libnautilus-extensions/nautilus-keep-last-vertical-box.c:
	(nautilus_keep_last_vertical_box_new): More comments.
	(nautilus_keep_last_vertical_box_size_allocate): More comments.
	Also now handles the case where the last item doesn't fit
	even all by itself by moving & shrinking it to fit. Previously 
	the last item would be left at its original position & size in 
	this case.

2000-05-19  Gene Z. Ragan  <gzr@eazel.com>

	More undo framework work.  Still incomplete.
	
	* libnautilus-extensions/nautilus-entry.c:
	(nautilus_entry_changed):
	Modified to use new undo manager location API
	
	* libnautilus-extensions/nautilus-icon-text-item.c: 
	(iti_event),
	(restore_from_undo_snapshot_callback):
	Modified to use new undo manager location API

	* libnautilus/nautilus-undo-manager.c:
	* libnautilus/nautilus-undo-manager.h:
	(impl_Nautilus_Undo_Manager__create),
	(impl_Nautilus_Undo_Manager__append),
	(impl_Nautilus_Undo_Manager__forget),
	(nautilus_undo_manager_begin_transaction),
	(nautilus_undo_manager_end_transaction),
	(nautilus_undo_manager_undo), (nautilus_undo_manager_redo),
	(nautilus_undo_manager_add_transaction),
	(nautilus_undo_manager_unregister_object),
	(free_undo_manager_list_data), (prune_undo_manager_list):
	Modified to use new API and Undo::Manager::Transaction 

	* libnautilus/nautilus-undo-transaction.c:
	* libnautilus/nautilus-undo-transaction.h:
	(impl_Nautilus_Undo_Transaction__destroy),
	(impl_Nautilus_Undo_Transaction__create),
	(impl_Nautilus_Undo_Transaction__get_undo_description),
	(impl_Nautilus_Undo_Transaction__get_redo_description),
	(impl_Nautilus_Undo_Transaction__get_base_description),
	(impl_Nautilus_Undo_Transaction__undo),
	(nautilus_undo_transaction_new),
	(nautilus_undo_transaction_initialize),
	(nautilus_undo_transaction_destroy),
	(nautilus_undo_transaction_initialize_class),
	(nautilus_undo_transaction_undo),
	(nautilus_undo_transaction_contains_object):
	Added support for new Undo::Manager::Transaction object

2000-05-19  Ali Abdin  <aliabdin@aucegypt.edu>

	* components/help/converters/gnome-db2html2/gdb3html.c:
	(main): Fixed a typo - This fixed BUG #930

	* components/help/converters/gnome-info2html2/main.c:
	(main): Fixed it to it looks in /usr/info always and then any
	other fir found in the INFOPATH variable - Fixes bug #934 but
	there is a suggestion in there I think should be implemented
	(since I wrote it - DOH!).

2000-05-19  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (get_song_text),
	(music_view_set_selected_song_title), (selection_callback),
	(sort_by_bitrate), (sort_song_list), (add_play_controls),
	(nautilus_music_view_update_from_uri):
	fixed bug where sorting by time was wrong because I added the bitrate column,
	added sorting by bitrate,
	more work on the play controls, but they don't actually play yet
	
2000-05-18  Eskil Heyn Olsen  <eskil@eazel.om>

	* components/services/trilobite/sample/command-line/Makefile.am:
	* components/services/trilobite/sample/command-line/main.c: 
	Did some nautilus to trilobite renaming.

	* components/services/time/service/trilobite-eazel-time-service.oafinfo: 
	* components/services/time/service/main.c: 
	* components/services/time/service/trilobite-eazel-time-service-public.h:
	* components/services/time/service/trilobite-eazel-time-service-private.h: 
	* components/services/time/service/trilobite-eazel-time-service.c:
	* components/services/time/service/Makefile.am:
	* components/services/time/idl/trilobite-eazel-time-service.idl: 
	Added the first stuff for the time service

	* components/services/trilobite/src/trilobite-service.c: 
	removed some g_messages

	* components/services/trilobite/sample/service/sample-service-public.h (struct _SampleService):
	removed superflous element servant;

	* components/services/trilobite/sample/service/sample-service-impl.c: 
	Added a lot of comments for educational purpose. Also changed
	the parent class pointer to be of type BonoboObjectClass.

	* components/services/trilobite/sample/service/main.c: 
	Did some nautilus to trilobite renaming.

	* components/services/trilobite/sample/service/Makefile.am:
	Did some nautilus to trilobite renaming.

2000-05-19  Yukihiro Nakai <nakai@gnome.gr.jp>

	* configure.in: Add Japanese from Akira Tagoh.

2000-05-18  John Sullivan  <sullivan@eazel.com>

	Finished task 598 (Command button layout should account
	for window height)

	* libnautilus-extensions/nautilus-keep-last-vertical-box.h,
	* libnautilus-extensions/nautilus-keep-last-vertical-box.c:
	New files, subclass of GtkVBox that truncates contents to
	fit, except last item which is always kept. (GtkVBox in the
	same situation just merrily places its child widgets outside
	of its allocation.)
	* libnautilus-extensions/Makefile.am: Build the new files.

	* src/ntl-index-panel.c: 
	(make_button_box): Use NautilusKeepLastVerticalBox so only
	as many command buttons appear as fit, and the "Open with ..."
	button always appears; also embed this box in a GtkHBox to
	get horizontal sizing the way we want it.
	(add_command_buttons): Add (not yet active) "Open with ..."
	button.
	(nautilus_index_panel_update_buttons): Throw away the
	GtkHBox containing the button box instead of the button
	box itself.

2000-05-18  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c: (extract_initial_number),
	(fetch_song_info):
	put in heuristic to grab the track number from the beginning of
	the file name if it's present there and not encoded in the id3 tag
	
2000-05-18  Andy Hertzfeld  <andy@eazel.com>

	* libnautilus-extensions/nautilus-graphic-effects.c,h:
	(nautilus_draw_frame):
	added routine to draw a frame with a drop-shadow into a pixbuf
	* libnautilus-extensions/nautilus-icon-factory.c:
	(make_thumbnail_path), (nautilus_icon_factory_make_thumbnails):
	at Arlo's suggestion, made thumbnails have drop shadows.  Enhanced
	the routine that was drawing the frame and moved it into graphic
	effects.  Also, fixed an embarrasing bug where thumbnails for
	non-png images were being stored in weird directories with the
	proper extension.
	
2000-05-18  Darin Adler  <darin@eazel.com>

	* libnautilus/Makefile.am:
	* src/file-manager/Makefile.am:
	Eskil showed me how to fix these so they'd work when orbit-idl
	was not in the path at compile time.

2000-05-18  Darin Adler  <darin@eazel.com>

	* HACKING: Change format to make popt "pop" out more.
	
	* libnautilus-extensions/nautilus-entry.h:
	* src/file-manager/fm-properties-window.c: (create_basic_page):
	* src/nautilus-bookmarks-window.c: (on_text_field_focus_in_event),
	(on_window_delete_event):
	* src/nautilus-location-bar.c: (nautilus_location_bar_enable_undo):
	* src/nautilus-location-bar.h:
	* src/nautilus-window-menus.c: (edit_menu_undo_callback),
	(bookmarks_menu_add_bookmark_callback),
	(bookmarks_menu_edit_bookmarks_callback),
	(get_or_create_bookmarks_window), (nautilus_bookmarks_exiting),
	(edit_bookmarks), (nautilus_window_initialize_menus),
	(update_undo_menu_item):
	* src/ntl-app.c: (nautilus_app_init), (nautilus_app_destroy):
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_start_renaming_selected_item):
	* libnautilus-extensions/nautilus-entry.c:
	(nautilus_entry_key_press), (nautilus_entry_enable_undo):
	* libnautilus/nautilus-undo-manager.c:
	(nautilus_undo_manager_begin_transaction),
	(nautilus_undo_manager_unregister_object),
	(prune_undo_manager_list), (nautilus_get_undo_manager),
	(nautilus_attach_undo_manager), (nautilus_share_undo_manager):
	* libnautilus/nautilus-undo-manager.h:
	* src/ntl-window-private.h:
	* src/ntl-window.c: (nautilus_window_constructed),
	(nautilus_window_real_set_content_view),
	(nautilus_window_get_undo_manager):
	* src/ntl-window.h:
	Got rid of the undo manager parameter for the enable_undo
	operation.
	Eliminated code that sets up the undo manager except for the top
	widgets. We only need it attached to windows and to the top widget
	in each component.
	Change callers to get the undo manager in a few simple ways
	instead of calling gtk_object_get_data directly. Added some calls
	to attach the undo manager to an arbitrary object.
	
	* libnautilus/nautilus-undo.idl: Added comments to the IDL and
	also added the Undo::Context class.
	
	* libnautilus/nautilus-view-component.idl: Removed the dependency
	on the undo IDL and the undo_manager attribute.
	
	* src/nautilus-bookmarks-window.h:
	* src/nautilus-bookmarks-window.c: (create_bookmarks_window):
	Changed interface to take object to inherit the undo manager from
	instead of the undo manager itself. Got rid of unnecesary undo
	manager setting.
	(nautilus_bookmarks_window_save_geometry): Also changed interface
	to use GtkWindow instead of GtkWidget.
	
2000-05-18  John Sullivan  <sullivan@eazel.com>

	Added the ability to switch sort order in Icons view. Note
	that one time while developing this I saw a problem at startup
	where the icons all danced back and forth a few pixels forever.
	I can't reproduce this, so I don't think my changes caused it,
	but be wary of the evil jig-dancing icons.

	* libnautilus-extensions/nautilus-metadata.h:
	Added #define for icon view sort direction.
	
	* src/file-manager/fm-icon-view.c: 
	Added sort_reversed to FMIconViewDetails;
	(update_layout_menus): Set sensitivity of "Ascending"/"Descending"
	menu items appropriately, and activate the right one.
	(set_sort_reversed), (get_sort_reversed_from_menu_path),
	(sort_direction_callback): New functions used for setting
	the sort direction.
	(fm_icon_view_begin_loading): Read sort direction from metadata.
	(fm_icon_view_merge_menus): Add sort-direction menu items to 
	Layout menu.
	(icon_container_compare_icons_callback): Take sort direction
	into account.

2000-05-18  Andy Hertzfeld  <andy@eazel.com>

	* components/music/Makefile.am:
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (format_play_time),
	(button_callback), (slider_press_callback),
	(slider_moved_callback), (slider_release_callback),
	(volume_callback), (xpm_label_box), (add_play_controls),
	(nautilus_music_view_update_from_uri):
	added a "bitrate" column to the music view, started adding 
	the play controls, but not yet finished, so they're 
	disabled for now
	* components/music/pixmaps.h:
	some inline images for the buttons
		
2000-05-17  Eskil Heyn Olsen  <eskil@eazel.om>

	* components/services/trilobite/sample/service/sample-service-impl.c:
	Added a bug for the destroyer

	* components/services/trilobite/sample/service/main.c:
	the trilobite creating now uses gtk_object_new to
	set the name, version and such.

	* components/services/trilobite/src/trilobite-service-public.h
	* components/services/trilobite/src/trilobite-service.c:
	defined a set of set_* methods for the name, version
	and friends. Also added gtk_arg stuff to trilobite for
	these fields. The default of these is now NULL. Had to
	restructure the _initialize call to make gtk_object_new
	work.

2000-05-17  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c: (fs_xfer), (fs_move_to_trash):
	Fixed 636 -  don't allow copying into Trash. Also added 
	checks for Trashing the Trash, moving or copying the Trash,
	Trashing the parents of Trash, moving and copying folders in 
	their children.

	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_container_selection_items_local):
	Fix 625: move uri_is_parent into a new call in GnomeVFS and 
	added more features that I needed for the above fix.

2000-05-17  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-caption-table.c:
	(nautilus_caption_table_resize), (nautilus_caption_table_new):
	* nautilus-widgets/nautilus-caption-table.h:
	Make the resize function public.
	
2000-05-17  John Sullivan  <sullivan@eazel.com>

	* src/ntl-index-panel.c: (make_button_box),
	(nautilus_index_panel_initialize), (add_command_buttons):
	A little widget-packing tweaking with the command buttons.
	It's not right yet, but I want to check this in so I can
	work on it later from home.

2000-05-17  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c: (selection_callback),
	(release_song_info), (is_mp3_file), (read_id_tag),
	(scan_for_header), (fetch_bit_rate), (fetch_play_time),
	(format_play_time), (fetch_song_info),
	(nautilus_music_view_update_from_uri):
	fixed bug 722, music view should use gnome-vfs for all file operations,
	by rewriting the above routines to use gnome-vfs
	
2000-05-17  Gene Z. Ragan  <gzr@eazel.com>

	First phase of modifying undo code.  These changes
	affect the way undo is handled internally to Nautilus and
	also defines a new IDL.  This is work in progress.
	
	* libnautilus-extensions/nautilus-entry.c:
	Modified to use gtk_object_get_data() mechanism to locate undo manager

	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_start_renaming_selected_item):
	Modified to use gtk_object_get_data() mechanism to locate undo manager
	
	* libnautilus-extensions/nautilus-icon-text-item.c: (iti_event),
	(restore_from_undo_snapshot_callback):
	Modified to use gtk_object_get_data() mechanism to locate undo manager

	* libnautilus/.cvsignore:
	Added generated IDL source and header files to ignore
	
	* libnautilus/Makefile.am:
	Modified makefile to include new IDL file for undo manager
	
	* libnautilus/nautilus-undo-manager.c:
	(impl_Nautilus_Undo_Manager__destroy),
	(impl_Nautilus_Undo_Manager__create),
	(impl_Nautilus_Undo_Manager__append),
	(impl_Nautilus_Undo_Manager__forget),
	(nautilus_undo_manager_initialize),
	(nautilus_undo_manager_initialize_class),
	(nautilus_undo_manager_begin_transaction),
	(nautilus_undo_manager_end_transaction),
	(nautilus_undo_manager_undo), (nautilus_undo_manager_redo),
	(nautilus_undo_manager_add_transaction),
	(nautilus_undo_manager_unregister_object),
	(nautilus_undo_manager_can_undo), (nautilus_undo_manager_can_redo),
	(get_current_transaction_name),
	(nautilus_undo_manager_get_current_undo_transaction_name),
	(nautilus_undo_manager_get_current_redo_transaction_name),
	(destroy), (nautilus_undo_manager_enable_redo),
	(nautilus_undo_manager_set_queue_depth),
	(free_undo_manager_list_data), (prune_undo_manager_list):
	Changes to support new IDL and new undo manager mechanism.
	
	* libnautilus/nautilus-undo.idl:
	New undo manager IDL file

	* libnautilus/nautilus-undo-manager-component.idl:
	Removed old undo manager IDL file
	
	* src/file-manager/fm-properties-window.c: 
	(create_basic_page):
	Modified to use gtk_object_get_data() mechanism to locate undo manager
	
	* src/nautilus-bookmarks-window.c: 
	(create_bookmarks_window),
	(on_text_field_focus_in_event), 
	(on_window_delete_event):
	Modified to use gtk_object_get_data() mechanism to locate undo manager
	
	* src/nautilus-location-bar.c:
	(nautilus_location_bar_set_location),
	(nautilus_location_bar_enable_undo):
	Modified to use gtk_object_get_data() mechanism to locate undo manager
	
	* src/nautilus-window-menus.c: 
	(edit_menu_undo_callback),
	(edit_menu_cut_callback), 
	(bookmarks_menu_edit_bookmarks_callback),
	(get_bookmarks_window), 
	(nautilus_bookmarks_exiting),
	(nautilus_window_edit_bookmarks),
	(nautilus_window_initialize_menus), 
	(update_undo_menu_item):
	Modified to use gtk_object_get_data() mechanism to locate undo manager

	* src/ntl-app.c: 
	(impl_Nautilus_Application__get_view_windows),
	(impl_Nautilus_Application_new_view_window),
	(impl_Nautilus_Application_supports),
	(impl_Nautilus_Application_create_object),
	(impl_Nautilus_Application__create), (nautilus_app_get_type),
	(nautilus_app_class_init), (nautilus_app_init), (nautilus_app_new),
	(nautilus_app_destroy), (nautilus_app_startup),
	(nautilus_app_create_window):
	Modified to use gtk_object_get_data() mechanism to locate undo manager.
	Added and modified IDL C stubs to match new IDL interface.
	
	* src/ntl-window.c: 
	(nautilus_window_constructed),	
	(nautilus_window_set_arg):
	Changed order that arguments are set at time of main window create so the app instance
	variable is valid when the main window is contructed.

2000-05-17  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/eazel-install.c:
	(show_usage), (generate_new_package_list),
	(create_temporary_directory), (fetch_remote_package_list), (main):
	* components/services/install/lib/eazel-install-metadata.c:
	(create_default_metadata), (create_default_configuration_metafile),
	(xml_doc_sanity_checks), (get_urltype_from_string),
	(get_boolean_value_from_string),
	(init_default_install_configuration),
	(init_default_transfer_configuration):
	* components/services/install/lib/eazel-install-metadata.h:
	* components/services/install/lib/eazel-install-rpm-glue.c:
	(install_new_packages), (uninstall_packages):
	* components/services/install/lib/eazel-install-rpm-glue.h:
	* components/services/install/lib/eazel-install-tests.c:
	* components/services/install/lib/eazel-install-tests.h:
	* components/services/install/lib/eazel-install-types.h:
	* components/services/install/lib/eazel-install-xml-package-list.c:
	(generate_xml_package_list), (parse_pkg_template):

	Partial fix of bug #814.  Broke alot of functions into more maintainable
	functions.  Fixed bug #730.  Added a --force option to remove hardwired
	rpm filters. Fixed bug #811. Moved metadata home to /var/eazel/services
	until we get the root dependancy fixed.  This will then allow metadata
	to be stored in the user directory. Lots of cosmetic cleanups to make
	the code more readable.

2000-05-17  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-list-view.c: (create_list):
	Fixed bug 357 (Text not vertically centered when starting
	up in List View): Wait until after "map" signal before
	setting row height, to work around bug/design flaw in
	GtkCList.

2000-05-17  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.h:
	Added comments.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	(scale_image_and_rectangle): Added a minimum height and width to
	avoid problems with scaling things down to 0.
	
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize_class), (insert_row):
	* src/file-manager/fm-list-view.c: (add_to_list):
	Moved GtkCList workaround into NautilusList so all clients can get
	the advantage of it instead of just FMListView. Also eliminated
	some unneeded empty functions for signals, since NULL works for an
	empty signal handler.

2000-05-17  John Sullivan  <sullivan@eazel.com>

	Started tweaking with the command buttons in the sidebar
	as a step towards hooking them into the final MIME API.

	* libnautilus-extensions/nautilus-mime-type.c:
	Removed verbs from display names, since we don't plan
	to support arbitrary verbs (i.e., alternate verbs to
	"Open") at least for this release.
	
	* src/ntl-index-panel.c: (add_command_buttons): Simplify code
	a little by using gtk_button_new_with_label; use "Open with"
	terminology; fix memory leak with command string stored in button.
	(nautilus_index_panel_update_info): Deleted obsolete comment.
	
	* src/ntl-window.c: (nautilus_window_load_content_view_menu):
	Added (currently insensitive) "View as ..." item to menu.

2000-05-17  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize),
	(nautilus_mozilla_content_view_load_uri),
	(mozilla_content_view_request_progress_change),
	(mozilla_content_view_request_location_change),
	(substitute_prefix), (mozilla_content_view_hack_uri),
	(mozilla_content_view_unhack_uri),
	(mozilla_notify_location_change_callback),
	(mozilla_title_changed_callback),
	(mozilla_location_changed_callback), (mozilla_net_status_callback),
	(mozilla_link_message_callback), (mozilla_progress_callback),
	(mozilla_open_uri_callback):
	Add initial support for stopping the loading of a uri in mozilla
	in order for nautilus to deal with it.  It works for some
	protocols, like ftp.  Its broken on some more fundamental ones,
	like file://.  

	Move the uri protocol moz: hack into its own place in order to
	make it easy to fix later once the real problem is fixed.

	Add a bunch of paranoid assertions.

	Bottleneck location change requests to nautilus through a single
	function.
	
2000-05-17  Eskil Heyn Olsen  <eskil@eazel.om>

	* components/services/trilobite/idl/sample-service.idl: 
	* components/services/trilobite/sample/service/sample-service-public.h:
	* components/services/trilobite/sample/service/sample-service-impl.c:
	* components/services/trilobite/sample/service/main.c:
	The sample service is now a Bonobo::Unknown subclass. The factory
	creates a trilobite and adds the interface of the sample service.
	
	* components/services/trilobite/src/libtrilobited.h: 
	* components/services/trilobite/src/trilobite-service.c:
	* components/services/trilobite/src/trilobite-service-public.h: 
	Mutated the code and especially the object creation/(v)epv binding
	so calls now correctly end up in the defined methods. This almost
	completed 851, except that this is only the most basic of the 
	frameworks.
	
	* components/services/trilobite/sample/command-line/main.c:
	The sample cli now checks for the interface support, and
	if a trilobite, dumps the standard info, if a sample service,
	uses the two sample calls.
	
2000-05-16  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c: (scan_for_header),
	(fetch_bit_rate), (fetch_play_time), (format_play_time),
	(fetch_song_info), (nautilus_music_view_update_from_uri):
	fixed bug 723, mp3 play time calculation not right for non-128kbps, by
	reading the header and fetching the bitrate, then using it for the time
	calculation.
	
2000-05-16  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-list-view.c: (add_to_list):
	Fix 834 - bad keyboard focus behavior. Added a workaround for 
	GtkCList broken behavior that moved the focused item to a pretty much
	random point when populating the list.

2000-05-16  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(select_previous_or_next_name):
	Fixed a crash when using Tab and Shift-Tab in an empty folder,
	caused by an uninitialized variable.

2000-05-16  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize), (click_column_callback),
	(fetch_play_time), (format_play_time), (fetch_song_info),
	(sort_by_track_number), (sort_by_title), (sort_by_artist),
	(sort_by_time), (sort_song_list),
	(nautilus_music_view_update_from_uri):
	fixed bug #891, clicking on the tabs in the music view doesn't sort,
	by adding the appropriate sorting functions and a callback
	to switch the sort mode when you click the column header.  Also, a
	bit of restructuring and clean up.
	
2000-05-16  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-list-view.c: (make_sorted_row_array),
	(select_row_common), (select_matching_name_callback),
	(create_list):
	Fix a problem in my new typeselect code where it would only 
	work properly if the list was sorted alphabetically to begin with.

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_key_press):
	* src/file-manager/fm-list-view.c: (make_sorted_row_array),
	(select_row_common), (select_matching_name_callback),
	(select_previous_next_common), (select_previous_name_callback),
	(select_next_name_callback), (create_list):
	Added support for Tab and Shift-Tab selecting the alphabetically
	next and previous files. Reorganized the code a bit to share more
	with the typeselect calls.

2000-05-16  Darin Adler  <darin@eazel.com>

	* check-FIXME.pl: Maciej helped me refine the find command so it
	doesn't go into po or CVS directories and only looks at files.
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_background_changed): Turned the metadata saving
	code back on. I think I fixed the problem that made Andy turn it off.
	
	* libnautilus-extensions/nautilus-directory-metafile.c:
	(set_metadata_eat_value): Fixed a double-delete problem. Oops.
	(nautilus_directory_set_metadata): Fixed code that wasn't emitting the
	metadata_changed signal enough.
	
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_fill_rectangle_with_color): Fixed a crash in Gdk. It turns
	out gdk_rgb needs to be initialized, even though I don't think that
	was the intent.

2000-05-16  John Sullivan  <sullivan@eazel.com>

	Some work getting the menu items for "Open With" in place,
	and some related cleanup. "Open With" submenus now appear
	in the File and context menus, but filled with bogus
	insensitive items.

	* src/file-manager/fm-directory-view.h:
	Add #defines for bonobo-style menu paths for "Open With"-related
	items.
	* src/file-manager/fm-directory-view.c: 
	(compute_menu_item_info): Added new cases.
	(append_gtk_menu_item_with_view): Renamed from
	"append_selection_menu_item" because it's now used more
	generally; checks for view != NULL before using view.
	(append_gtk_menu_item): New function, calls _with_view
	with some default values.
	(append_selection_menu_subtree): New function.
	(fm_directory_view_real_create_background_context_menu_items):
	Uses append_gtk_menu_item now instead of duplicating some code/data.
	(add_open_with_gtk_menu_item), (create_open_with_gtk_menu):
	New functions, used to create the "Open With" submenu in
	the context menu.
	(fm_directory_view_real_create_selection_context_menu_items):
	Adds "Open With" submenu to context menu.
	(insert_bonobo_menu_subtree), (add_open_with_bonobo_menu_item),
	(reset_bonobo_open_with_menu): New functions, used to create
	the "Open With" submenu in the File menu in the menu bar.
	(fm_directory_view_real_merge_menus): Adds "Open With" submenu
	to File menu.
	(fm_directory_view_real_update_menus): Updates the "Open With"
	submenu to match selection.
	(fm_directory_view_get_context_menu_index): Updated to match
	current reality.

2000-05-16  Andy Hertzfeld  <andy@eazel.com>

	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize),
	(nautilus_music_view_background_changed),
	(nautilus_music_view_update_from_uri):
	Improved the layout of the music view, and pinned the size of the
	album cover image, temporarily disabled background_changed since
	it's not working with recent metadata changes
	
2000-05-16  Darin Adler  <darin@eazel.com>

	Quick cleanup pass on FIXMEs.
	
	* check-FIXME.pl: Added the count of FIXMEs with bug numbers
	as well as the count of FIXMEs without.
	
	* components/services/trilobite/lib/helixcode-utils.c:
	(xml_get_value), (prune_xml), (check_for_root_user),
	(check_for_redhat), (determine_redhat_version),
	(determine_mandrake_version), (determine_turbolinux_version),
	(determine_suse_version), (determine_debian_version),
	(determine_distribution_type), (get_distribution_name):
	A tiny bit of cleanup on these functions. There was some really
	bad code in here, including code that compared strings with ==.
	Also a lot of code that does open and then no close, for no
	good reason, so I added the close.
	
	* libnautilus-extensions/nautilus-file.c: (rename_callback),
	(nautilus_file_get_mapped_uri):
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_icon):
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(confirm_switch_to_manual_layout), (nautilus_icon_dnd_begin_drag):
	* src/file-manager/fm-icon-view.c: (update_layout_menus),
	(sort_callback), (manual_layout_callback):
	* src/ntl-view.c: (nautilus_view_destroy_client):
	Added bug numbers to some FIXMEs.

2000-05-16  Eskil Heyn Olsen  <eskil@eazel.om>

	* components/services/trilobite/sample/service/Makefile.am
	(sample-service.h): Missed a -I on the orbit-idl

2000-05-16  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_done), (metafile_read_failed),
	(metafile_read_complete): Factored out code that's common to failure
	and success and made it call the new
	nautilus_directory_metafile_apply_pending_changes function to take
	care of changes made while reading the metafile.
	
	* libnautilus-extensions/nautilus-directory-metafile.h:
	* libnautilus-extensions/nautilus-directory-metafile.c:
	(get_metadata_list_from_node), (get_file_node),
	(get_metadata_string_from_metafile),
	(get_metadata_list_from_metafile),
	(set_metadata_string_in_metafile), (set_metadata_list_in_metafile),
	(set_metadata_in_metafile), (get_metadata_string_from_table),
	(get_metadata_list_from_table), (str_or_null_hash),
	(str_or_null_equal), (set_metadata_eat_value),
	(free_file_table_entry), (free_directory_table_entry),
	(destroy_metadata_changes_hash_table),
	(nautilus_directory_get_metadata),
	(nautilus_directory_get_file_metadata),
	(nautilus_directory_get_metadata_list),
	(nautilus_directory_get_file_metadata_list),
	(nautilus_directory_set_metadata),
	(nautilus_directory_set_file_metadata),
	(nautilus_directory_set_file_metadata_list),
	(nautilus_directory_update_file_metadata), (apply_one_change),
	(apply_file_changes),
	(nautilus_directory_metafile_apply_pending_changes),
	(nautilus_directory_get_boolean_metadata),
	(nautilus_directory_set_boolean_metadata),
	(nautilus_directory_get_integer_metadata),
	(nautilus_directory_set_integer_metadata):
	Redid everything to use two hash tables to hold metadata before the
	metafile is read in.
	
	* libnautilus-extensions/nautilus-directory-private.h:
	Made the "NAME" XML tag be private again. It's now only used inside
	the nautilus-directory-metafile.c code.
	
	* libnautilus-extensions/nautilus-file.c:
	(rename_update_info_and_metafile): Moved the code for this inside the
	nautilus-directory-metafile.c code.
	
	* libnautilus-extensions/nautilus-glib-extensions.c:
	(nautilus_g_ptr_array_sort): Took out a FIXME comment now that my
	question about the code is answered. We can't use qsort because it
	does not take a context pointer.
	
	* libnautilus-extensions/nautilus-string.h: Formatting.

2000-05-16  Eskil Heyn Olsen  <eskil@eazel.om>

    	* components/services/trilobite/src/trilobite-service-public.h: 
	* components/services/trilobite/src/trilobite-service.c
	Bonobonizing the trilobite interface (bugzille.eazel.com 899). 
	The service is broken right now.

	* components/services/trilobite/sample/service/sample-service-impl.c
	The sample service is aslo begin bonobonized, and is also broken.
	    
	* components/services/trilobite/sample/command-line/main.c
	The sample client is (guess what) also being bonobonized.

2000-05-16  Jonathan Blandford  <jrb@redhat.com>

	* components/music/nautilus-music-view.c
	(nautilus_music_view_initialize): minor repacking of widgets to
	allow clist to be the dominant item, get rid of a gray band around
	the outside due to the wrong container having it's border_width
	set.

2000-05-16  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-directory-metafile.c:
	(get_metadata_from_node), (get_metadata_list_from_node),
	(create_metafile_root), (nautilus_directory_get_metadata),
	(nautilus_directory_get_metadata_list),
	(nautilus_directory_get_boolean_metadata),
	(nautilus_directory_set_boolean_metadata),
	(nautilus_directory_get_integer_metadata),
	(nautilus_directory_set_integer_metadata),
	(nautilus_directory_get_file_metadata_node),
	(nautilus_directory_get_file_metadata),
	(nautilus_directory_get_file_metadata_list), (real_set_metadata),
	(real_set_metadata_list), (metadata_key_new),
	(metadata_key_destroy), (metadata_key_hash),
	(metadata_key_hash_equal), (metadata_value_new),
	(metadata_value_new_list), (metadata_value_destroy),
	(metadata_value_equal), (set_metadata_in_metafile),
	(set_metadata_eat_parameters),
	(free_metadata_changes_hash_table_entry),
	(destroy_metadata_changes_hash_table),
	(nautilus_directory_metafile_destroy),
	(nautilus_directory_set_metadata),
	(nautilus_directory_set_file_metadata),
	(nautilus_directory_set_file_metadata_list):
	* libnautilus-extensions/nautilus-directory-metafile.h:
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_destroy):
	* libnautilus-extensions/nautilus-file.c:
	Moved metafile code into its own source file. Also worked on making
	it all bottleneck so we can store it before we read in a metafile.
	
	* src/file-manager/fm-list-view.c: (select_matching_name_callback):
	* libnautilus-extensions/nautilus-glib-extensions.h:
	Added nautilus_boolean_bit for use in bit fields where gboolean
	results in a signed bitfield.
	* libnautilus-extensions/nautilus-glib-extensions.c:
	(nautilus_g_list_copy), (nautilus_g_str_list_equal),
	(nautilus_g_str_list_copy): Added functions for dealing with a
	list of C strings. Also got rid of const GList *. For GList we
	don't use const because the functions in <glib.h> don't.
	(nautilus_g_ptr_array_new_from_list), (nautilus_g_ptr_array_sort),
	(nautilus_g_ptr_array_search): Renamed the new functions and types
	to more closely match the standard. For example, the types must
	have a Nautilus prefix.
	
	* src/ntl-window.h:
	* libnautilus-extensions/nautilus-icon-private.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(icon_set_selected), (rubberband_select):
	Switched to use the nautilus_boolean_bit type.

	* components/html/glibwww-callbacks.c:
	Moved <config.h> include down to fix some warnings.
	
2000-05-16  Pavel Cisler <pavel@eazel.com>

	Added keyboard type-ahead selection to the list view.
	
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize_class), (select_matching_name), 
	(select_next_name), (select_previous_name):
	Add new signals to allow hooking in keyboard selection callbacks
	from fm_list_view.

	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_initialize), (nautilus_list_destroy), 
	(nautilus_list_button_press), (nautilus_list_flush_typeselect_state),
	(nautilus_list_handle_typeahead), (nautilus_list_key_press):
	Setup/flush the typeselect state properly.

	* libnautilus-extensions/nautilus-list.c:
	* libnautilus-extensions/nautilus-list.h:
	(nautilus_list_keyboard_move_to), (nautilus_list_select_row):
	Add a convenience call to allow selecting an indexed row from
	fm_list_view.
	
	* libnautilus-extensions/nautilus-file.c
	* libnautilus-extensions/nautilus-file.h:
	(nautilus_file_compare_name):
	Added a compare function that compares a file's name with a given
	pattern.

	* libnautilus-extensions/nautilus-glib-extensions.h:
	* libnautilus-extensions/nautilus-glib-extensions.c
	(nautilus_g_ptr_array_copy_list), (nautilus_g_ptr_array_sort),
	(nautilus_g_ptr_array_search):
	Add utility calls to enhance GPtrArray.

	* libnautilus-extensions/nautilus-glib-extensions.c:
	(nautilus_get_system_time):
	Added more comments.
	
	* src/file-manager/fm-list-view.c:
	(fm_list_view_initialize_class),
	(compare_rows_by_name), (match_row_name),
	(select_matching_name_callback):
	Connect to new NautilusList signals. Add calls for sorting and 
	searching a pointer array by NautilusFile name.

	* src/file-manager/fm-list-view.c:
	(create_list), (add_to_list):
	Tweak some white space.

2000-05-16  Andy Hertzfeld  <andy@eazel.com>

	started work on cleaning up the music view, but it's still in an
	interim state.
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_initialize),
	(nautilus_music_view_background_changed),
	(nautilus_music_view_set_up_background),
	(nautilus_music_view_update_from_uri),
	(nautilus_music_view_drag_data_received):
	made the view sizing more dynamic, made it receive colors and
	backgrounds
	
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.c:
	(nautilus_gdk_pixbuf_render_to_drawable_tiled),
	(nautilus_gdk_pixbuf_scale_to_fit):
	dded new nautilus_gdk_pixbuf_scale_to_fit routine, adapted from
	the property browser since I need it in the Music view
	* libnautilus-extensions/nautilus-gdk-pixbuf-extensions.h:
	added new routine
	* src/nautilus-property-browser.c: (make_drag_image),
	(set_emblem_image_from_file),
	(make_properties_from_directory_path):
	made them use nautilus_gdk_pixbuf_scale_to_fit
	
2000-05-15  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_initialize_class),
	(nautilus_icon_canvas_item_update), (gnome_icon_underline_text):
	* libnautilus-extensions/nautilus-icon-container.c:
	(bounds_changed_callback):
	A long time ago I removed the parameter from the bounds_changed
	signal of the canvas item and I did a half-assed job which left
	the code broken. This made it crash a lot for Martin Baulig
	<baulig@suse.de>. So I finished the job.

2000-05-15  J Shane Culpepper  <pepper@eazel.com>

	* HACKING: Added new gnome-http dep.  Minor fixes to order to jive
	with our current build env.
	* components/services/startup/nautilus-view/Makefile.am: Removed
	hardcoded -lghttp
	* components/services/trilobite/sample/nautilus-view/Makefile.am:
	Removed hardcoded -lghttp
	* configure.in: Added test for ghttp since it is now a dependency.

2000-05-15  Darin Adler  <darin@eazel.com>

	First cut at metadata cleanup in preparation for fixing bug
	with setting metadata before the metafile is read.

	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-directory.c:
	(get_metadata_list_from_node),
	(nautilus_directory_get_metadata_list),
	(nautilus_directory_set_boolean_metadata),
	(nautilus_directory_set_integer_metadata),
	(nautilus_directory_get_file_metadata_node),
	(nautilus_directory_get_file_metadata_list),
	(nautilus_directory_set_file_metadata),
	(nautilus_directory_set_file_metadata_list),
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_metadata), (nautilus_file_get_metadata_list),
	(nautilus_file_set_metadata), (nautilus_file_set_metadata_list),
	(nautilus_file_get_keywords), (nautilus_file_set_keywords):
	Unified code to deal with metadata lists and made both get and
	set work the same way. Also got rid of the default value. For
	lists, the default value is always NULL.

	* components/notes/ntl-notes.c: (notes_load_metainfo):
	* libnautilus-extensions/nautilus-directory-async.c:
	(nautilus_directory_monitor_add_internal),
	(nautilus_directory_call_when_ready_internal):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_call_when_ready),
	(nautilus_directory_file_monitor_add),
	(nautilus_self_check_directory):
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_monitor_add), (nautilus_file_call_when_ready):
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_load_uri), (finish_loading_uri):
	* src/nautilus-index-title.c: (nautilus_index_title_set_uri):
	* src/ntl-uri-map.c: (set_initial_content_iid),
	(get_explicit_content_view_iids_from_metafile),
	(nautilus_navigation_info_new):
	Converted to use new API that specifies only that metadata is
	needed, not which keys. Maciej and I agreed that it's no use
	to specify which keys you are interested in when you can just
	get it wrong and have everything work anyway. Also the old API
	didn't work for metadata lists.
	
	* components/services/trilobite/sample/command-line/.cvsignore:
	Added generated files.
	
	* libnautilus-extensions/nautilus-xml-extensions.c:
	(nautilus_xml_get_property_for_children): Format tweak.
	
	* src/file-manager/fm-directory-view.c:
	(bonobo_menu_delete_callback), (bonobo_menu_duplicate_callback),
	(bonobo_menu_open_properties_window_callback),
	(display_selection_info), (notify_selection_change_callback),
	(queue_pending_files), (append_uri_one),
	(fm_directory_view_duplicate_selection),
	(fm_directory_view_trash_selection): Formatting tweaks.
	
2000-05-14  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize),
	(nautilus_property_browser_destroy), (strip_extension),
	(nautilus_property_browser_preferences_changed):
	made the property browser respond to preference changes by setting
	up a callback, removing it when we're destroyed, and updating the
	contents when it's invoked
	
2000-05-14  J Shane Culpepper  <pepper@eazel.com>

	* components/services/trilobite/lib/helixcode-utils.c:
	(determine_distribution_type), (get_distribution_name):
	Beginning part of fix for Bug #860. Created the 2 functions
	listed above to determine valid DistributionType and return a
	printable string name of the DistributionType.
	* components/services/trilobite/lib/helixcode-utils.h:
	Minor fixes to DistributionType enum.  Added declarations for
	determine_distribution_type and get_distribution_name.

2000-05-13  Andy Hertzfeld <andy@eazel.com>

	fixed bug 842, finish emblems UI in properties window 
	* src/file-manager/fm-properties-window.c:
	removed hard-wired list of emblems
	(get_property_names_from_uri), (get_property_names):
	added routine to return a list of available keywords on the fly
	(create_emblems_page):
	used get_property_names instead of a hardwired list
	
	* src/nautilus-property-browser.c: (element_clicked_callback):
	fixed bug where it wasn't exiting remove mode properly after
	removing an element
	
2000-05-13  J Shane Culpepper  <pepper@eazel.com>

	* configure.in
	* components/services/startup/lib
	* components/services/install/lib
	Created a shared lib directory for the nautilus-view and
	command-line.  This allows an abstracion layer between each
	individual service and libtrilobite.so so that we don't have to
	link libtrilobite against libnautilus, etc.  Also allows
	abstraction of common functions in eazel-install that can now be
	statically linked into nautilus-installer.
	
	* components/services/trilobite/lib
	Removed some useless templates that were checked in by accident.

2000-05-12  Andy Hertzfeld  <andy@eazel.com>

	fixed bug 620, when multiple files are selected, they all should
	be opened when the user single or double click.

	* libnautilus-extensions/nautilus-icon-private.h:
	added last_selected_files field to icon_container details, so the
	selection can be remembered through the double click process
	* libnautilus-extensions/nautilus-icon-container.c: (destroy),
	(forget_selected_files), (remember_selected_files),
	(nautilus_icon_container_almost_drag), (handle_icon_button_press),
	(activate_selected_items):
	changed the activate signal to take a list of file objects instead
	of a single one; added routines remember_selected_files and
	forget_selected_files to build and release the list; called
	remember and forget when appropriate, and used the list to pass to
	the signal.
	* src/file-manager/fm-icon-view.c (icon_container_activate_callback):
	made the signal handler activate all the files in the list
	
2000-05-12  Andy Hertzfeld  <andy@eazel.com>

	* src/file-manager/fm-directory-view.c:
	(notify_selection_change_callback), (display_pending_files):
	some of Darin's recent changes wouldn't compile, so I fixed them
	
2000-05-12  Eskil Heyn Olsen  <eskil@eazel.om>

	* libnautilus/Makefile.am (BUILT_SOURCES): This is way people
	should use a highlighting editor so you wouldn't have these broken
	BUILT_SOURCES things.

	* Makefile.am (SUBDIRS): Moved components and helper-utilies
	downwards in the SUBDIRS so it builds again.

2000-05-12  Darin Adler  <darin@eazel.com>

	* components/services/trilobite/src/trilobite-service.c:
	Format FIXME comments the way check-FIXME.pl recognizes.
	
	* libnautilus-extensions/nautilus-file.c: (rename_callback):
	Added a bug number to a FIXME.
	
	* libnautilus-extensions/nautilus-list.c:
	(nautilus_list_set_selection): Finished fixing bug 613.
	I had marked it fixed but missed one FIXME.
	
	* src/nautilus-property-browser.c:
	(nautilus_property_browser_initialize): Added a bug number
	to a FIXME.
	(make_properties_from_directory_path),
	(make_properties_from_xml_node), (make_category_link):
	Fixed storage leaks I noticed earlier today.

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize), (fm_directory_view_destroy),
	(notify_selection_change_callback), (display_pending_files),
	(fm_directory_view_can_accept_item): Fixed bug 440 by removing
	the hash table that Maciej added. Each NautilusFile is already
	unique because of how the class works.
	
	* src/file-manager/fm-list-view.c: (create_list): Got rid of
	the FIXME now that Pavel fixed bug 315.

2000-05-12  Eskil Heyn Olsen  <eskil@eazel.om>

	* components/services/trilobite/sample/service/Makefile.am 
	* components/services/trilobite/sample/nautilus-view/Makefile.am
	* components/services/trilobite/sample/command-line/Makefile.am
	Polishing the makefiles for the sample service build.
	
	* components/services/trilobite/src/trilobite-service-private.h: 
	* components/services/trilobite/src/trilobite-service-public.h: 
	* components/services/trilobite/src/trilobite-service.c
	Implemented the rest of the base object get_* methods. Moved the
	corba activation into a seperate call. Need to look at the
	destruction and possible use of bonobo for this sucker
	(bugzilla.eazel.com 899 & 900). Also did the destroyer so the
	servers can put themselves down.
	
	* components/services/trilobite/sample/service/sample-service-impl.c
	Implemented the most basic for the sample service. It's useless as
	an example, since it does not add new features to the trilobite yet.
	
	* components/services/trilobite/sample/command-line/main.c
	Basic cli for the sample service tool. Currently connects to a
	running nautilus-eazel-sample-service and lists the basic info for
	it.

2000-05-12  Darin Adler  <darin@eazel.com>

	* Makefile.am: Added the idl directory.
	
	* libnautilus-extensions/nautilus-gnome-extensions.h:
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	(nautilus_simple_dialog): Turned on line wrapping for the label
	in the simple dialog.
	(turn_on_line_wrap_flag), (show_ok_box), (nautilus_error_dialog),
	(nautilus_error_dialog_parented): Made alternate versions of
	gnome_error_dialog and gnome_error_dialog_parented that turn on
	line wrapping for the message label.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text): Made the list of characters to break
	lines on localizable.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(confirm_switch_to_manual_layout): Took newlines out of messages
	since the dialog now does line wrapping.

	* src/file-manager/dfos-xfer.c: (handle_xfer_vfs_error),
	(handle_xfer_overwrite): Took out some extraneous spaces. I could
	have also removed the newlines since the functions call something
	that does line wrapping, but I decided not to.
	
	* src/file-manager/fm-properties-window.c:
	(name_field_update_to_match_file): Fixed a double delete bug.
	This may have been what Ali was running into when he was clicking
	quickly on all the emblems in succession.
	
	* src/nautilus-property-browser.c:
	Did a cleanup pass on the entire file. Marked things localizable
	and marked some bugs with FIXME among other things.
	
	* src/ntl-window-msgs.c: (nautilus_window_update_state): Added
	code to check for NULL so that we won't core dump when trying
	to "go back" from the first failed view.
	(nautilus_window_progress_indicate),
	(nautilus_window_end_location_change_callback): Got rid of newlines
	from messages and called the function that now does line wrapping.

2000-05-12  Darin Adler  <darin@eazel.com>

	* HACKING: Get rid of obsolete requirement for "--without-bonobo"
	for the gtkhtml module. The internal modules list at Eazel was
	updated but someone forgot to update HACKING, as usual.
	
	* components/services/trilobite/sample/command-line/.cvsignore:
	* components/services/trilobite/sample/nautilus-view/.cvsignore:
	* components/services/trilobite/sample/nautilus-view/icons/.cvsignore:
	* components/services/trilobite/sample/service/.cvsignore:
	Lots of generated files that need to be ignored for CVS happiness.
	
	* libnautilus-extensions/nautilus-file.c: (rename_callback):
	Fixed bug in handling error cases. I couldn't test this until Pavel
	fixed the GNOME VFS bug that prevented any errors from being
	reported, but he did and I am ready.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text): Fixed a bug where you'd have a big
	black box behind the text you are renaming by checking for rename
	mode before drawing the black background.
	
	* src/file-manager/fm-icon-view.c:
	(set_sort_criterion), (get_sort_criterion_by_metadata_text),
	(get_sort_criterion_by_menu_path), (fm_icon_view_begin_loading),
	(sort_callback): Add code to save and load the "sort by" setting.

2000-05-12  Eskil Heyn Olsen  <eskil@eazel.om>

	* src/file-manager/Makefile.am (CLEANFILES): Fixed the CLEANFILES
	so the corba generated file and the dfos_corba_stamp get's deleted
	on make clean - thus build no longer breaks on missing files after
	a few make all/clean iterations.

2000-05-11  J Shane Culpepper <pepper@eazel.com>

	* components/services/trilobite/lib/*
	* components/services/install/command-line
	More file gymnastics to isolate generic service code into libtrilobite.
	Revived some dead files in eazel-install for now until I can do some
	more work to clean the current functions up.
	Added a distribution type function to helixcode-utils.c so that we can
	start determining distribution.  This will be used by inventory and
	eazel-install.  Created several skeleton files that will be filled with
	generic functionality like logging, networking, security, etc.

2000-05-11  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	improved the look of the highlighting by adding more margins to
	the box, and tightened things up vertically in the non-highlighted
	case.
	
2000-05-11  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	fixed bug #758, selected items difficult to see at a glance, by
	going back to drawing a filled box around the text to indicate
	selection. I kept the emboldening, since it improves
	readability. This time it doesn't use XOR and has a settable
	color, which I'll make a preference for soon.
	
2000-05-11  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list-column-title.c:
	(truncate_string), (nautilus_list_column_title_paint):
	Fix 376 - Truncate text in columns. Clean up
	nautilus_list_column_title_paint a little in the process.
	
	* src/file-manager/fm-list-view.c: (create_list),
	(fm_list_view_set_zoom_level):
	Fix 315 - Icon columns are now fixed width. Fix a bug that this
	uncovered where setting column width, column min width and column
	max width have to be done in a predetermined order to not get
	messed up by a bug in GtkCList.

2000-05-11  Darin Adler  <darin@eazel.com>

	* idl/Makefile.am:
	* idl/fsextension.idl:
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/.cvsignore:
	Removed the fsextension IDL, which was a work in progress that no
	one is working on.
	
	* libnautilus/.cvsignore:
	Added the undo manager stuff.

	* libnautilus-extensions/.cvsignore:
	Removed the undo manager stuff.
	
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_denies_access_permission): Handle deleted file case.
	(nautilus_file_can_rename): Handle deleted file case.
	(file_operation_state_new), (file_operation_state_free),
	(file_operation_state_complete),
	(rename_update_info_and_metafile), (rename_callback),
	(nautilus_file_rename): Put in a basic framework for file
	operations that can take a while.  Used it to make renaming async.
	(nautilus_file_can_get_permissions): Handle deleted file case.
	(nautilus_file_set_permissions): Handle case where you can't get
	permissions properly. I inadvertently deleted this last time.
	
	* libnautilus-extensions/nautilus-metadata.h:
	Added a metadata key for the icon view sort. Still need to write
	the code to save this.
	
Thu May 11 16:52:14 2000  Raph Levien  <raph@acm.org>

	* librsvg/rsvg.c (rsvg_render_bpath): Added a check to avoid
	zero-width stroke lines, which libart doesn't like. This is a
	workaround for broken svg files. A separate commit will fix
	ill2svg.pl to make it less likely to generate broken files.

2000-05-11  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	fixed bug #600, command buttons don't handle file names with spaces,
	by quoting the file name.  There's still a weakness for file names
	containing single quotes, but we can address that later.
	
2000-05-11  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-index-tabs.c:
	fixed bug #858, index tabs pre-darken, instead of prelighten, by
	making the lighten and switching to black text so the labels are
	still readable.
	Also, made it choose light or dark text on the fly when the tab
	color is changed, so the labels are always readable
	
	* components/services/trilobite/sample/nautilus-view/Makefile.am:
	removed the icons subdir, since it had nothing in it and it was
	breaking the build
	
2000-05-11  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-directory-view.h,
	* src/file-manager/fm-directory-view.c: (compute_menu_item_info),
	(fm_directory_view_real_create_selection_context_menu_items),
	(insert_bonobo_menu_item), (fm_directory_view_real_merge_menus),
	(fm_directory_view_real_update_menus),
	(fm_directory_view_get_context_menu_index): Some more menu code
	cleanup. Renamed FM_DIRECTORY_VIEW_MENU_PATH_SET_PROPERTIES
	to _SHOW_PROPERTIES to match menu text; made new function
	insert_bonobo_menu_item that calls compute_menu_item_info
	to get name & sensitivity so that _real_merge_menus
	doesn't have a separate and potentially diverging copy of
	menu item names.

2000-05-11  John Sullivan  <sullivan@eazel.com>

	Some cleanup in directory view menu-handling code.

	* src/file-manager/fm-directory-view.h,
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize_class),
	(fm_directory_view_real_create_background_context_menu_items),
	(fm_directory_view_real_create_selection_context_menu_items),
	(create_selection_context_menu),
	(fm_directory_view_create_background_context_menu_items),
	(create_background_context_menu): Renamed context-menu functions
	and signals from using "append_" to using "create_" since they
	don't necessarily append.
	
	* src/file-manager/fm-icon-view.c: (insert_one_context_menu_item),
	(append_one_context_menu_item): Made append_ call insert_ with
	-1 for the position to eliminate duplicated code.
	(fm_icon_view_create_selection_context_menu_items): Removed code
	that passed a different position depending on whether or not
	the Duplicate item was present. This subclass can assume that it
	will always be present (or we'll rewrite the code here if we
	change that assumption).
	(fm_icon_view_create_background_context_menu_items),
	(fm_icon_view_merge_menus), (fm_icon_view_initialize_class):
	Renamed functions and signals to use create_ as above.
	
	* src/file-manager/fm-list-view.c: 
	(fm_list_view_append_background_context_menu_items),
	(fm_list_view_append_selection_context_menu_items),
	(fm_list_view_merge_menus), (fm_list_view_update_menus),
	(fm_list_view_compute_menu_item_info),
	(append_one_context_menu_item),	(insert_one_context_menu_item),
	(rename_list_item_callback): Removed these functions, which were
	all used only for Rename (which we won't have in 1.0) and
	Undo (which the list view never interacts with).
	(fm_list_view_initialize_class): Removed function overrides.

2000-05-11  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-icon-view.c: (fm_icon_view_merge_menus):
	Moved the Layout menu to between Settings and Help.

2000-05-11  Gene Z. Ragan  <gzr@eazel.com>

	* helper-utilities/authenticate/Makefile.am:
	* nautilus-widgets/Makefile.am:
	* libnautilus-extensions/Makefile.am:
	* libnautilus/Makefile.am:
	Change makefiles to link against libnautilus.  This is so calls
	to the undo manager code resolve.  There is probably a better way to
	do this.
	
	* libnautilus-extensions/nautilus-entry.c:
	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-text-item.c:
	* src/nautilus-bookmarks-window.c:
	* src/nautilus-location-bar.c:
	* src/nautilus-window-menus.c:
	* src/ntl-app.c:
	Changed to #include <libnautilus-extensions/nautilus-undo-manager.h>
	to #include <libnautilus/nautilus-undo-manager.h>

2000-05-10  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus/nautilus-undo-manager-component.idl:
	* libnautilus/nautilus-undo-manager-private.h:
	* libnautilus/nautilus-undo-manager.c:
	* libnautilus/nautilus-undo-manager.h:
	* libnautilus/nautilus-undo-transaction.c:
	* libnautilus/nautilus-undo-transaction.h:
	* libnautilus/nautilus-undoable.c:
	* libnautilus/nautilus-undoable.h:
	Moved files to libnautilus so IDL compilation would work properly
	and at the suggestion of mjs.

	* libnautilus-extensions/Makefile.am:
	Removed undo files.

	* libnautilus/Makefile.am:
	Added undo files.

	* libnautilus/nautilus-undo-manager-component.idl:
	Additional fixes so a clean build would occuer properly.
	
2000-05-10  J Shane Culpepper  <pepper@eazel.com>

	* libnautilus-extensions/nautilus-undo-manger-component.idl:
	Moved the includes to top of the file so that the idl would compile
	correctly.

2000-05-10  Pavel Cisler  <pavel@eazel.com>

	* src/ntl-app.c:
	* src/ntl-app.h:
	(nautilus_app_destroy_window), (nautilus_app_real_quit),
	(nautilus_app_quit)
	Work in progress on fixing Nautilus deadlocking when quitting while
	async file operations are in progress. Made it so that Nautilus
	waits for gnome VFS threads to complete before it quits and takes
	down the idle task. This only fixes part of the problem, Nautilus
	still deadlocks on gnome vfs jobs that get cancelled right after
	they were started.
	
2000-05-10  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undo-manager-component.idl:
	Added IDL entries to access undo manager functions.
	
	* libnautilus/nautilus-view-component.idl:
	Added Nautilus::UndoManager instance to Nautilus::Application
	
	* libnautilus/nautilus-view-frame.c:
	* libnautilus/nautilus-view-frame.h:
	(nautilus_view_frame_get_main_window):
	New function that returns Nautilus::ViewWindow instance
	held by Nautilus::ViewFrame.  Calls CORBA C utility function.

	* src/ntl-app.c: 
	(impl_Nautilus_Application__get_undo_manager):
	New function to return Nautilus::Application global 
	instance of Nautilus::UndoManager.
	
2000-05-10  John Sullivan  <sullivan@eazel.com>

	* libnautilus/nautilus-bonobo-ui.h: Added #define for path of
	Nautilus's toolbar so components can use Bonobo merging without
	secret inside information.
	* components/sample/nautilus-sample-content-view.c:
	(sample_merge_bonobo_items_callback): Replaced secret inside
	information about menu & toolbar paths & positions with use of
	#defines in nautilus-bonobo-ui.h.

2000-05-10  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c: (nautilus_file_rename):
	(nautilus_file_set_permissions): Changed to do both rename and set
	permissions with an interface that will work for async. Also
	improved the handling of deleted files, empty-string names, and
	files you can't change permissions on: they are considering
	runtime errors instead of coding mistakes now. Also send out
	file_changed even if the call fails.
	
	* src/file-manager/fm-error-reporting.h:
	* src/file-manager/fm-error-reporting.c: (show_error_message_box),
	(fm_report_error_renaming_file),
	(fm_report_error_setting_permissions): Simplified interface to
	these calls. Now we don't require the caller to pass anything we
	can compute ourselves and you can call these with GNOME_VFS_OK
	and they will do nothing. Also merged common code to put up the
	error message box into a helper function.
	
	* src/file-manager/fm-icon-view.c: (rename_callback),
	(fm_icon_view_icon_text_changed_callback):
	* src/file-manager/fm-properties-window.c: (rename_callback),
	(name_field_done_editing), (permission_change_callback),
	(permissions_check_button_toggled):
	Updated callers to use the new calls.

2000-05-10  Darin Adler  <darin@eazel.com>

	* fm-icon-view.c: (update_layout_menus), (sort_callback),
	(manual_layout_callback), (fm_icon_view_merge_menus),
	(update_one_menu_item), (fm_icon_view_update_menus),
	(icon_container_compare_icons_callback), (get_icon_text_callback),
	(text_attribute_names_changed_callback),
	(fm_icon_view_initialize_class), (fm_icon_view_initialize): Added
	a Layout menu with a separate item for Manual Layout and for each
	kind of auto-layout sort.

	* libnautilus-extensions/nautilus-icon-container.c:
	(idle_handler): Reinstated the call to relayout. It broke looking
	at a sorted folder the first time.

	Tons of gratuitous whitespace reformatting. I'm so sorry, but
	I was listening to a talk by rms.

2000-05-10  John Sullivan  <sullivan@eazel.com>

	Fixed bug 853 (assert and weird window behavior in Properties)

	* src/file-manager/fm-properties-window.c:
	(remove_default_viewport_shadow): New function, sets the viewport
	shadow to the no-shadow style.
	(create_emblems_page): Call remove_default_viewport_shadow
	at "realize" signal time, since Gtk bug causes trouble if
	it's called before realizing.

2000-05-10  Darin Adler  <darin@eazel.com>

	* components/services/trilobite/src/.cvsignore:
	Ignore the generated files in this new directory.
	
	* libnautilus-extensions/nautilus-gnome-extensions.h:
	* libnautilus-extensions/nautilus-gnome-extensions.c:
	(convert_varargs_to_name_array), (nautilus_simple_dialog):
	Moved simple-dialog function from dfos. It just calls
	gnome_dialog with the right options.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	Added another marshal function.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-private.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(reload_icon_positions), (nautilus_icon_container_move_icon),
	(nautilus_icon_container_initialize_class),
	(nautilus_icon_container_add),
	(nautilus_icon_container_request_update_all),
	(nautilus_icon_container_set_auto_layout),
	(nautilus_icon_container_freeze_icon_positions),
	(nautilus_icon_container_sort),
	(nautilus_icon_container_start_renaming_selected_item):
	Reorganized signals. Added NautilusIconPosition to simplify
	the interface for signals that deal with icon position. Removed the
	now-unused icon_text_edit_occurred signal. Added the layout_changed
	signal. Added nautilus_icon_container_sort function. Moved some code
	out of the "omit self check" conditional.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(confirm_switch_to_manual_layout), (handle_local_move): Added code
	that switches to manual layout if you move an icon within the window
	and it's on auto layout.
	
	* src/file-manager/dfos-xfer.h:
	* src/file-manager/dfos-xfer.c: (handle_xfer_vfs_error),
	(handle_xfer_overwrite), (dfos_xfer): Switch code to use the new
	nautilus_simple_dialog instead of file_operation_alert, which I
	removed from here.
	
	* src/file-manager/fm-icon-view.c:
	(get_stored_icon_position_callback), (update_layout_menus),
	(fm_icon_view_begin_loading), (auto_layout_callback),
	(manual_layout_callback), (layout_changed_callback),
	(fm_icon_view_merge_menus), (icon_position_changed_callback),
	(create_icon_container):
	Added workaround for Bonobo bug where it calls the radio menu item
	callback that was making it always use auto layout. Converted to use
	the updated signal parameters. Added a signal handler to update the
	layout menu to match the layout when the layout is changed elsewhere.

2000-05-10  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-properties-window.c: (create_emblems_page):
	Commented out shadow-setting line that causes asserts and
	strange window behavior for some people's builds (but not mine
	when I checked this in). Will fix later.

2000-05-09  Andy Hertzfeld <andy@eazel.com>
	
	* src/nautilus-window-toolbar.c:
	restored standard Gnome toolbar icons, for now, while we figure
	out how to make Susan's optional in some fashion
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	added Susan's toolbar icons; she still needs to do reload and stop
	
	* icons/home.png
	* icons/leftarrow.png
	* icons/rightarrow.png
	* icons/uparrow.png
	* icons/Makefile.am:
	Susan's new toolbar icons, except for uparrow, which was modified
	* src/nautilus-window-toolbar.c:
	used Susan's new toolbar icons
	
2000-05-09  J Shane Culpepper  <pepper@eazel.com>

	* components/services/install/command-line/eazel-install-metadata.c
	* components/services/install/command-line/eazel-install-metadata.h
	* components/services/install/command-line/eazel-install-protocols.h
	* components/services/install/command-line/eazel-install-protocols.c
	* components/services/install/command-line/eazel-install-rpm-glue.c
	* components/services/install/command-line/eazel-install-rpm-glue.h
	* components/services/install/command-line/eazel-install-tests.h
	* components/services/install/command-line/eazel-install-tests.c
	* components/services/install/command-line/eazel-install-types.h
	* components/services/install/command-line/eazel-install-utils.h
	* components/services/install/command-line/eazel-install-utils.c
	* components/services/install/command-line/eazel-install-xml-package-list.c
	* components/services/install/command-line/eazel-install-xml-package-list.h
	* components/services/install/command-line/helixcode-install-utils.c
	* components/services/install/command-line/helixcode-install-utils.h
	* components/services/startup/nautilus-view/eazel-register.h
	* components/services/startup/nautilus-view/eazel-register.c

	Merged all of the listed files into:
	components/services/trilobite/lib to create a shared library of common
	service functions.  These functions still need to made much more
	generic in order to use them for common tasks.

2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	taught the icon factory to look in the user's home directory
	for user-defined emblem images
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	added gnome warning messages when the user chooses non-image files
	for backgrounds or emblems.
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	made the add and remove buttons in the content browser not
	show up for novice-level users
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	defined new preference for CAN_ADD_CONTENT
	* libnautilus-extensions/nautilus-global-preferences.c:
	turned CAN_ADD_CONTENT off for novices, on for other levels
	* src/nautilus-property-browser.c:
	respect CAN_ADD_CONTENT when deciding to show the buttons
	
2000-05-09  John Sullivan  <sullivan@eazel.com>

	fixed bug 843 (Emblem checkboxes in Properties window
	don't react to external emblem changes)

	* src/file-manager/fm-properties-window.c: 
	(create_emblems_page): Added file-changed signal
	handler so checkboxes react to external emblem changes.
	Also changed page to use a GtkTable rather than four 
	nested boxes; this keeps all the cells the same size 
	despite differing image sizes.

2000-05-09  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(nautilus_directory_call_when_ready_internal),
	(nautilus_directory_cancel_callback_internal),
	(directory_count_callback), (nautilus_async_destroying_file),
	(start_getting_directory_counts), (top_left_read_done),
	(start_getting_top_lefts):
	Eliminated code that ref's files when they are the target of the
	call_when_ready list or the current file being read for top left
	text or the current directory being counted. Instead, cancel the
	I/O when the file is destroyed (we already had the hook).
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(lacks_top_left):
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_contains_text), (nautilus_file_get_top_left_text):
	Change top left text reading to only read text files and other
	regular files with unknown type.
	
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_marshal_NONE__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER):
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	Needed a new marshal function.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(resort_and_clear), (auto_position_icon), (relayout):
	Changed around to share more code.
	(reload_icon_positions): Call to reload icon positions when you
	switch from auto to manual layout.
	(idle_handler): Get rid of relayout on idle.
	(nautilus_icon_container_move_icon): Renamed icon_changed to
	icon_position_changed.
	(rubberband_select): Fixed bug where rubberband would never deselect.
	(nautilus_icon_container_initialize_class): Add a new signal called
	get_stored_icon_position and also renamed the icon_changed signal to
	icon_position_changed.
	(nautilus_icon_container_update_icon): Changed back the
	get_icon_images interface to return NautilusScaledIcon objects
	instead of actual pixbufs. This is made possible by the change to
	include the embedded text as one of the parameters when creating
	a NautilusScaledIcon.
	(nautilus_icon_container_add): Merged the two flavors of add and
	removed the extra parameters. Now the icon position and scale comes
	from a callback (via signal).
	(nautilus_icon_container_set_selection): Use a hash table (fixes
	Bugzilla bug 613).
	(nautilus_icon_container_select_list_unselect_others): Use a hash
	table.
	(nautilus_icon_container_set_auto_layout): Reload the previous
	icon positions and "freeze" them (store them) when switching from
	automatic layout to manual.
	(nautilus_icon_container_freeze_icon_positions): Public function
	to store all the icon psoitions. For use later with the dialog that
	you get when you drag an icon.
	* src/file-manager/fm-icon-view.c:
	(get_stored_icon_position_callback): Support new interface for
	getting the icon position. Also used setlocale so metadata always
	uses a locale-independent format for floating point numbers.
	(fm_icon_view_add_file), (fm_icon_view_done_adding_files):
	New simplified interface for adding icons.
	(auto_layout_callback), (manual_layout_callback): Fixed a bug where
	we'd always switch to auto layout on startup. It's actually a bug
	in Bonobo where new radio menu items get callbacks right away.
	(icon_position_changed_callback): Used setlocale so metadata always
	uses a locale-independent format for floating point numbers.
	(get_icon_images_callback): Changed for new simpler embedded text
	API. Moved the actual pixbuf stuff back into NautilusIconContainer.
	(create_icon_container): New get_stored_icon_position callback and
	renamed icon_position_changed callback.
	
	* libnautilus-extensions/nautilus-icon-dnd.c: (handle_local_move),
	(handle_nonlocal_move),
	(nautilus_icon_container_receive_dropped_icons):
	Restructured the drag code a little bit to make it easy to add the
	dialog that you get when you drag an icon within an auto-layed-out
	window (that I will add soon).
	
	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_scalable_icon_get), (nautilus_scalable_icon_unref),
	(nautilus_scalable_icon_hash), (nautilus_scalable_icon_equal),
	(nautilus_icon_factory_get_icon_for_file),
	(nautilus_icon_factory_get_emblem_icon_by_name),
	(nautilus_icon_factory_get_emblem_icons_for_file),
	(get_image_from_cache),
	(nautilus_icon_factory_get_pixbuf_for_icon),
	(nautilus_icon_factory_get_pixbuf_for_file), (embed_text),
	(load_image_with_embedded_text):
	* src/file-manager/fm-list-view.c:
	(fm_list_view_get_emblem_pixbufs_for_file):
	* src/file-manager/fm-properties-window.c:
	(create_image_widget_for_emblem):
	* src/nautilus-index-title.c: (nautilus_index_title_update_info):
	Even though John talked me out of it, I talked myself back into it.
	Redid the embedded text so it's done entirely inside the icon
	factory. This keeps the interface simple.
	
	* libnautilus-extensions/nautilus-icon-private.h: Add a missing
	newline.
	
2000-05-09  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_load_uri),
	(mozilla_notify_location_change_callback),
	(mozilla_location_changed_callback):
	Notify nautilus when the location changes so that back/forward
	navigation and history work as expected.

2000-05-09  John Sullivan  <sullivan@eazel.com>

	Work on task 842 (Finish emblems UI in property window)

	* src/file-manager/fm-properties-window.c:
	(create_image_widget_for_emblem): Finished this function
	that I had checked in the beginnings for last time.
	(create_emblems_page): Now displays images and puts
	emblems into a scrolling area in case there are too
	many to fit. Still need to get the real list of emblems
	instead of a hard-wired one.

2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-window-menus.c:
	removed the color selector widget from the debug menu, since it's
	no longer needed now that we have colors in the property browser.
	Since there was nothing else in the menu, I removed it, too.
	
2000-05-09  Ramiro Estrugo  <ramiro@eazel.com>

	* acconfig.h,
	* configure.in: Remove the MOZILLA_FIVE_HOME hack.  I dont like
	how this causes the whole of nautilus to rebuild.  Its also
	something that should be set in the user's environment.
	
	* components/mozilla/main.c: (mozilla_check_environment), (main):
	Remove the MOZILLA_FIVE_HOME hack from here too.  Replace it with
	a environment check instead.
	
	* components/mozilla/nautilus-mozilla-content-view.c:
	(nautilus_mozilla_content_view_initialize),
	(nautilus_mozilla_content_view_destroy),
	(nautilus_mozilla_content_view_load_uri),
	(mozilla_content_view_set_busy_cursor),
	(mozilla_content_view_send_progress_request),
	(mozilla_content_view_clear_busy_cursor),
	(mozilla_notify_location_change_callback),
	(bonobo_mozilla_callback), (mozilla_merge_bonobo_items_callback),
	(mozilla_title_changed_callback),
	(mozilla_location_changed_callback), (mozilla_net_status_callback),
	(mozilla_link_message_callback), (mozilla_progress_callback):
	Add support for mousing over link status, progress notification,
	title changed, location changed, busy cursor.  Some of this still
	needs work to get it right.
	Factor the progress request sending code into its own function.
	
2000-05-09  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	implemented adding new emblems and removing them
	* icons/emblem-generic.png:
	added image for generic emblems
	* icons/Makefile.am:
	added new icon
	
2000-05-09  John Sullivan  <sullivan@eazel.com>

	Checked in to fix silly problem from previous checkin:
	I had left the sense of a check reversed for testing
	purposes, and no permissions would ever appear in the
	Properties window.

	I've also got some new changes that have no visible
	effect yet.

	* libnautilus-extensions/nautilus-icon-factory.h,
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_emblem_icon_by_name):
	New function, gets a single emblem icon.
	(add_emblem): Calls _get_emblem_icon_by_name now.
	* src/file-manager/fm-properties-window.c:
	(create_image_widget_for_emblem), (create_emblems_page):
	Some preliminary work towards making emblem images appear.
	(create_permissions_page): Took out a "!" so permissions
	show up.

2000-05-09  J Shane Culpepper  <pepper@eazel.com>

	* components/services/ ALL
	* nautilus-installer/ ALL
	Massive reorganization of components/services.  All service components
	are now broken up into a command-line and a nautilus-view.  Added
	directories for trilobite, the core service framework.  Added
	directories for the proof of concept time sync service.  Also added
	nautilus-installer directory at the base level of nautilus which will
	contain the bootstrap installer for nautilus and its dependencies. Most
	these changes are in the build harness yet.

2000-05-09  John Sullivan  <sullivan@eazel.com>

	Finished task 547 (show and set permissions in
	Properties window). It's kinda geeky as unix
	permissions like to be. As always, I welcome feedback
	about this UI.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_can_get_permissions): New function, checks
	whether the permissions of a file can be determined.
	(nautilus_file_can_set_permissions): New function, checks
	whether the current user is capable of changing the
	permissions of a file.

	(nautilus_file_denies_access_permission),
	(nautilus_file_is_executable): Deploy _can_get_permissions.
	
	(nautilus_file_get_permissions): New function, returns
	permissions for file.
	
	(nautilus_file_set_permissions): New function, changes
	permissions for file. Returns GnomeVFSResult that reports
	whether change succeeded.
	 
	* src/file-manager/fm-properties-window.c: (add_prompt),
	(add_prompt_and_separator),
	(get_pixmap_and_mask_for_properties_window), (install_value_field),
	(install_title_value_pair), (create_page_with_vbox),
	(apply_standard_table_padding), (create_attribute_value_table),
	(create_page_with_table_in_vbox), (create_emblems_page),
	(permissions_label_update), (add_permissions_row_label),
	(add_permissions_column_label),
	(update_permissions_check_button_state),
	(permissions_check_button_toggled), (add_permissions_checkbox),
	(create_permissions_page), (create_more_page): Lots of new code
	and refactoring to display the permissions UI.

	* src/file-manager/fm-error-reporting.h,
	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_setting_permissions): New function to
	complain to user if attempt to set permissions fails.
	The UI won't let the user try to set the permissions if
	nautilus_file_can_set_permissions returns FALSE, but there
	can always be oddball failures for other reasons.
	
2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (get_lang_list),
	(nautilus_view_identifier_new_from_oaf_server_info): Provide the
	language from either the LANGUAGE or LANG environment variable,
	for proper l10n of OAF name attributes,

2000-05-09  Christopher Blizzard  <blizzard@redhat.com>

	* components/mozilla/nautilus-mozilla-content-view.c
	(nautilus_mozilla_content_view_load_uri): add GTK_MOZ_EMBED() cast
	since the prototype for embed_load_url has changed on the Mozilla
	tip.
	(bonobo_mozilla_callback): Same.

2000-05-08  John Sullivan  <sullivan@eazel.com>

	* src/ntl-uri-map.c: DEBUG_MJS was accidentally checked in
	defined. I commented it out. Also changed an #if DEBUG_MJS
	to #ifdef to match the others.

2000-05-08  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-list.c
	* libnautilus-extensions/nautilus-icon-container.c
	(realize), (unrealize), (nautilus_list_realize),
	(nautilus_list_unrealize),
	(nautilus_icon_container_initialize_class),
	(nautilus_list_initialize_class),
	(nautilus_list_realize),
	(nautilus_list_unrealize):
	Fix 296 - properly set the default focus to the icon and
	list views so that keyboard navigation works right away.
	Properly defocus the icon and list view when switching 
	between the two views. 

	* libnautilus-extensions/nautilus-icon-container.c:
	(keyboard_arrow_key), (keyboard_right), (keyboard_left),
	(keyboard_down), (keyboard_up):
	Properly handle the first keyboard arrow press when we have no selection
	yet. To do this pass in a new empty_start predicate.
	
	* libnautilus-extensions/nautilus-icon-container.c
	* libnautilus-extensions/nautilus-list.c
	(nautilus_list_initialize),
	(select_row_from_mouse),
	(nautilus_list_keyboard_navigation_key_press),
	(nautilus_list_key_press):
	Properly handle the first keyboard arrow press when we have no selection
	yet (this will only start working when 454 gets fixed).
	Make it so that the keyboard focus gets collapsed with the selection
	when selecting an item with a mouse.

2000-05-08  Darin Adler  <darin@eazel.com>

	* check-FIXME.pl:
	* check-config-h.pl: Added "." parameter to "find" so it works
	with non-GNU versions of find. This was for Morten, who wanted
	to run check-config-h.pl on Gnumeric.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(start_getting_top_lefts): Turn embedded text back on.
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_get_metadata): Fixed a bug that was showing
	up in "make check".
	(nautilus_self_check_directory): Got rid of GNOME VFS tests,
	since I moved the same tests into test-async-cancel in the
	gnome-vfs module.

2000-05-08  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus/nautilus-clipboard.c:
	(nautilus_clipboard_info_destroy),
	(nautilus_clipboard_info_set_view_frame): 
	Reference the view on set_view_frame() and unreference on
	destruction.  This fixes a problem where the clipboard code was
	trying to use a view that has already been trashed.
	
	Thanks to Carbamide <linuxfan@ionet.net> for finding the problem.

2000-05-08  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in,
	* HACKING: Remove libglade check and hacking blurb.  We don't
	use libglade no more,

2000-05-08  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	added an up arrow image in the property browser title bar, to act
	as a "go-back" button.
	Also, made the "add background" command check the mime-type of the
	specified file and only add it if it's an image
	* icons/uparrow.png:
	new image to serve as goback button in browser title bar
	* icons/Makefile.am:
	added new image to Makefile

2000-05-08  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(key_press_event):
	Fixed bug introduced by Pavel's new super cool keyboard icon
	selection feature. An icon in renaming mode no longer received
	keyboard events. A check is now made to see if the icon container
	is in renaming mode before processing event for icon selection.

2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	Fixed merging of explicitly specified components. Now the name is
	properly determined from OAF, nonexistent ones are ignored, the
	syntax for specifying then is improved, and they can be defined
	for files as well as directories. In the process I defined some
	new general-purpose metadata operations. These are
	bugzilla.eazel.com tasks #763 and #673.

	* libnautilus-extensions/nautilus-xml-extensions.h,
	libnautilus-extensions/nautilus-xml-extensions.c
	(nautilus_xml_get_property_for_children): New function. Get a
	specific property for all children of a node that have a
	particular name.

	* libnautilus-extensions/nautilus-directory-private.h,
	libnautilus-extensions/nautilus-directory.h,
	libnautilus-extensions/nautilus-file.h,
	libnautilus-extensions/nautilus-file.c
	(nautilus_file_get_metadata_list),
	libnautilus-extensions/nautilus-directory.c
	(get_metadata_list_from_node), (nautilus_directory_get_metadata),
	(nautilus_directory_get_metadata_list),
	(nautilus_directory_get_file_metadata_list): NewFunctions to allow
	getting lists of info for files or directories.

	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_get_keywords): Use the new interface for getting
	the keywords for a file.

	* src/ntl-uri-map.h: Added explicit_iids field to
	Nautilus_NavigationInfo struct.

	* src/ntl-uri-map.c
	(get_explicit_content_view_iids_from_metafile): New function to
	get IIDs for explicitly selected views from the metafile.
	(make_oaf_query_for_explicit_content_view_iids): Create a query
	clause from the explicit IID list.
	(make_oaf_query_with_known_mime_type),
	(make_oaf_query_with_uri_scheme_only): Accept explicitly selected
	IIDs whether or not they would otherwise apply.
	(server_matches_content_requirements): Don't check content
	requirements for explicitly selected servers.
	(nautilus_navigation_info_new), (nautilus_navigation_info_free):
	initialize and free the explicit_iids field.

2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(directory_count_callback): Improved the logic so it records the
	fact that the directory count is complete earlier and more
	cleanly. This stops an assertion failure I was seeing occasionally
	from showing up, by fixing or at least hiding the underlying
	problem.

2000-05-08  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (get_lang_list),
	(nautilus_view_identifier_new_from_oaf_server_info): GSList, not
	GList!

2000-05-07  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (get_lang_list),
	(nautilus_view_identifier_new_from_oaf_server_info): fix
	bugzilla.eazel.com task #694; pass the language to the oaf calls
	that get a name so those attributes can be i18n'd.

2000-05-07  Maciej Stachowiak  <mjs@eazel.com>

	* nautilus-clean.sh: Added pdf component to list. Added -x option
	to also kill oafd and gconfd.

2000-05-08  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-private.h:
	(match_best_name), (select_matching_name), (destroy), 
	(button_press_event), (nautilus_icon_container_almost_drag),
	(nautilus_icon_container_flush_typeselect_state),
	(nautilus_icon_container_handle_typeahead), (key_press_event),
	(nautilus_icon_container_initialize):
	Support for icon selection by typing the item's name. Initialize 
	and flush the new typeselect state properly. Rework key_press_event
	a little bit to make it easier to call the inherited key_press call
	when we did not handle the keyboard event ourselves.

	* libnautilus-extensions/nautilus-icon-container.c:
	(select_previous_or_next_name), (compare_icons_by_name),
	(build_sorted_icon_list):
	Support for selecting next/previous icon alphabetically using
	Tab and Shift-Tab.
	
	* libnautilus-extensions/nautilus-icon-container.c:
	(find_best_icon), (find_best_selected_icon), (leftmost_in_top_row),
	(rightmost_in_bottom_row), (same_row_right_side_leftmost),
	(same_row_left_side_rightmost), (same_column_above_lowest),
	(same_column_below_highest), (keyboard_home), (keyboard_end),
	(keyboard_arrow_key):
	Add data parameter to find_best_icon and find_best_selected_icon
	to allow using more complicated match predicates.
	
	* libnautilus-extensions/nautilus-glib-extensions.c:
	* libnautilus-extensions/nautilus-glib-extensions.h:
	(nautilus_g_list_copy):
	Add a list shallow copy utility call.

	* libnautilus-extensions/nautilus-glib-extensions.c:
	* libnautilus-extensions/nautilus-glib-extensions.h:
	(nautilus_get_system_time), (nautilus_self_check_glib_extensions)
	Add a utility call to get the system time in microseconds.

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	Fix a typo.

	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_start_renaming_selected_item):
	Fix white space.

2000-05-08  Andy Hertzfeld <andy@eazel.com>

	src/nautilus-property-browser.c:
	implemented adding and removing colors and backgrounds to the property browser
	libnautilus-extensions/nautilus-icon-factory.c:
	removed some code for making frames for non-standard format thumbnails that was
	never being executed
	data/browser.xml:
	added another color so they line up better
	
2000-05-07  Maciej Stachowiak  <mjs@eazel.com>


	Fix bugzilla.eazel.com task 479:

	* libnautilus/nautilus-clipboard.c
	(nautilus_clipboard_info_destroy),
	(nautilus_clipboard_info_set_view_frame): Do not ref and unref the
	view_frame. Because the NautilusClipboardInfo will only be
	destroyed when the view_frame is destroyed in the normal use case,
	if it holds a ref on the view_frame it will prevent it from ever
	being destroyed. This was causing the notes and history view
	processes to stay around forever.
	
2000-05-06  John Sullivan  <sullivan@eazel.com>

	Fixed up code that limits how small icons are before they
	stop showing embedded text. Too bad you can't see it in
	action until embedded text is turned back on.

	* icons/eazel/i-regular.xml: Added an embedded-text rectangle
	for one size smaller icon than had one before.
	
	* libnautilus-extensions/nautilus-icon-factory.c:
	Added #defines for minimum embedded text rectangle width
	and height.
	(embedded_text_rect_usable): New function, ensures that the
	embedded text rectangle is sufficiently large.
	(nautilus_icon_factory_embed_text),
	(nautilus_icon_factory_embed_file_text): Use new function to
	skip embedded text if rectangle is nonexistent or too small.
	
	* src/file-manager/fm-icon-view.c:
	(get_icon_images_callback): Removed the text-rectangle size
	limit here since now there's a universal one inside
	nautilus_icon_factory.

2000-05-06  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	(start_getting_top_lefts): Disabled the embedded text until I can
	fix the file descriptor linking problem. It's easy to re-enable,
	but then you quickly run out of FDs.

2000-05-06  Jesus Bravo Alvarez  <jba@pobox.com>

	* configure.in: Added Galician (gl) to ALL_LINGUAS

2000-05-05  Andy Hertzfeld <andy@eazel.com>

	did some work at the request of Bud
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	added preference NAUTILUS_PREFERENCES_SIDEBAR_WIDTH
	* src/ntl-window.c:
	set the initial sidebar width from NAUTILUS_PREFERENCES_SIDEBAR_WIDTH.  
	As a welcome side-effect, this allowed  me to remove the old "sopwidth 
	hack". I also increased	the default size.
	* src/ntl-index-panel:
	added old_width to details.  Overrode size_allocate signal to get 
	in there when the size changes to record it in preferences when 
	it changes
	
	* src/nautilus-index-title.c:
	changed the font used for the title to helvetica, to match the other text
	
2000-05-05  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/.cvsignore: Ignore the new files that
	are generated by Gene's new .idl.
	
	* libnautilus-extensions/nautilus-debug.h:
	* libnautilus-extensions/nautilus-debug.c:
	(nautilus_get_available_file_descriptor_count):
	Changed the interface on Pavel's excellent new debugging function.
	
	* libnautilus-extensions/nautilus-directory.c:
	(file_open_callback), (file_close_callback), (open_and_close_one),
	(nautilus_self_check_directory): Added some checks for GNOME VFS
	in here. This is a bad place for them but it's better than not
	having them at all.
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_self_check_icon_factory): Updated self checks so they
	work again. John didn't notice that he needed to fix these when
	he added the 20-pixel size icon to the standard sizes.
	
2000-05-05  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undo-manager-component.idl:
	New IDL file describing CORBA interface to the undo manager.
	
	* libnautilus-extensions/Makefile.am:
	Modified to include nautilus-undo-manager-component.idl
	
	* libnautilus-extensions/nautilus-undo-manager.c
	* libnautilus-extensions/nautilus-undo-manager-private.h:
	(impl_Nautilus_UndoManager__destroy),
	(impl_Nautilus_UndoManager__create),
	(impl_Nautilus_UndoManager__begin_transaction),
	(impl_Nautilus_UndoManager__end_transaction):
	CORBA/Bonobo functions to access undo manager features.

	* libnautilus-extensions/nautilus-undo-manager.h:
	* src/file-manager/fm-list-view.c
	(fm_list_view_append_background_context_menu_items),
	(fm_list_view_merge_menus), (fm_list_view_update_menus),
	(rename_list_item_callback):
	Began the task of 
	
	* src/ntl-main.c 
	(main):
	Removed intialization of undo manager from main,

	* src/ntl-app.c 
	(nautilus_app_init):
	Moved initialization of undo manager. A reference to the undo manager
	is saved for easy access from components.
	
	
2000-05-05  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	improved the appearance of color properties by putting them
	in a frame
	
2000-05-05  Andy Hertzfeld <andy@eazel.com>

	* icons/colors.png:
	added icon for colors category
	* icons/Makefile.am:
	added new icon to Makefile
	* data/backgrounds/ice.png:
	added cool new background
	* data/backgrounds/Makefile.am:
	added new background to Makefile
	
2000-05-05  John Sullivan  <sullivan@eazel.com>

	* src/file-manager/fm-properties-window.c:
	(install_title_value_pair), (create_page_with_table_in_vbox),
	(create_basic_page), (create_emblems_page),
	(create_permissions_page), (create_more_page),
	(create_properties_window):
	More early work on the Properties window. Nudging it into
	shape one step at a time.

2000-05-05  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-debug.c,
	libnautilus-extensions/nautilus-debug.h:
	(nautilus_print_available_file_descriptor_count):

	Added a debugging call to help locate file descriptor leaks.
	
2000-05-05  Darin Adler  <darin@eazel.com>

	Fix up the code for cancelling so we don't leave files open and
	objects around so much. It was getting out of hand.
	
	* libnautilus-extensions/nautilus-directory-async.c:
	(empty_close_callback): Give a warning if we ever have a close
	that fails.
	(directory_count_callback): For easier debugging, NULL out the
	file after unref'ing.
	(start_getting_directory_counts): Unref the file when we cancel
	a directory count part-way through (leak #1).
	(start_getting_top_lefts): Close the file when we cancel a top
	left read part-way through (leak #2). Unref the file when we
	cancel a top left read part way thorugh (leak #3).

2005-05-05  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	made color drag and drop work from the property browser.
	
2000-05-05  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_embed_text): The old code assumed that white
	was == 0xFFFFFF. But that's not always true due to bugs (well maybe
	not bugs but imperfections) in the code that converts 555 to 888 in
	gdk-pixbuf. Fixed it now.

2000-05-05  Darin Adler  <darin@eazel.com>

	Moved the "embedded text" feature into the icon factory and
	NautilusFile. Also fixed some FIXMEs that were in the modified
	code along the way.

	This code requires a new version of GdkPixbuf to work properly.
	A bug in the old one makes embedded text look wrong.

	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_close), (nautilus_metafile_read_cancel),
	(metafile_read_failed), (metafile_read_complete),
	(metafile_read_callback), (metafile_read_some),
	(metafile_read_open_callback), (metafile_read_start),
	(nautilus_directory_request_read_metafile), (metafile_write_done),
	(metafile_write_failed), (metafile_write_callback),
	(metafile_write_create_callback), (nautilus_metafile_write_start),
	(metafile_write), (lacks_top_left), (wants_top_left),
	(has_problem), (select_needy_file), (count_lines),
	(top_left_read_done), (top_left_read_failed),
	(top_left_read_complete), (top_left_read_close),
	(top_left_read_callback), (top_left_read_some),
	(top_left_open_callback), (start_getting_top_lefts),
	(state_changed):
	Added code to read top lefts of files in the background.
	Restructured things to accomodate this new code nicely with
	a minimum of copy and paste (there still was plenty of copy
	and paste so there's room for improvement).
	
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_destroy):
	Name changes from above required revising some asserts.
	
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_top_left_text): Now it returns something
	besides just NULL.
	(nautilus_extract_top_left_text): Function that remembers only
	the part of the top left text that we want to keep around.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_marshal_NONE__POINTER_POINTER_POINTER),
	(nautilus_gtk_marshal_POINTER__POINTER_INT_INT_POINTER_POINTER):
	Needed some new marshal functions.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.h:
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(nautilus_icon_canvas_item_initialize_class),
	(nautilus_icon_canvas_item_destroy),
	(nautilus_icon_canvas_item_set_arg),
	(nautilus_icon_canvas_item_get_arg),
	(nautilus_icon_canvas_item_get_image),
	(nautilus_icon_canvas_item_set_image),
	(nautilus_icon_canvas_item_draw):
	Removed the old embedded text support. It came with a whole lot
	of baggage, also removed.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_icon): Moved pixbuf computing code
	into the FMIconView class. We might decide later to move it back
	again, but for now the embedded text makes it easier to do it
	this way.
	(nautilus_icon_container_initialize_class): Merged
	get_icon_editable_text and get_icon_additional_text back into
	a single signal that gets both.
	
	* libnautilus-extensions/nautilus-icon-dnd.c:
	(nautilus_icon_dnd_begin_drag): Updated for change in icon factory
	API.
	
	* src/file-manager/fm-directory-view.c: (finish_loading_uri):
	Ask for top-left text attribute for all directories.
	
	* src/file-manager/fm-icon-view.c: (get_icon_images_callback):
	Moved pixbuf computing code into the FMIconView class. We might
	decide later to move it back again, but for now the embedded text
	makes it easier to do it this way.
	(get_icon_text_callback): Merged get_icon_editable_text and
	get_icon_additional_text back into a single signal that gets both.

2000-05-04  Andy Hertzeld

	added colors to the property browser.  Dragging isn't quite working yet.
	
	* src/nautilus-property-browser.c:
	added inline xml mode for the property browser and used it to add color properties
	* data/browser.xml:
	added some color definitions.
		
2000-05-04  John Sullivan  <sullivan@eazel.com>

	* src/ntl-index-panel.c (nautilus_index_panel_initialize):
	Added a nice little GNOME_PAD worth of space above (and
	below, but who could tell?) the index-title. Now that icon
	isn't jammed up against the top of the sidebar.

2000-05-04  John Sullivan  <sullivan@eazel.com>

	Some work on the Properties window. It now shows some
	more properties (location, type, size, date).

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_parent_uri_as_string): New function, returns
	the URI of the enclosing directory.
	(nautilus_file_get_string_attribute): Now supports attributes
	"uri" and "parent_uri".
	* src/file-manager/fm-directory-view.c: (compute_menu_item_info),
	(fm_directory_view_real_merge_menus): Changed menu name from
	"Set Properties..." to "Show Properties" since the read-only ones
	now outnumber the changeable ones.
	* src/file-manager/fm-properties-window.c:
	(create_pixmap_widget_for_file), (value_field_update),
	(install_title_value_pair), (create_basic_page),
	(create_emblems_page), (create_properties_window): Broke up
	huge create_properties_window into smaller functions, and
	added location, type, size, and date to Basic page.

2000-05-04  J Shane Culpepper <pepper@eazel.com>
	
	* components/services/install/Makefile.am
	* components/services/startup/main.c
	* components/services/startup/eazel-register.c
	* components/services/startup/eazel-register.h
	* components/services/startup/nautilus-services-startup-view.h
	* components/services/startup/nautilus-services-startup-view.c

	Code cleanup to conform to eazel hacking standards.

2000-05-04  Andy Hertzfeld <andy@eazel.com>

	now you can drop emblems from the property browser onto
	icons in the icon view.
	
	* libnautilus-extensions/nautilus-icon-dnd.h:
	added definitions for the "property/keyword" drag type
	* libnautilus-extensions/nautilus-icon-dnd.c:
	added receive_dropped_keyword and integrated it;
	made it highlight by testing for keywords in
	nautilus_icon_dnd_update_drop_target;
	also, with Pavel's help, fixed a long-standing drag and drop bug
	by calling nautilus_icon_container_free_drag_data in the
	drag_leave_callback.
	
	* data/backgrounds/Makefile.am:
	added another background image
	* data/backgrounds/beige_tile.jpg:
	new background image
	
2000-05-04  Darin Adler  <darin@eazel.com>

	* src/ntl-uri-map.c: (file_list_to_mime_type_hash_table),
	(free_key), (mime_type_hash_table_destroy),
	(got_file_info_callback): Fixed bug I introduced earlier.
	Now MIME types are just like other text -- potentially
	dynamically computed and all.

	Special thank-you fix for Carbamide. With all his testing he deserves
	some special treatment.

2000-05-04  Ramiro Estrugo  <ramiro@eazel.com>

	* src/run-nautilus: Pass command line arguments on to the script.
	
2000-05-04  J Shane Culpepper  <pepper@eazel.com>
	*components/eazel/services/install/eazel-install-xml-package-list.c
	Making minor fixes.  Changed gint reference to int. Made
	parse_package_template function static.

2000-05-04  Darin Adler  <darin@eazel.com>

	* HACKING: Some more instructions and cleanup.
	* RENAMING: Removed one gratuitous renaming we won't do.
	
	* components/html/ntl-web-browser.c:
	Removed stray "#include <config.h>" that I added by accident.

	* components/hardware/main.c: (main):
	* components/help/hyperbola-main.c: (main):
	* components/html/ntl-web-browser.c: (main):
	* components/music/main.c: (main):
	* components/notes/ntl-notes.c: (main):
	* components/rpmview/main.c: (main):
	* components/websearch/ntl-web-search.c: (main):
	* src/file-manager/gnome-desktop.c (main):
	* src/ntl-main.c (main):
	Added ifdefs so you don't get warnings when building with
	localization turned off. Ugly, but needed I think.
	
	* components/help/converters/gnome-db2html2/gdb3html.c:
	(ulink_start_element), (start_element):
	* components/help/converters/gnome-db2html2/sect-elements.c:
	(sect_sect_start_element), (sect_sect_end_element),
	(sect_title_start_element), (sect_xref_start_element),
	(sect_graphic_start_element), (sect_get_infobox_logo):
	* components/help/converters/gnome-db2html2/sect-preparse.c:
	(sect_preparse_sect_start_element),
	(sect_preparse_title_characters):
	* components/help/converters/gnome-db2html2/toc-elements.c:
	(toc_sect_start_element), (toc_title_start_element):
	* components/help/converters/gnome-info2html2/html.c:
	(write_node_link_html):
	* components/help/hyperbola-filefmt.c: (tree_key_compare):
	* components/help/hyperbola-nav-index.c: (start_element),
	(end_element), (hyperbola_navigation_index_new):
	* components/html/ntl-web-browser.c: (browser_submit):
	Replaced all uses of strcasecmp with g_strcasecmp.
	Why? Because Michael Meeks said so and that's good enough
	for me (in this case :-).
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_update_from_uri):
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_mime_type_as_string_attribute),
	(nautilus_file_get_mime_type):
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	* src/file-manager/fm-icon-view.c (get_icon_property_callback):
	* src/ntl-index-panel.c (nautilus_index_panel_update_buttons):
	* src/ntl-uri-map.c (file_list_to_mime_type_hash_table):
	Changed get_mime_type to be like all other text functions and
	return a strdup'd string. John said it was a good idea.

	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-directory-async.c:
	(metafile_read_callback), (metafile_read_some),
	(set_up_request_by_file_attributes),
	(nautilus_directory_monitor_add_internal),
	(directory_list_get_next_position), (directory_load_callback),
	(ready_callback_call),
	(nautilus_directory_call_when_ready_internal),
	(wants_directory_count), (has_problem),
	(ready_callback_is_satisfied), (is_anyone_monitoring_file_list),
	(is_anyone_waiting_for_metafile), (is_wanted), (select_needy_file),
	(start_getting_directory_counts):
	Reorganize to get ready for adding code to read the top left text.
	
	* libnautilus-extensions/nautilus-file-attributes.h:
	Added name for the "top left text" attribute.
	
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_top_left_text):
	Added call to get the top left text.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	(draw_embedded_text): Tiny format tweak.
	* libnautilus-extensions/nautilus-icon-container.c:
	(nautilus_icon_container_update_icon): Tiny format tweak.
	
	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-factory.c:
	(nautilus_icon_factory_get_pixbuf_for_file),
	(nautilus_icon_factory_get_pixmap_and_mask_for_file),
	(nautilus_icon_factory_embed_text),
	(nautilus_icon_factory_embed_file_text):
	Added support for embedded text. Not completely deployed yet.
	
2000-05-03  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c (create_xfer_dialog),
	(handle_xfer_ok), (handle_xfer_vfs_error), (fs_xfer),
	(fs_move_to_trash), (fs_empty_trash):
	Add a simple heuristic to only show the progress dialog
	for file operations that are likely to take a non-trivial
	ammount of time in which case the progress dialog flashed
	on the screen for a split of a second.

	* libnautilus-extensions/nautilus-icon-dnd.c
	(nautilus_icon_dnd_modifier_based_action):
	Switch the modifier key for copy to Control. This is a better
	modifier because Alt had to be held down after the drag started
	otherwise one would move the window instead of starting a drag.
	
2000-05-03  Andy Hertzfeld <andy@eazel.com>

	* src/nautilus-property-browser.c:
	at John's suggestion, made the property browser stay open if you
	drag with the shift key held down.  Also, changed the format of
	the data accompanying the "property/keyword" item to just be the
	keyword instead of a file uri.
	* src/ntl-index-panel.c:
	adjusted the index panel to accept the new "property/keyword" format,
	removing the hack to extract the keyword from the uri.
	
2000-05-03  Eskil Heyn Olsen  <eskil@eazel.com>

	* components/services/install/eazel-install-xml-package-list.c:
	parse_pkg_template checks the fopen return val. Also changed the
	arguments, so it returns the number of lines, thus loosing the
	hardcoded 500 lines in generate_xml_package_list.

2000-05-03  Gene Z. Ragan <gzr@eazel.com>

	* libnautilus-extensions/nautilus-entry.c
	* libnautilus-extensions/nautilus-entry.h:
	Refined undo support.
	(nautilus_entry_enable_undo_key):
	New function to set internal handling of ctl-z for undo.
	
	* libnautilus-extensions/nautilus-icon-container.c
	(hide_rename_widget):
	Removed deletion of undo transaction.  This is now handled
	by the owner of the widget.
	
	* libnautilus-extensions/nautilus-undo-manager.c	
	(nautilus_undo_manager_unregister_object):
	New function to unregister a GtkObject from the undo manager.
	Any transaction that contains the object is removed from the
	undo and redo lists.  This should be called for any object that
	is no longer available for user interaction.

	* libnautilus-extensions/nautilus-undo-transaction.c
	(nautilus_undo_transaction_contains_object):
	Function added to support nautilus_undo_manager_unregister_object()
	call in the undo manager.  Each NautilusUndoable in a transaction
	is checked for the object to be removed.
	
	* src/file-manager/fm-icon-view.c:
	* src/file-manager/fm-properties-window.c
	(create_properties_window):
	Added call to unregister rename widget from undo manager.

	* src/nautilus-bookmarks-window.c
	Added undo support for entry widgets.
	
	* src/nautilus-location-bar.c
	Changed to support modified undo manager APIs.
	
2000-05-03  Kjartan Maraas  <kmaraas@online.no>

	* components/html/Makefile.am: Added -DGNOMELOCALEDIR
	* components/html/ntl-web-browser.c: Added bindtextdomain()
	and textdomain() to initialize the i18n support.
	* components/music/Makefile.am: Same as above.
	* components/music/main.c: Same as above.
	* components/music/nautilus-music-view.c: Marked strings.
	* components/notes/Makefile.am: Same as above.
	* components/notes/ntl-notes.c: Same as above.
	* components/rpmview/Makefile.am: Same as above.
	* components/rpmview/main.c: Same here too.
	* components/rpmview/nautilus-rpm-view.c: Marked strings.
	* components/sample/nautilus-sample-content-view.c: Same here too.
	* components/websearch/Makefile.am: Same as above.
	* components/websearch/ntl-web-search.c: Again.

2000-05-03  Fatih Demir	<kabalak@gmx.net>
	
	* nautilus.desktop: Yes, yes, nautilus can be such a
	typotic word (nautlius->nautilus in Name entry...)
	
	* configure.in: Added ko to ALL_LINGUAS .

2000-05-02  Andy Hertzfeld  <andy@eazel.com>

	* src/nautilus-index-title.c,h:
	made it display the emblems associated with a file.  Also, added a
	routine to return the current title.
	* src/ntl-index-panel.c:
	made dropping emblems on the index panel work by adding a new
	receive_dropped_keyword routine
	* src/nautilus-property-browser.c:
	fixed bug where the title background image wasn't being set correctly	
	* data/browser.xml:
	changed drop type for emblems to "property/keyword"
	* data/backgrounds/Makefile.am:
	added new background image
	* data/backgrounds/white_ribs.png:
	added new "white_ribs" background image

2000-05-02  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-entry.c
	Connected widget to undo manager.
	(nautilus_entry_initialize),
	(nautilus_entry_destroy), 
	(nautilus_entry_key_press):
	Added check for ctl-z.  An undo is requested when the key combination
	is triggered.
	(nautilus_entry_changed):
	Added undo registration when text is modified.
	(save_undo_snapshot_callback),
	(restore_from_undo_snapshot_callback):
	Standard undo manager callbacks
	(nautilus_entry_enable_undo):
	Added new function. Pass in boolean value to enable or disable
	undo functionality.
	
2000-05-02  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	Removed special case for "core" files, which are now
	handled by the MIME type database used in gnome-vfs.

2000-05-02  Andy Hertzfeld  <andy@eazel.com>

	1st cut at property browser for drag and drop customization;
	Backgrounds are fully implemented, emblems are only partially there,
	more coming soon

	* src/Makefile.am: added property browser source files
	* src/nautilus-property-browser.c,h:
	new class that implements the property browser
	
	* src/nautilus-window-menus.c:
	added "customize" menu item and a callback that brings up
	the property browser
	
	* src/ntl-index-panel.c:
	changed index panel to accept "property/bgimage" drag type and
	change the background image accordingly

	* libnautilus-extensions/nautilus-icon-dnd.c:
	changed icon canvas to accept "property/bgimage" drag type and
	change the background image accordingly; removed the old shift key hack
	
	* libnautilus-extensions/nautilus-icon-dnd.h:
	defined constants for the new drag type
	
	* configure.in: two new data directories for backgrounds and emblems
	* data/Makefile.am: added two new directories
	* data/browser.xml: xml file that defines the categories

	added some background images to play with:
	
	* data/backgrounds/.cvsignore
	* data/backgrounds/Makefile.am
	* data/backgrounds/baize.png
	* data/backgrounds/bricks.jpg
	* data/backgrounds/bubbles.png
	* data/backgrounds/buffedwood.jpg
	* data/backgrounds/burlap.jpg
	* data/backgrounds/chalk.jpg
	* data/backgrounds/cherrywood.jpg
	* data/backgrounds/cork.png
	* data/backgrounds/dark-gnome.jpg
	* data/backgrounds/darkwood.png
	* data/backgrounds/frost.jpg
	* data/backgrounds/gnome.jpg
	* data/backgrounds/gold.jpg
	* data/backgrounds/grass.png
	* data/backgrounds/gray_fabric.png
	* data/backgrounds/greenery.jpg
	* data/backgrounds/manila.jpg
	* data/backgrounds/pink_fabric.png
	* data/backgrounds/puzzle.jpg
	* data/backgrounds/raindrops.png
	* data/backgrounds/sky.jpg
	* data/backgrounds/stucco.jpg
	* data/backgrounds/white_marble.jpg
	* data/backgrounds/white_paper.jpg
	* data/backgrounds/yellow_paper.jpg
	
	added some emblem images:
	
	* data/emblems/.cvsignore
	* data/emblems/Makefile.am
	* data/emblems/certified.gif
	* data/emblems/changed.gif
	* data/emblems/confidential.gif
	* data/emblems/encrypted.gif
	* data/emblems/important.gif
	* data/emblems/new.gif
	* data/emblems/personal.gif
	* data/emblems/remote.gif
	
	added images for the top-level categories
	
	* icons/Makefile.am: added 2 images to Makefile
	* icons/backgrounds.png
	* icons/emblems.png
		
2000-05-02  Maciej Stachowiak  <mjs@eazel.com>

	* RENAMING: Added some idl-related renamings.

2000-05-02  Darin Adler  <darin@eazel.com>

	* HACKING: Added a mention of "killall oafd" and "killall gconfd".
	
	* libnautilus-extensions/nautilus-list.c (nautilus_list_destroy):
	Fixed a bug where we'd free the details structure and then write
	to it afterwards. This was torturing John today. It happens when
	you leave a page that's set to list view.
	
	* src/file-manager/fm-icon-view.c
	(fm_icon_view_icon_changed_callback): Fixed bug 663 that was
	about the issue of similar but not identical floating point
	numbers and also bug 661 that wasn't a bug at all!
	
	* src/file-manager/fm-properties-window.c
	(get_pixmap_and_mask_for_properties_window):
	Removed the FIXME from this file, since the bug is fixed.

2000-05-02  Cody Russell  <car0969@gamma2.uta.edu>

	* src/ntl-window.c: Respect the user's GNOME preferences. Lock
	down the "Location" toolbar if the user has "Can detach and
	move toolbars" disabled in gnomecc.

2000-05-02  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	(load_specific_image_svg): Open .svg file in binary mode.
	(load_specific_image): Factor out some shared code.

	* src/file-manager/fm-directory-view.h:
	* src/file-manager/fm-directory-view.c:
	Renamed *_cb to *_callback.
	(remove_custom_icon), (files_have_any_custom_images),
	(remove_custom_icons_callback), (finish_adding_menu_item),
	(fm_directory_view_real_append_background_context_menu_items):
	(append_selection_menu_item),
	(fm_directory_view_real_append_selection_context_menu_items),
	(fm_directory_view_real_merge_menus), (update_one_menu_item),
	(fm_directory_view_real_update_menus),
	(create_selection_context_menu):
	Added the "Remove Custom Image" command.
	(compute_menu_item_info): Made more similar to the one in
	FMIconView.

	* src/file-manager/fm-icon-view.c (compute_menu_item_info),
	(append_one_context_menu_item), (insert_one_context_menu_item),
	(fm_icon_view_append_selection_context_menu_items),
	(append_bonobo_menu_item), (fm_icon_view_merge_menus),
	(update_one_menu_item), (fm_icon_view_update_menus):
	Made more similar to code in FMDirectoryView.

2000-05-02  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c
	(motion_notify_event):
	Get rid of FIXME 623 - the problem was already fixed, I just
	forgot to remove the FIXME.

	* src/file-manager/dfos-xfer.c (handle_xfer_ok):
	Fix FIXME 676 - the particular switch case doesn't need any
	handling, took it out.

	* libnautilus-extensions/nautilus-list-column-title.c
	(nautilus_list_column_title_paint),
	(nautilus_list_column_title_leave),
	(nautilus_list_column_title_button_press),
	(nautilus_list_column_title_button_release):
	Fix bug 423 - Double-clicking Header boundary in List View
	fails assertion. 
	Fix a column press tracking bug Gene found - the coulumn would
	stay pressed if you tracked out of the column and let go of the
	mouse button - made it so that when tracking a column press the
	cursor gets grabbed.
	Fix FIXME 618 - used offscreen bitmap draws instead of invalidates
	during the different mouse tracking state changes.

	* file-manager/fm-directory-view.c:
	Added comments to some #if 0 code that I left behind and will use
	later.

2000-05-02  John Sullivan  <sullivan@eazel.com>

	Fixed bug 641: should check MIME type for SVG files.
	Fixed bug 438: Bookmark menu items need to limit icon size

	* libnautilus-extensions/nautilus-icon-factory.h:
	Defined a new standard icon size, NAUTILUS_ICON_SIZE_FOR_MENUS.
	None of the existing standard sizes look good in menus.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_is_mime_type): New function, compares against
	a particular MIME type so the caller doesn't have to get the
	MIME type and worry about whether to free it or not.

	* libnautilus-extensions/nautilus-icon-factory.c:
	(get_larger_icon_size),
	(get_smaller_icon_size): Include NAUTILUS_ICON_SIZE_FOR_MENUS
	when looking for the next size.
	(str_has_svg_suffix): Removed this function.
	(nautilus_icon_factory_get_icon_for_file): Use
	nautilus_file_is_mime_type to check for SVG instead
	of checking file suffix.
	(path_represents_svg_image): New function.
	(load_specific_image): Use path_represents_svg_image to
	check for SVG instead of checking file suffix.

	* libnautilus-extensions/nautilus-bookmark.c:
	(create_pixmap_widget_for_bookmark): Use 
	NAUTILUS_ICON_SIZE_FOR_MENUS.
	* src/nautilus-window-menus.c (append_bookmark_to_menu):
	Use NAUTILUS_ICON_SIZE_FOR_MENUS.

2000-05-02  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c (icon_new),
	(nautilus_icon_container_update_icon):
	Got rid of the old maximum size hack and use the new maximum size
	parameter instead.
	
	* src/nautilus-index-title.c (nautilus_index_title_update_icon):
	Took out maximum size hack and use the maximum size parameter
	instead.

	* libnautilus-extensions/nautilus-icon-factory.c
	(str_has_svg_suffix), (nautilus_icon_factory_get_icon_for_file),
	(load_specific_image): Renamed suffix_is_scalable to
	str_has_svg_suffix to make it clearer what it does.
	
2000-05-02  Darin Adler  <darin@eazel.com>

	* check-FIXME.pl: Added -print as suggested by Morten Welinder
	<terra@diku.dk>.
	* check-config-h.pl: Added -print and fixed broken message as
	suggested by Morten Welinder <terra@diku.dk>.
	
	* libnautilus-extensions/nautilus-icon-factory.h:
	* libnautilus-extensions/nautilus-icon-factory.c
	(suffix_is_scalable): Simpler implementation.
	(get_themed_icon_file_path): Look for size-specific version of
	even .svg files. Although not so useful, it's not ridiculous to do so.
	(nautilus_icon_factory_get_icon_for_file): Fixed the twisted logic to
	be less twisted. Also changed the ".svg" extension check to use the
	common function suffix_is_scalable.
	(load_specific_image): Untwist logic here too, and note in the FIXME
	that both the .svg library and gdk-pixbuf are limiting us to file:
	URIs, although the gdk-pixbuf case is fixable without redoing the
	library by just using our utility functions.
	(load_image_for_scaling): Update for new size request structure which
	contains maximum sizes as well as nominal ones.
	(scale_image_and_rectangle), (revise_scale_factors_if_too_big),
	(scale_image_down_if_too_big): New helper functions for scaling.
	(load_image_scale_if_necessary): Take the maximum size into account.
	(get_image_from_cache): Use new size request structure and take the
	maximum size into account.
	(nautilus_icon_factory_get_pixbuf_for_icon): Changed to take maximum
	size parameters and pass them in to the underlying function.
	(icon_cache_key_hash): Include the maximum size in the hash.
	(icon_cache_key_equal): Check the maximum size too.
	(nautilus_icon_factory_get_pixbuf_for_file): Pass new max. size
	parameters to the nautilus_icon_factory_get_pixbuf_for_icon
	function.

	* libnautilus-extensions/nautilus-icon-container.c
	(nautilus_icon_container_update_icon): Pass new max. size
	parameters to the nautilus_icon_factory_get_pixbuf_for_icon
	function.
	
	* src/file-manager/fm-list-view.c
	(fm_list_view_get_emblem_pixbufs_for_file): Pass new max. size
	parameters to the nautilus_icon_factory_get_pixbuf_for_icon
	function.

2000-05-02  John Sullivan  <sullivan@eazel.com>

	* data/mime/.cvsignore,
	* data/mime/Makefile.am:,
	* data/mime/nautilus.keys: Removed files. Nautilus
	doesn't need to install the human-readable MIME
	descriptions any more because gnome-vfs does it.

	* configure.in,
	* data/Makefile.am: Removed build system fu that
	was installing nautilus.keys.

2000-05-01  Kjartan Maraas  <kmaraas@gnu.org>

	* libnautilus/nautilus-clipboard.c: Cosmetic change.
	* src/Makefile.am: Added -DGNOMELOCALEDIR to $INCLUDES.
	* src/ntl-main.c: Added calls to bindtextdomain() and 
	textdomain() to make the translations work.
	* components/help/hyperbola-main.c: Same here.
	* components/help/Makefile.am: Here as well. This should be
	done for any main() function in any module containing text
	to be translated.
		
2000-05-01  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-file-changes-queue.c:
	(nautilus_file_changes_consume_changes):
	Temporary workaround for an apparent codegen bug Carbamide
	was running into. (I'll need to track this down some more,
	this change makes the crash go away.)

	* src/file-manager/dfos-xfer-progress-dialog.c:
	* src/file-manager/dfos-xfer-progress-dialog.h:
	* src/file-manager/dfos-xfer.c:
	(dfos_xfer_progress_dialog_get_type), 
	(dfos_xfer_progress_dialog_new),
	(dfos_xfer_progress_dialog_new_file),
	(create_xfer_dialog),
	(fs_xfer), (handle_xfer_ok):
	Fix up the progress dialog so that it displays meaningful
	information while emptying the trash and moving files to
	trash.
	
2000-05-01  Ramiro Estrugo  <ramiro@eazel.com>

	* src/nautilus-gconf.c,
	  src/nautilus-gconf.h: Retired.  Not used or needed no more.

2000-05-01  Darin Adler  <darin@eazel.com>

	* check-config-h.pl: Wrote a script to check for files that forget
	to include <config.h> and optionally edit to add it.
	
	* src/nautilus-zoom-control.c (set_zoom_level): Fixed the bug
	number in a FIXME.

	* docs/style-guide.html: Added one more tip.

	* check-FIXME.pl: Use my newfound Perl knowledge to spruce it up.

	* components/help/converters/gnome-db2html2/gdb3html.c:
	* components/help/converters/gnome-db2html2/sect-elements.c:
	* components/help/converters/gnome-db2html2/sect-preparse.c:
	* components/help/converters/gnome-db2html2/toc-elements.c:
	* components/help/converters/gnome-info2html2/html.c:
	* components/help/converters/gnome-info2html2/main.c:
	* components/help/converters/gnome-info2html2/parse.c:
	* components/help/converters/gnome-info2html2/utils.c:
	* components/help/converters/gnome-man2html2/gnome-man2html.c:
	* components/help/hyperbola-filefmt.c:
	* components/help/hyperbola-nav-index.c:
	* components/help/hyperbola-nav-search.c:
	* components/help/hyperbola-nav-tree.c:
	* components/html/glibwww-callbacks.c:
	* components/html/glibwww-init.c:
	* components/html/glibwww-trans.c:
	* components/html/gnome-dialogs.c:
	* components/html/ntl-web-browser.c:
	* components/services/install/eazel-install-metadata.c:
	* components/services/install/eazel-install-protocols.c:
	* components/services/install/eazel-install-rpm-glue.c:
	* components/services/install/eazel-install-tests.c:
	* components/services/install/eazel-install-utils.c:
	* components/services/install/eazel-install-xml-package-list.c:
	* components/services/install/eazel-install.c:
	* components/services/install/helixcode-install-utils.c:
	* components/services/startup/eazel-register.c:
	* components/websearch/ntl-web-search.c:
	* helper-utilities/authenticate/nautilus-authenticate-fork.c:
	* helper-utilities/authenticate/nautilus-authenticate-pam.c:
	* helper-utilities/authenticate/nautilus-authenticate.c:
	* libnautilus-extensions/nautilus-bonobo-extensions.c:
	* libnautilus-extensions/nautilus-file-utilities.c:
	* libnautilus-extensions/nautilus-glib-extensions.c:
	* libnautilus-extensions/nautilus-link.c:
	* libnautilus-extensions/nautilus-mime-type.c:
	* libnautilus-extensions/nautilus-undo-transaction.c:
	* librsvg/art_rgba.c:
	* librsvg/art_rgba_svp.c:
	* librsvg/rsvg-bpath-util.c:
	* librsvg/rsvg-path.c:
	* librsvg/rsvg.c:
	* librsvg/test-rsvg.c:
	* nautilus-widgets/nautilus-caption-table.c:
	* nautilus-widgets/nautilus-password-dialog.c:
	* nautilus-widgets/nautilus-preferences-box.c:
	* nautilus-widgets/nautilus-preferences-dialog.c:
	* nautilus-widgets/nautilus-preferences-group.c:
	* nautilus-widgets/nautilus-preferences-item.c:
	* nautilus-widgets/nautilus-preferences-pane.c:
	* nautilus-widgets/nautilus-radio-button-group.c:
	* nautilus-widgets/test-nautilus-widgets.c:
	* nautilus-widgets/test-preferences.c:
	* src/file-manager/desktop-item.c:
	* src/file-manager/desktop-layout.c:
	* src/file-manager/desktop-menu.c:
	* src/nautilus-bookmarks-window.c:
	* src/nautilus-gconf.c:
	* src/nautilus-window-menus.c:
	* src/nautilus-window-toolbars.c:
	* src/nautilus-zoom-control.c
	* src/nautilus-zoomable-frame-svr.c:
	* src/ntl-app.c:
	* src/ntl-content-view.c:
	* src/ntl-main.c:
	* src/ntl-meta-view.c:
	* src/ntl-miniicon.c:
	* src/ntl-uri-map.c:
	* src/ntl-view-frame-svr.c:
	* src/ntl-view.c:
	* src/ntl-window-state.c:
	Added includes of <config.h>.

2000-05-01  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-text-item.c 
	* libnautilus-extensions/nautilus-icon-private.h
	(iti_event),
	(nautilus_icon_text_item_configure),
	(nautilus_icon_text_item_start_editing),
	(save_undo_snapshot_callback),
	(restore_from_undo_snapshot_callback):
	
	* libnautilus-extensions/nautilus-undo-manager.c
	(nautilus_undo_manager_remove_transaction),
	(nautilus_undo_manager_add_undo_transaction),
	(nautilus_undo_manager_add_redo_transaction), 
	(prune_undo_manager_list):
	Fixed bug in above functions where GList was not getting properly updated 		
	after an insert or remove operation.
	
	* src/nautilus-location-bar.c 
	(nautilus_location_bar_initialize_class):
	Added signal connection to the "changed" signal of the GtkEntry item.
	(editable_changed_callback): 
	Added undo operation functionality.
	Original location text is cached in anticipation of an undo operation.
	(nautilus_location_bar_initialize):
	Added two new memeber variables, undo_text and undo_registered.  undo_text is
	a char * that keeps a cache of the location text before editing.
	undo_registered is a boolean that is set when an undo can be registered.
	(nautilus_location_bar_set_location):
	undo_registered is set to FALSE and undo_text is updated. 
	(save_undo_snapshot_callback):
	Callback called to create undo transaction
	(restore_from_undo_snapshot_callback):
	Callback called to restore the location bar text.
	(destroy):
	undo_text is freed if it has been allocated.

2000-05-01  John Sullivan  <sullivan@eazel.com>

	Fixed bug 575 (Make Nautilus use gnome-vfs-mime)

	Converted all the (few) places where Nautilus code was 
	using the old gnome-libs MIME API to use the new gnome-vfs
	MIME API.

	* components/help/help-method.c (convert_file_to_uri):
	Use gnome_vfs_mime_type_of_file. This function should
	probably use NautilusFile rather than calling the MIME
	stuff directly, but I just couldn't get distracted into
	trying to improve it.
	
	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_get_type_as_string): 
	Use gnome_vfs_mime_description.
	* libnautilus-extensions/nautilus-icon-factory.c
	(nautilus_icon_factory_get_icon_name_for_regular_file):
	Use gnome_vfs_mime_get_value.


	* data/mime/nautilus.keys: Added a translation for
	"special/symlink" because it now starts showing up when
	using ftp:// locations. Perhaps we need to fix something
	in ftp also.

2000-05-01  Darin Adler  <darin@eazel.com>

	* HACKING: Added option for eog. (Sorry Maciej, I had done it
	before I got your mail.)
        * src/ntl-uri-map.c (make_oaf_query_with_known_mime_type),
        (make_oaf_query_with_uri_scheme_only): Improved comments and
	formatting a little bit more. (Sorry again, Maciej. You can
	merge it however you want!)

2000-05-01  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus/nautilus-zoomable.c: Remove FIXME comment for #681;
	everything wrong with this file seems to be separately recorded.

2000-05-01  Darin Adler  <darin@eazel.com>

	Another cut at icon positioning. Still much tweaking needed.

	* libnautilus-extensions/nautilus-icon-canvas-item.c
	(nautilus_icon_canvas_item_bounds): Got rid of "slop".
	* libnautilus-extensions/nautilus-icon-grid.c
	(get_icon_size_power_from_bounds), (get_icon_size_power):
	Get more grid space per icon now that slop is gone.
	(nautilus_icon_grid_add): Base grid space occupied on the size of
	the icon, not the side of the grid.
	(nautilus_icon_grid_get_position): Position icons horizontally
	centered in the space, but vertically at the top.

	Made the OAF queries more readable as I discussed with Maciej.
	
	* src/ntl-uri-map.c (extract_prefix_add_suffix),
	(mime_type_get_supertype), (uri_string_get_scheme):
	Make special-purpose string routines use common function instead.
	We must not optimize this kind of thing for speed, but rather for
	ease of reading the code.  This can be whittled down a little more
	and put into nautilus-string.h
	(make_oaf_query_with_known_mime_type),
	(make_oaf_query_with_uri_scheme_only):
	Reformatted and commented the OAF queries so they are easy to read.

2000-04-30  Darin Adler  <darin@eazel.com>

	* src/file-manager/fm-icon-view.c:
	Fixed a typo that prevented my Bonobo bug fix from working.
	We were still getting crashes when we switched views because
	the radio group was in "Setings", not "Settings".

2000-04-29  Christopher Blizzard  <blizzard@redhat.com>

	* components/mozilla/Makefile.am (INCLUDES): Add $(BONOBO_CFLAGS)
	so that we can pick up the path to the bonobo includes in case
	they are built somewhere else than the standard location.

2000-04-29  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in:
	* librsvg/Makefile.am:
	Check in patch suggested by Roberto Zunino
	<zunino@cli.di.unipi.it>.  Check for gdk-pixbuf in configure and
	use the flags set by that in the rsvg makefile.
	
2000-04-28  Gene Z. Ragan  <gzr@eazel.com>
	
	* libnautilus-extensions/nautilus-icon-text-item.c
	* libnautilus-extensions/nautilus-icon-text-item.h
	* libnautilus-extensions/nautilus-undo-manager-private.h
	Fixed the following FIXME bugs: 684 686 687
	Hooked up the undo mechanism to work properly with
	the renaming widget.

	* libnautilus-extensions/nautilus-undo-manager.c
	* libnautilus-extensions/nautilus-undo-manager.h
	Add configuration defaults to sets the UndoManager to 
	not use the redo functionality and sets the depth of
	the undo list to one transaction.
	(nautilus_undo_manager_enable_redo):
	Function to toggle on or off the ability to redo undone transactions.
	(nautilus_undo_manager_set_queue_depth):
	Function to set the max depth of the undo/redo queues
	(free_undo_manager_list_data):
	New utility function to clean up data in undo/redo list
	(prune_undo_manager_list):
	New utility function that prunes a set number of items from
	either the undo or redo list.
	(nautilus_undo_manager_add_undo_transaction):
	Manually insert an externally created undo transaction into
	the undo queue.
	(nautilus_undo_manager_add_redo_transaction):
	Manually insert an externally created undo transaction into
	the redo queue.

	* libnautilus-extensions/nautilus-undo-transaction.c
	* libnautilus-extensions/nautilus-undo-transaction.h
	(nautilus_undo_transaction_destroy):
	Added destructor function for a NautilusUndoTransaction object

	* src/nautilus-window-menus.c
	(update_undo_menu_item):
	Fixed bug 755.  Connected to signal sent by undo manager that informs
	Undo menu item sensitivity to be set.
	
2000-04-28  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c
	(background_destroyed_callback),
	(nautilus_connect_background_to_directory):
	gtk_signal_connect_while_alive wasn't quite up to the task,
	so I had to redo the fix from my last check-in.

2000-04-28  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/Makefile.am:
	Add missing .h files to SOURCES.
	
2000-04-28  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-background.c
	(nautilus_connect_background_to_directory): 
	Added code to disconnect when the background is destroyed.
	This was exposed by our lack of leaking now!
	
2000-04-28  Darin Adler  <darin@eazel.com>

	* ntl-window-msgs.c (nautilus_window_has_really_changed):
	Quick, kinda-hacky fix for the bug you'd see when you
	switch to "hardware:" and then do go-back.

2000-04-28  Darin Adler  <darin@eazel.com>

	* src/ntl-uri-map.c (async_get_file_info_text):
	Fix bug that prevents non-vfs URIs from working.
	Just need to initialize the async. handle to NULL.

2000-04-28  Darin Adler  <darin@eazel.com>

	This little check-in fixes the last April bug and maybe one or
	two leaks in Nautilus.

	* src/ntl-view.c (nautilus_view_destroy_client): To work around
	the circular reference problem in Bonobo, change a call to
	bonobo_object_unref to bonobo_object_destroy. This fixes the leak
	of the entire viewer each time.

	* src/file-manager/fm-directory-view.c (fm_directory_view_destroy):
	The FMDirectoryView does not own its view_frame. This is confusing
	and needs some reorganization, but it should not unref. It's actually
	the view_frame that owns the directory view despite the fact that
	it's created by the directory view and the directory view holds a
	reference to it! This bug prevented Maciej from doing the workaround
	the last time he tried it.

	* libnautilus-extensions/nautilus-file-changes-queue.c
	(nautilus_file_changes_queue_get),
	(nautilus_file_changes_consume_changes):
	A small cleanup. The global variable was getting in the way.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-main.c (main): Fix a dumbass mistake.  Take out some
	real code from inside an assert.
	
2000-04-28  Darin Adler  <darin@eazel.com>

	Some cleanup inspired by Maciej's check-in.
	
	* libnautilus-extensions/nautilus-directory-async.c
	(ready_callback_call),
	(nautilus_directory_call_when_ready_internal),
	(call_ready_callbacks):
	Made the fix so that call_when_ready works properly when a NULL
	directory is passed in.
	
	* libnautilus-extensions/nautilus-file.h:
	* libnautilus-extensions/nautilus-file.c
	(nautilus_file_call_when_ready): Fix for call_when_ready with
	a NULL file.
	(nautilus_file_ref), (nautilus_file_list_ref),
	(nautilus_file_list_copy): Filled out the operations on lists.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus-extensions/nautilus-gtk-extensions.c
	(nautilus_gtk_object_list_ref), (nautilus_gtk_object_list_copy):
	Filled out the operations on lists.
	
	* src/ntl-uri-map.c (got_metadata_callback): Factored out the
	call to async get_file_info to simplify the logic.
	(nautilus_navigation_info_new): Took out the check for NULL that
	Maciej mentioned in his notes below now that call_when_ready can
	handle things.
	(nautilus_navigation_info_cancel),
	(nautilus_navigation_info_free): Took out some excessive NULL
	checks when calling routines that work with NULL.

2000-04-28  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-content-view.c (nautilus_content_view_set_active): Fix a
	refcounting problem; make sure to unref the interface we
	query_local_interface for.

	* components/music/nautilus-music-view.oafinfo: Add "audio/x-mp3"
	as directory content type that satisfies the requirement so the
	music view activates automatically (the point of the below
	excercise). Netscape thinks the mime type for mp3's should be
	"audio/x-mpeg" but I am not going to argue.

	Achieved bugzilla tasks #701 and #108, plus did some refactoring
	of the big hairy `got_file_info_callback' function.

	* src/ntl-uri-map.h: add a `files' member to the
	NautilusNavigationInfo struct, a GList of NautilusFiles it
	contains in case it is a directory.
	
	* src/ntl-uri-map.c (got_file_info_callback): Factored out some
	code into separate functions and simplified the control flow. For
	each potential component, test if it matches the content
	requirements before adding it to the list of available content
	view components.

	(make_oaf_query_with_known_mime_type,
	make_oaf_query_with_uri_scheme_only): New function; breaks out the
	logic of constructing an oaf query when the mime type is known and
	unknown repsectively from `got_file_info_callback'.
	(make_oaf_query_with_known_mime_type): Remove the hack to try to
	explicitly exclude the music view.

	(file_list_to_mime_type_hash_table): New utility function; takes a
	GList of NautilusFiles and returns a hash table which has an entry
	for each mime type that at least one of thse files has. This is so
	that we can susequently test if any of the files on the list has a
	particular mime type in constant time.
	(server_matches_content_requirements): New fucntion. Returns true
	if the server record does not require specific content mime types,
	or if it does and the passed hash table contains at least one of
	those.

	(nautilus_view_identifier_new_from_oaf_server_info): New helper
	function to create a NautilusViewIdentifier directly from an
	OAF_ServerInfo record.

	(got_metadata_callback): Initialize the `files' field of the
	navinfo struct to a copy of the file list that
	`nautilus_directory_call_when_ready' gave us; ref all the
	NautilusFiles in this copy.
	(nautilus_navigation_info_new): Ask for the mime types of files in
	the directory as well as for the metadata keys we need.
	(nautilus_navigation_info_cancel): Only try to cancel if the
	navinfo actually has a directory, to avoid segfaulting.
	(nautilus_navigation_info_free): Free the files list. Free both
	this and the directory if and only if they are not NULL.

	
	* src/ntl-uri-map.c (nautilus_navigation_info_new): When
	navinfo->directory is null, call got_metadata_callback directly
	instead of calling `nautilus_directory_call_when_ready' to avoid
	segfaulting on protocols that gnome-vfs does not understand like
	`hardware:'. There is probably a way to fix this in
	`nautilus_directory_call_when_ready' but I did not want to mess
	with it.
	(got_file_info_callback): Renamed from `my_notify_when_ready'.

2000-04-27  Maciej Stachowiak  <mjs@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c: include
	<stdlib.h>, my compiler insists on it.

2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	Add a real check for pam.

	* acconfig.h:
	Add HAVE_PAM.
	
	* configure.in:
	Check for pam.
	
	* helper-utilities/authenticate/Makefile.am:
	Use $(PAM_LIBS) instead of hardcoding.

2000-04-27  John Sullivan  <sullivan@eazel.com>

	Fixed bug 660 (Need to publish menu positions for components to use)

	* libnautilus/nautilus-bonobo-ui.h:
	New file, contains #defines for Bonobo-style menu paths for all
	the menus & menu items in Nautilus that we promise components
	will exist.
	* libnautilus/Makefile.am: Include this new header file in library.
	
	* src/nautilus-window-menus.c: Extensive changes, too many to list
	every function. Replaced all the GnomeUIInfo mechanism with
	Bonobo-style menu creation, using the menu paths from
	nautilus-bonobo-ui.h. While I was in here, I also renamed some
	functions (especially xxx_cb -> xxx_callback), tweaked some text, 
	and used some more standard Gnome menu item pixmaps (not sure if I 
	like them or not yet).
	
	* src/ntl-window-private.h,
	* src/ntl-window.c:
	(nautilus_window_back_cb), (nautilus_window_forward_cb),
	(nautilus_window_up_cb), (nautilus_window_home_cb): Replaced
	these GtkWidget-callback style functions (formerly used
	by both menu items and toolbar buttons) with new NautilusWindow
	oriented ones nautilus_window_go_back, nautilus_window_go_forward,
	nautilus_window_go_up, and nautilus_window_go_home.
	(nautilus_window_allow_back), (nautilus_window_allow_forward),
	(nautilus_window_allow_up): replaced hardwired Bonobo menu paths
	with the new #defines.

	* src/nautilus-window-toolbars.c:
	Renamed some functions xxx_cb -> xxx_callback.
	(toolbar_back_callback), (toolbar_forward_callback),
	(toolbar_up_callback), (toolbar_home_callback): New GtkWidget-callback
	style functions used exclusively by the toolbar.
	
	* src/file-manager/fm-directory-view.h:
	Removed FM_DIRECTORY_VIEW_PATH_CLOSE and 
	FM_DIRECTORY_VIEW_PATH_SELECT_ALL, since callers should use
	the paths defined by Nautilus for these.
	
	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_real_merge_menus): Replaced special insider knowledge
	of menu positions with use of the new #defines. Also tweaked with the
	keyboard underscore shortcuts for some items.

2000-04-27  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c:
	Rewrite of the state machine. This adds the new feature that Maciej
	needs where you can call "call_when_ready" to get file attributes.
	
	* libnautilus-extensions/nautilus-directory-private.h:
	Added a file_list_monitored boolean to simplify the logic.
	
	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_destroy): Took advantage of file_list_monitored
	simplification.
	(nautilus_directory_call_when_ready),
	(nautilus_directory_cancel_callback): Tweaked the return_if_fail
	calls to match changes in the async.c file.
	(got_files_callback), (nautilus_self_check_directory):
	Added self-check code to test the new feature.
	
	* libnautilus-extensions/nautilus-string.h:
	* libnautilus-extensions/nautilus-string.c (nautilus_str_compare):
	Added a new function for use with things that take a GCompareFunc
	to avoid a function type cast.

2000-04-27  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-undoable.c
	* libnautilus-extensions/nautilus-undoable.h
	* libnautilus-extensions/nautilus-undo-manager.c
	* libnautilus-extensions/nautilus-undo-manager.h
	* libnautilus-extensions/nautilus-undo-transaction.c
	* libnautilus-extensions/nautilus-undo-transaction.h
	* libnautilus-extensions/nautilus-undo-manager-private.h
	Added architecture for undo mechanism.
	NautilusUndoManager maintains undo and redo queues of
	NautilusUndoTransactions as well as maintaining various state
	information pertinant to the user interface.
	NautilusUndoTransaction contains a transaction name and a list of
	NautilusUndoables. NautilusUndoable is a object that contains a
	pointer to an object and a GData object. The GData object
	contains named data that can be added and retrieved during an
	undo/ redo operation. The NautilusUndoable also emits signals to
	the object that enables it to perform the undo and redo
	operations. I will write up more complete documents when the code
	has matured.
	
	* libnautilus-extensions/nautilus-icon-container.c
	* libnautilus-extensions/nautilus-icon-container.h
	* src/file-manager/fm-icon-view.c
	Removed obsolete undo functions and callbacks. These were
	invalidated by the new undo mechanism.

	* src/ntl-main.c
	Added call to nautilus_undo_manager_initialize_global_manager() in
	main. This call initializes a Nautilus global undo manager. Also
	fixed some minor coding style issues.
	
	* nautilus-window-menus.c (edit_menu_undo_callback):
	Added callback to handle selection of Undo item form edit menu.
	Callback checks with Undo Manager for a current undo transaction
	and asks manager to perform an undo if there is one.

2000-04-27  Darin Adler  <darin@eazel.com>

	* MAINTAINERS: Changed to the new Nautilus list instead of the
	old secret list.
	
	* components/notes/ntl-notes.c (notes_load_metainfo):
	* src/file-manager/fm-directory-view.c
	(fm_directory_view_load_uri), (metadata_ready_callback):
	* src/ntl-uri-map.c (got_metadata_callback),
	(nautilus_navigation_info_new):
	Change calls to use new API, but not to use any of the new features,
	which are not yet implemented.
	
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-directory.c
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory-async.c
	* libnautilus-extensions/nautilus-file.c
	* libnautilus-extensions/nautilus-file.h:
	Added the new API and moved functions around a bit to prepare
	for the new feature needed by Maciej for getting a list of files.
	
	* libnautilus-extensions/nautilus-file-attributes.h:
	Added an attribute constant for MIME type.
	
2000-04-27  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/genpkg_list.example
	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-protocols.c
	* components/services/install/eazel-install-rpm-glue.c
	* components/services/install/eazel-install-types.h
	* components/services/install/eazel-install-xml-package-list.h
	* components/services/install/eazel-install-xml-package-list.c

	Cleaned up invalid variable names to conform to eazel coding standards.
	Added the genpkg_list option to create a package-list.xml from a
	colon delimited input file.  Created an example file of the input
	called genpkg_list.example.

2000-04-27  Darin Adler  <darin@eazel.com>

	More FIXME-to-bug work.
	
	* check-FIXME.pl: Fixed bug that happens when there are no
	outstanding FIXMEs (hooray!).
	
	* components/hardware/nautilus-hardware-view.c
	(get_RAM_description):
	* components/help/help-method.c (convert_file_to_uri),
	(transform_absolute_file):
	* components/history/ntl-history-view.c
	(hyperbola_navigation_history_select_row), (make_obj), (int):
	* components/html/Makefile.am:
	* components/html/main.c (pdsink_start), (url_requested_cb),
	(view_size_query_cb):
	* components/mozilla/nautilus-mozilla-content-view.c
	(nautilus_mozilla_content_view_load_uri):
	* components/music/nautilus-music-view.c
	(nautilus_music_view_initialize), (nautilus_music_view_destroy),
	(is_mp3_file), (fetch_song_info), (determine_attribute):
	* components/rpmview/nautilus-rpm-view.c
	(nautilus_rpm_view_initialize), (check_installed):
	* components/services/install/eazel-install-rpm-glue.c
	(install_new_packages):
	* components/services/install/eazel-install-types.h:
	* components/services/startup/eazel-register.c (xmlDoc):
	Added bug numbers to FIXMEs, writing bug reports as needed.

2000-04-27  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* configure.in
	* components/services/startup/nautilus-service-startup-view.c,
	* libnautilus-extensions/nautilus-directory-async.c,
	* libnautilus-extensions/nautilus-global-preferences.c,
	* libnautilus-extensions/nautilus-icon-canvas-item.c,
	* src/ntl-uri-map.c:

	Wrote bug reports for all FIXMEs in these files. With
	this checkin and Darin's next one, there should be no
	more FIXMEs in Nautilus without a bug report. 

2000-04-27  Joe Shaw <joe@helixcode.com>

	* components/rpmview/nautilus-rpm-view.c
	(nautilus_rpm_view_update_from_uri): Changed call of fdValidb
	to checking to ensure that file_descriptor != NULL. fdValid was
	removed from RPM 3.0.4 and this bit of code provides the same
	functionality. It'll build on 3.0.4-based systems now (like Red   
	Hat 6.2). Bad Red Hat for breaking reverse compatibility on a
	minor upgrade.

2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-uri-map.c (my_notify_when_ready): Quiet down the mjs
	debug noise for us mortals.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	Add authenticate helper utility to build.

	* Makefile.am:
	Add helper-utilities to build.

	* configure.in:
	Add helper-utilities and helper-utilities/authenticate to build
	using a conditional flag until better pam detection voodoo can be
	written.

	* helper-utilities: New dir.

	* helper-utilities/authenticate: New dir.  A simple utility to
	authenticate a user using PAM and execute a command on their
	behalf.  Still needs some work to be more useful.

	* helper-utilities/authenticate/nautilus-authenticate.h,
	  helper-utilities/authenticate/nautilus-authenticate.c,
	  helper-utilities/authenticate/nautilus-authenticate-pam.c,
	  helper-utilities/authenticate/nautilus-authenticate-fork.c:
	New files.  Code for authenticate helper utility.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	More 'make dist' fixes.  I missed the services dir.

	* components/services/install/Makefile.am:
	  Add missing .h files SOURCES.

	* components/services/startup/Makefile.am:
	  Add missing .h files SOURCES.

	* Makefile.am:
	Add nautilus.png to EXTRA_DIST.

2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	Add gnome panel .desktop file and logo.

	* nautilus.desktop: New panel .desktop file.
	* nautilus.png: New panel nautilus icon.
	* Makefile.am: Install the above 2.  Also install the
	  nautilus-clean.sh script.
	
	* src/run-nautilus: Add dumb script to run nautilus while we work
	  on the rogue process bugs.

	* src/Makefile.am: Install the above script.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	More 'make dist' fixes.  Let automake know about private headers
	so that the dist tarball will contain them.

	* components/help/Makefile.am,
	* components/mozilla/Makefile.am,
	* components/rpmview/Makefile.am,
	* components/sample/Makefile.am:
	Add .h files to SOURCES.

	* libnautilus/Makefile.am:
	Add missing nautilus-zoomable.h to HEADERS.
	Add missing private .h files SOURCES.
	
	* libnautilus-extensions/Makefile.am:
	Add missing .h files to HEADERS.
	Add missing private .h files SOURCES.
	Add missing idl sources top EXTRA_DIST.
	
	* nautilus-widgets/Makefile.am:
	Add missing nautilus-widgets-self-check-functions.h to SOURCES.
	
	* src/Makefile.am:
	Add missing nautilus.h to SOURCES.
	
2000-04-27  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/Makefile.am:
	Add .h files to la_SOURCES to make 'make dist' happy.
	
2000-04-27  Maciej Stachowiak  <mjs@eazel.com>

	Fix bugzilla task #106:

	* src/ntl-uri-map.c (mime_type_get_supertype,
	uri_string_get_scheme): Helper functions for generating the
	OAF queries.
	(my_notify_when_ready): Replaced the hardcoded mess with calls to
	a couple of OAF queries. This function still needs major
	additional refactoring. I have also introduced some FIXMEs which
	call attention to problems that were already there in the code in
	most cases.

	* components/hardware/nautilus-hardware-view.oafinfo,
	components/help/hyperbola.oafinfo,
	components/html/ntl-web-browser.oafinfo,
	components/mozilla/nautilus-mozilla-content-view.oafinfo,
	components/music/nautilus-music-view.oafinfo,
	components/notes/ntl-notes.oafinfo,
	components/rpmview/nautilus-rpm-view.oafinfo,
	components/sample/nautilus-sample-content-view.oafinfo,
	components/services/startup/nautilus-service-startup-view.oafinfo,
	components/websearch/ntl-web-search.oafinfo, src/nautilus.oafinfo:
	Added all relevant general, bonobo and nautilus properties to
	content views; some to meta views.	

2000-04-26  Andy Hertzfeld <andy@eazel.com>
	
	added an "About Nautilus" HTML file to the novice home directory
	
	* data/top/About.html: new about file
	* data/top/Makefile.am: added new file
	* libnautilus-extensions/nautilus-file-utilities:
	installed a custom icon for the about file
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c:
	(fs_xfer):
	Fixed a memory thrasher Darin ran into.
	The code in question was just asking for trouble to begin with.
	 
2000-04-26  Andy Hertzfeld <andy@eazel.com>

	fixed bug #683, experts shouldn't get suffix stripped from link file
	
	* libnautilus-extensions/nautilus-global-preferences.h:
	added preference for show_real_file_names
	* libnautilus-extensions/nautilus-global-preferences.c:
	made the user level code set show_real_file_names appropriately
	* libnautilus-extensions/nautilus-link.c:
	use the above preference to control suffix stripping
	 
2000-04-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory.c
	(make_uri_canonical), (is_canonical_uri),
	(nautilus_directory_get), (get_parent_directory_if_exists),
	(nautilus_self_check_directory):
	Added hack for handling "file:/" vs. "file:///" and put a little
	framework in place to help us deal with caonical URIs later.
	
	* src/file-manager/fm-directory-view.c (display_pending_files):
	Fixed a FIXME bug #.

2000-04-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(nautilus_directory_schedule_dequeue_pending_idle),
	(new_files_callback), (nautilus_directory_get_info_for_new_files):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c (call_files_added),
	(call_files_added_free_list) (call_files_changed),
	(call_fiels_changed_free_list), (call_get_file_info_free_list),
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Implemented async. lookup of information about newly arrived
	files. Changed moved files to work without a new call to get
	file information. Fixed some storage leaks.

	* libnautilus-extensions/nautilus-directory-async.c
	(empty_close_callback), (metafile_read_close),
	(nautilus_metafile_read_cancel), (metafile_read_callback),
	(metafile_read_some), (metafile_read_open_callback),
	(metafile_write_callback): Fixed bug where we were not closing
	files when cancelling.  This requires a bug fix in GNOME VFS to be
	effective.

	* libnautilus-extensions/nautilus-directory-async.c
	(dequeue_pending_idle_callback):
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_destroy):
	Use new functions in GNOME VFS instead of our own.
	
	* components/html/ntl-web-browser.c (main): Fixed a warning.
	* docs/nautilus.faq: Tweak.

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* libnautilus/nautilus-view-frame.c,
	* libnautilus/nautilus-zoomable.c,
	* libnautilus-extensions/nautilus-icon-text-item.c,
	* libnautilus-extensions/nautilus-link.c,
	* libnautilus-extensions/nautilus-mime-type.c:

	Wrote bug reports for all FIXMEs in these files. Down to 
	45 in Nautilus with no bug report.

2000-04-26  Rebecca Schulman <rebecka@eazel.com>

	Fixed bug #99:  Implemented copy, paste, clear, and cut for text
	Added new files nautilus-clipboard.c,h which contains clipboard
	functionality.  All components with text widgets should use this
	code.  It can just be copied from any existing sample code
	(see ntl-notes.c in the notes component)
	The frame cut, copy and paste stuff is now happy when there is a 
	widget in focus.

	Added
	* libnautilus/nautilus-clipboard.c
	* libnautilus/nautilus-clipboard.h

	Modified
	* src/nautilus-window-menus.c  (turned on clear, fixed up callbacks for
	  cut, copy, and paste buttons)
	* components/notes/ntl-notes.c (Clipboard activated notes text box)
	* components/websearch/ntl-web-search.c (Clipboard activated the search box)

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* check-FIXME.pl: Added the three desktop-drawing files
	that aren't included in the build to the list of files
	in which to ignore FIXMEs.
	
	* nautilus-widgets/nautilus-caption-table.c,
	* nautilus-widgets/nautilus-preferences-group.c,
	* nautilus-widgets/nautilus-preferences.c,
	* src/file-manager/dfos-xfer-progress-dialog.c,
	* src/file-manager/dfos-xfer.c:

	Wrote bug reports for all FIXMEs in these files. Down to 
	54 in Nautilus with no bug report.

2000-04-26  Andy Hertzfeld <andy@eazel.com>

	fixed bug #603, set index panel background image via drag and drop
	
	* libnautilus-extensions/nautilus-background.c:
	fixed bug in nautilus_background_draw_flat_box, where it wasn't
	checking for the image case when deciding to let the parent do
	the drawing.
	* src/ntl-index-panel.c:
	fixed bug where it was losing the background image metadata when
	setting the background color.  Fixed by reading both before
	setting either.
	
2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.
	
	* src/nautilus-bookmarks-window.c,
	* src/nautilus-location-bar.c,
	* src/nautilus-window-menus.c,
	* src/nautilus-zoom-control.c,
	* src/ntl-main.c,
	* src/ntl-uri-map.c:

	Wrote bug reports for all FIXMEs in these files. Down to 
	71 in Nautilus with no bug report.

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* src/nautilus-index-title.c,
	* libnautilus-extensions/nautilus-gdk-extensions.h,
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(select_font): Moved this function to gdk_extensions
	and renamed it nautilus_get_largest_fitting_font.

	* src/nautilus-index-tabs.c,
	* src/nautilus-index-title.c,
	* src/file-manager/fm-list-view.c,
	* src/file-manager/fm-properties-window.c:
	Wrote bug reports for all (other) FIXMEs in these files. Down to 
	81 in Nautilus with no bug report.

2000-04-26  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	made dropping images on the index panel set the background tile to
	the dropped image.  There's an underlying bug in nautilus-background
	that prevents it from drawing unless a gradient background has been
	previously set up; Darin or I will fix that soon.
	
2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* src/file-manager/fm-directory-list.c: Removed this
	unused file rather than dealing with its FIXMEs (at
	Darin's suggestion).
	
	* src/file-manager/fm-directory-view.c,
	* src/file-manager/fm-icon-view.c:
	Wrote bug reports for all FIXMEs in these files. Down to 90
	in Nautilus with no bug report.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* doc/nautilus.faq: Added faq.
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-directory-view.c:
	Change a FIXME bug number after getting rid of a duplicate bug.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/Makefile.am: Install .h files in the
	right place.

	* nautilus.spec.in: New file.  First try at a rpm spec.  Not
	expected to quite work yet.

	* .cvsignore: Ignore the generated spec.

	* Makefile.am,
	  configure.in: Add nautilus.spec file to build.

2000-04-26  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(nautilus_directory_file_monitor_add):
	Fixed an assert that was breaking "make check".
	
	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_moved):
	Updated bug numbers on FIXMEs in here.

2000-04-26  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* libnautilus-extensions/nautilus-directory.c,
	* libnautilus-extensions/nautilus-file-utilities.c,
	* libnautilus-extensions/nautilus-file.c,
	* libnautilus-extensions/nautilus-icon-factory.c:

	Wrote bug reports for all FIXMEs in these files.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-password-dialog.c,
	  nautilus-widgets/nautilus-password-dialog.h,
	  test-nautilus-widgets.c: Add a password dialog widget.  It
	doesnt do the actual authentication, just the widgetry.

	* nautilus-widgets/test-nautilus-widgets.c: Add new test for
	password dialog, and properly call gnome_init() instead of
	gtk_init() to prevent imlib braindamage. 

	* nautilus-widgets/nautilus-caption-table.c: Style dumbness.
	
2000-04-26  Ian McKellar  <yakk@yakk.net>

	* components/hardware/nautilus-hardware-view.c:
	Made the hardware view detect all the CPUs in the system and 
	display an icon for each.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-caption-table.c,
	  nautilus-widgets/nautilus-caption-table.h,
	  test-nautilus-widgets.c: Add a caption table widget which i will
	later use for a password prompt dialog.
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* librsvg/test-rsvg.c:
	Make it build:
	Add a workaround const cast for poptGetContext that thinks it's using
	const properly.
	
2000-04-26  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/fm-directory-view.c
	* src/file-manager/fm-directory-view.h:
	(bonobo_menu_open_in_new_window_cb), (bonobo_menu_delete_cb),
	(bonobo_menu_duplicate_cb), (fm_directory_view_get_model),
	(fm_directory_view_delete_with_confirm), (append_uri_one),
	(fm_directory_duplicate_selection), (compute_menu_item_info),
	(fm_directory_view_real_append_selection_),
	(fm_directory_view_real_merge_menus),
	(fm_directory_view_real_update_menus), (free_file_by_uri_map),
	(fm_directory_view_get_context_menu_index):
	Added "Move to Trash" and "Empty Trash" menu items.
	Disabled the existing Delete code (I'll scavenge it later to implement
	Delete as a fallback.)
	
	* src/file-manager/dfos-xfer.h:
	* src/file-manager/dfos-xfer.c (file_operation_alert), (fs_xfer),
	(get_parent_make_name_list), (fs_move_to_trash):
	Add move to trash and empty trash calls.


	* libnautilus-extensions/nautilus-file-changes-queue.c
	(nautilus_file_changes_queue_get_change),
	(nautilus_file_changes_consume_changes):
	Fix a problem with nautilus_file_changes_consume_changes getting called
	when there is no change allocated yet.

	* libnautilus-extensions/nautilus-directory.c
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Got rid of old debugging code.

2000-04-26  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-clean.sh: Give this thing a -q flag to quiet down noise.

2000-04-26  J. Shane Culpepper  <pepper@eazel.com>
	*components/services/install/eazel-install.c
	*components/services/install/Makefile.am
	*components/services/install/eazel-install-metadata.c
	*components/services/install/eazel-install-metadata.h
	*components/services/install/eazel-install-protocols.h
	*components/services/install/eazel-install-protocols.c
	*components/services/install/eazel-install-rpm-glue.c
	*components/services/install/eazel-install-rpm-glue.h
	*components/services/install/eazel-install-tests.h
	*components/services/install/eazel-install-tests.c
	*components/services/install/eazel-install-utils.c
	*components/services/install/eazel-install-utils.h
	*components/services/install/eazel-install-xml-package-list.h
	*components/services/install/eazel-install-xml-package-list.c
	*components/services/install/helixcode-install-utils.c
	*components/services/install/helixcode-install-utils.h
	Adding the new files for eazel-install.  Basically the same as before
	but broken up better for further development.

2000-04-26  J. Shane Culpepper  <pepper@eazel.com>

	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-xml.h
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-rpm.h
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-debug.h
	* components/services/install/eazel-install-lib-util.h
	* components/services/install/eazel-install-lib-util.c

	Removing current installer in order to checkin the new structure

2000-04-25  Ramiro Estrugo  <ramiro@eazel.com>

	Simplified preferences api by letting gconf do most of the work.
	Removed usage of global preferences from everywhere.  There is no
	longer a global preferences object.  All preference peek/poke
	operations are done through a gconf client thing.

	* components/history/ntl-history-view.c:
	(main): Call nautilus_preferences_initialize()

	* libnautilus-extensions/nautilus-global-preferences.c:
	Removed usage of global preferences.

	* libnautilus-extensions/nautilus-icon-container.c:
	Remove usage of unneeded global preferences.

	* libnautilus-extensions/nautilus-icon-factory.c
	Remove usage of unneeded global preferences.

	* libnautilus-extensions/nautilus-list.c:
	Remove usage of unneeded global preferences.

	* nautilus-widgets/nautilus-preference.c
	  nautilus-widgets/nautilus-preference.h:
	Remove all default_value related crap.  Not needed no more.  Let
	gconf worry about default values.

	* nautilus-widgets/nautilus-preferences-group.c,
	  nautilus-widgets/nautilus-preferences-group.h:
	(nautilus_preferences_group_add_item): 
	No longer need to pass in preferences.

	* nautilus-widgets/nautilus-preferences-item.c,
	  nautilus-widgets/nautilus-preferences-item.h:
	No longer need to store a reference to a preferences object in our
	class.  Also,  no longer need to pass in preferences to any
	function.

	* nautilus-widgets/nautilus-preferences-pane.c,
	  nautilus-widgets/nautilus-preferences-pane.h:
	(nautilus_preferences_pane_add_item_to_nth_group): No longer need
	to pass in preferences.

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h:
	Remove the NautilusPreferences class.  Gconf does the thinking for
	preferences now and there is no need to divide things up by
	domain - thus no need for multiple preference objects.  The api
	was changed to reflect this.  All preferences peek/poke operations
	go through a global gconf_client thing.

	Removed the storing and usage of a value.  Gconf and only it
	stores values for preferences.

	Use gconf for callback notifications.

	* nautilus-widgets/test-nautilus-widgets.c: Update for the above
	changes.
	
	2000-04-25  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-clean.sh: Return 0 at the end of the script so that it
	can be used like this: nautilus-clean.sh && ./src/nautilus

	* src/nautilus-window-menus.c:
	(use_eazel_theme_icons_cb): No longer need to use global
	preferences. 

	* src/ntl-main.c:
	(main): Call nautilus_preferences_initialize, not
	nautilus_preferences_init.
	
	* src/ntl-uri-map.c:
	(add_meta_view_iids_from_preferences): No longer need to use
	global preferences.  Also, changed the default value passed in to
	FALSE so that only meta views that are explicitly turned on
	(somewhere else) show up.

	* src/ntl-window-state.c:
	(nautilus_window_set_initial_state): No longer need to use
	global preferences.  

	* src/file-manager/fm-directory-view.c:
	(fm_directory_view_initialize): No longer need to use
	global preferences.  
	
	* src/file-manager/fm-icon-text-window.c:
	(changed_attributes_option_menu_cb), (create_icon_text),
	(fm_icon_text_window_destroy_cb),
	(fm_get_text_attribute_names_preference_or_default): No longer
	need to use global preferences.  
	
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_initialize), (fm_icon_view_destroy), : No longer
	need to use global preferences.  

2000-04-25  Darin Adler  <darin@eazel.com>

	This change requires a new gnome-vfs.

	* HACKING: Updated URL for popt.
	
	* components/rpmview/nautilus-rpm-view.c:
	(nautilus_rpm_view_update_from_uri):
	Changed to use FD_t for real instead of casting a pointer to a
	raw file descriptor to it.

	* libnautilus-extensions/nautilus-directory-async.c:
	Told it to load 32 items at a time instead of 1.
	I think it's time we try this. It seems to work.

	* src/ntl-uri-map.c (my_notify_when_ready),
	(got_metadata_callback): Change to use the new version of
	async. get_file_info.

2000-04-25  Andy Hertzfeld <andy@eazel.com>

	made drag and drop to and from the location bar work properly
	
	* src/nautilus-location-bar.c:
	changed the exported drag action to GDK_ACTION_LINK, as well as making
	it accept links.  Fixed crashes in drag_data_get by referencing the
	actual location bar instead of the event box, and by not destroying
	the result from gtk_entry_get_text, since it's not a copy.  Made it
	actually go to the dropped in uri by emitting the location changed
	signal.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	* data/mime/nautilus.keys
	
	Removed [en_US] from file-type human-readable descriptions.
	Added text explaining how to add a localized description.
	This fixes problem where if your language variable isn't
	set you get raw MIME types instead of human-readable descriptions.	

2000-04-25  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* libnautilus-extensions/nautilus-icon-container.c,
	* libnautilus-extensions/nautilus-icon-dnd.c:
	Wrote bug reports for all FIXMEs in these files.

2000-04-25  J. Shane Culpepper  <pepper@eazel.com>

	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-debug.c

	Added command line otions to set remote server and local download
	directory.  Did more cleaning and testing of the automatic http
	download options.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	More FIXME-to-bug work.

	* libnautilus-extensions/nautilus-list.c,
	* libnautilus-extensions/nautilus-list-column-title.c:
	Wrote bug reports for all FIXMEs in these files.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	Started going through the FIXMEs adding bug reports
	and fixing some trivial ones. 14 down, 152 Nautilus
	FIXMEs to go.

	* src/ntl-index-panel.c:
	Wrote bug reports for all FIXMEs in this file.
	
	* src/ntl-window-msgs.c,
	* src/ntl-window-private.h,
	* src/ntl-window.c:
	(view_menu_switch_views_callback), 
	(nautilus_window_load_content_view_menu): Moved functions from
	ntl-window-msgs.c to ntl-window.c. Updated private header file
	as necessary.
	
	Wrote bug reports for all other FIXMEs in these files.

2000-04-25  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	removed debugging statement that was accidentally checked in and
	fixed glitch where the title tab was a bit separated from the view
	
2000-04-25  Andy Hertzfeld <andy@eazel.com>

	fixed bug 519: dead space in sidebar
	
	* src/ntl-index-panel.c:
	removed set_usize call that was setting the meta-views to a fixed size;
	instead, set the expand and fill parameters to the box pack call to
	true, so the metaview is sized to fill the available space
	
	fixed bug 362: tab color is settable but not remembered
	
	* libnautilus-extensions/nautilus-metadata.h:
	added new metadata tags for the main tab and title tab colors
	* src/nautilus-index-tabs.c,h:
	added nautilus_index_tabs_set_color to set the tab color
	* src/ntl-index-panel.c:
	set the metadata in receive_dropped_color and set the tab color
	from the stored metadata in index_panel_update_info
	
2000-04-25  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-rpm.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-xml.h
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-util.h
	* components/services/install/eazel-install-lib-util.c
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-debug.h

	Adding http fetch of remote rpm files.  Minor cleanups.  Adding credit
	to Joe Shaw <joe@helixcode.com> for portions of the current prototype.
	This should have been done at the very beginning.  The idea for using
	gnet and large chunks of the current xml parsing come from his work on
	the Helix Code install/updater.

2000-04-25  John Sullivan  <sullivan@eazel.com>

	Fixed part of bug 556 (nautilus_file_can_rename returns
	TRUE for /root, but shouldn't). Only remaining issue is
	the no-nautilus-file-for-/ problem, which is already written
	up separately.
	
	Fixed bug 546 (Folders/files without read permissions should
	not be viewable).
	
	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_denies_access_permission): New private
	function that checks permissions, including checking
	whether the current user is the owner or in the group
	of the queried file. If permissions aren't valid, returns
	FALSE.
	(nautilus_file_can_read), (nautilus_file_can_write),
	(nautilus_file_can_execute): New public functions that
	use nautilus_file_denies_access_permission to determine
	which access permissions the current user has. They return
	TRUE if permissions aren't valid, so callers still have to
	be prepared to handle failures.
	(nautilus_file_can_rename): Now calls nautilus_file_can_write
	on the parent directory. Formerly it was just checking the
	permission flags directly, ignoring whether the current user
	was the owner or not. This fixes part of bug 556.
	
	* src/ntl-window-msgs.c:
	(handle_unreadable_location): New private function, puts up
	an alert if the user tries to switch to an unreadable location.
	(nautilus_window_request_location_change): Try 
	handle_unreadable_location before starting up the state transition.
	This fixes bug 546.
	
	* src/file-manager/fm-error-reporting.c: 
	(fm_report_error_renaming_file): Add missing _()'s around messages.

2000-04-25  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory-async.c
	(metafile_read_complete): Re-removed mismerged assert
	from Andy's change.
	* libnautilus-extensions/nautilus-directory-private.h:
	Organized the header a bit.

2000-04-25  Ettore Perazzoli  <ettore@helixcode.com>

	* libnautilus/Makefile.am
	(nautilus_view_component_idl_stamp): Use `$(srcdir)' in
	`nautilus_view_component_idl_sources' to make sure compilation
	works with builddir != srcdir.

2000-04-24  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-uri-map.c (my_notify_when_ready): Updated for OAF-ized
	EOG.

2000-04-24  Darin Adler  <darin@eazel.com>

	* components/music/nautilus-music-view.c
	(nautilus_music_view_update_from_uri): Spacing tweak.
	
	* libnautilus-extensions/Makefile.am:
	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-directory-async.c:
	* libnautilus-extensions/nautilus-file.c:
	Moved half of nautilus-directory.c into a new file as a first step
	in cleaning up the state machine a bit.

2000-04-24  Andy Hertzfeld <andy@eazel.com>

	changed the location of the novice home directory, and gave it
	a custom icon
	
	* libnautilus-extensions/nautilus-file-utilities.c:
	renamed routines from "top" to "main", and changed the install location
	from ~/.nautilus/top to ~/Nautilus, and set a custom icon for it
	* libnautilus-extensions/nautilus-file-utilities.h:
	changed nautilus_user_top_directory to nautilus_user_main_directory
	* libnautilus-extensions/nautilus-directory.c
	disabled assert that was firing due to async metadata reading, but
	tagged it with a FIXME so we can put it back when the framework is
	completed
	* libnautilus-extensions/nautilus-global-preferences.c:
	made it use newly renamed routine to access directory
	* icons/nautilus-logo.png:
	added new icon for the novice home directory
	* icons/Makefile.am:
	added new icon to build
	
2000-04-24  J. Shane Culpepper  <pepper@eazel.com>

	* configure.in
	* components/services/install/Makefile.am
	Adding a gnet configure option to remove hardcoded makefile references.

2000-04-24  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-grid.c:
	Refactored the grid to use a variable-size grid that sizes itself
	to the items in the grid.
	
	* libnautilus-extensions/nautilus-file-utilities.c
	(nautilus_user_top_directory): Formatting tweak.
	
	* libnautilus-extensions/nautilus-gtk-extensions.c
	(nautilus_pop_up_context_menu): Got rid of gpointer cast, since
	George's "find bad casts" grep found it and it's not needed.
	
	* nautilus-widgets/test-preferences.c: Got rid of gpointer cast,
	since George's "find bad casts" grep found it and it's not needed.

2000-04-24  Darin Adler  <darin@eazel.com>

	* components/rpmview/Makefile.am:
	* components/services/install/Makefile.am:
	Fixed a few things in these make files. There's still a lot to be fixed.
	The most important fix was to add OAF_CFLAGS and OAF_LIBS. Without that
	the build was failing. But these files still have a hard-coded
	/usr/include path for librpm.

2000-04-24  J. Shane Culpepper  <pepper@eazel.com>

	* HACKING
	Updating hacking to reflect the new gnet dependency.

2000-04-24  Andy Hertzfeld <andy@eazel.com>

	changed link file suffix to .link
	
	* data/top/Computer-ntl.xml: removed file
	* data/top/Computer.link: new file
	* data/top/Makefile.am: adjusted accordingly
	* data/top/Services-ntl.xml: removed file
	* data/top/Services.link: added file
	* libnautilus-extensions/nautilus-link.c,h:
	changed suffix from "ntl-link" to "link"
	
	made links more transparent in list view
	
	* libnautilus-extensions/nautilus-file.c:
	make nautilus_file_get_string_attribute know about links
	* src/file-manager/fm-directory-view.c:
	map filename for links in status bar	
	
	added hardware view component for novice home directory.  Use /proc as source of info,
	but will probably move to libgtop
	
	* configure.in: added hardware view component's directories
	* nautilus-clean.sh: added component to list to be cleaned
	* components/Makefile.am: added hardware view component
	* components/hardware/.cvsignore: ignore generated files
	* components/hardware/Makefile.am: makefile for new component
	* components/hardware/main.c: standard component bonobo glue
	* components/hardware/nautilus-hardware-view.c: the actual code
	* components/hardware/nautilus-hardware-view.h: definitions for the component
	* components/hardware/nautilus-hardware-view.oafinfo: activation file
	* components/hardware/icons/.cvsignore: ignore generate files
	* components/hardware/icons/Makefile.am: icons to use in the hardware view
	* components/hardware/icons/cpu.png: cpu image
	* components/hardware/icons/memory_chip.gif: memory image
	* src/ntl-uri-map.c: we still have to kludge here to add new protocols
	
	* components/rpmview/nautilus-rpm-view.c:
	changed default background color of package view
	
2000-04-23  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install.c
	* components/services/install/Makefile.am
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-xml.h

	Added the http fetch of a package list from a remote server. Still 
	need to add http fetch of the rpm files.

2000-04-23  J. Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-xml.h
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-debug.h
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-rpm.h
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib-util.h
	* components/services/install/eazel-install-lib-util.c

	Broke up eazel-install-lib.h to appropriate headers for each source
	file.  Did a little cleaning so that functions are more modular. 
	Setting everything up so that lib functions can be moved to a separate
	services library down the road.

2000-04-23  Martin Baulig  <martin@home-of-linux.org>

	* configure.in: Check for -lrpm and its dependency libs.
	On success, define HAVE_RPM and AC_SUBST(RPM_LIBS).
	Added BUILD_RPMVIEW_COMPONENT automake conditional.
	* acconfig.h (HAVE_RPM): Added.

	* components/Makefile.am: Conditionally compile rpmview.

	* components/rpmview/Makefile.am: Use $(RPM_LIBS) rather than
	-lrpm so we get the correct dependency libs such as -lgz2.

2000-04-22  J. Shane Culpepper  <pepper@eazel.com>
	
	* libnautilus-extensions/libnautilus-extensions.h
	Fixing build bustage in components/help.  The header was pointing to
	files in libnautilus instead of libnautilus-extensions.

2000-04-21  Gene Z. Ragan  <gzr@eazel.com>
	
	* libnautilus-extensions/nautilus-icon-canvas-item.c
	* libnautilus-extensions/nautilus-icon-canvas-item.h
	(nautilus_icon_canvas_item_get_max_text_width):
	Return value of MAX_TEXT_WIDTH constant.  Used is positoning the rename
	text widget.

	* libnautilus-extensions/nautilus-icon-container.c
	Added signal "icon_text_edit_occurred" called when the text rename widget
	recieves some sort of edit, such as a keyboard entry.
	(rename_text_dirty):  Returns boolean indicating edit state of
	text in rename widget.  Used in undo operation.
	(text_edited_callback):  Signal callback called when NautilusIconTextItem
	text is edited.
	(nautilus_icon_container_start_renaming_selected_item):  Fixed positioning
	code to address bug #543
	(nautilus_icon_container_undo_renaming_selected_item):  Added simple undo
	code.  This needs to be replaced with a global undo system.

	* libnautilus-extensions/nautilus-icon-text-item.c
	(iti_paint_text):  Fixed drawing of i-beam to address bug #506
	(iti_event): Added keyboard handling for simple undo
	(nautilus_icon_text_item_get_margins):  Returns values of MARGIN_X and
	MARGIN_X constants.  Used when positioning text item in canvas.

	* src/file-manager/fm-directory-view.c
	Moved menu item title constants to header file.  This is needed so
	FMIconView can get menu position paths when placing items in the
	bonobo and contect menus.  Renamed the constants to be specific to
	FMDirectoryView.
	(fm_directory_view_get_context_menu_index):  Added function to return
	index of requested menu item.
	
	* src/file-manager/fm-icon-view.c
	(fm_icon_view_icon_text_edit_callback):  Callback that connect to
	NautilusIconContainer signal.
	(undo_rename_icon_callback): Added simple undo functionality.
	(insert_one_context_menu_item): Added function to insert context menu
	add a specific index.
	Fixed bug #499, Rename menu in bad place in context menu.

2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	* components/history/ntl-history-view.c:
	Yank rogue puts()

2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	* components/history/ntl-history-view.c:
	Call nautilus_preferences_init to make sure gconf is in business
	before we call it.

2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	Switched us to use gconf instead of gnome_config.  There is still
	lots of crufty preferences code that can be simplified a lot,
	since gconf does a lot of work for us.

	* components/help/Makefile.am
	* components/history/Makefile.am
	* components/html/Makefile.am
	* components/music/Makefile.am
	* components/notes/Makefile.am
	* components/rpmview/Makefile.am
	* components/sample/Makefile.am
	* components/services/install/Makefile.am
	* components/services/startup/Makefile.am
	* components/websearch/Makefile.am
	* nautilus-widgets/Makefile.am
	Add GCONF_CFLAGS and GCONF_LIBS where needed.

	* nautilus-widgets/nautilus-preference.c:
	Removed a rogue unused include.

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h:
	Straight forward switch from gnome_config api to gconf api.
	(gnome_config_make_string):  Retired, cause thankfully we dont
	need to make up dumb strings with a default value appened to the
	end. All praise gconf.
	(nautilus_preferences_init): Add a init function to make sure
	gconf is properly initialized.  This needs some cleanup wrt the
	global preferences crap.  Im planning to clean that up in my next
	checkin.

	* nautilus-widgets/test-nautilus-widgets.c:
	Fixed for gconf changes.

	* src/ntl-main.c:
	Call nautilus_preferences_init to make sure gconf is in business
	before we call it.
	
2000-04-21  Ramiro Estrugo  <ramiro@eazel.com>

	* src/ntl-window-state.h,
	  src/ntl-window-state.c: (nautilus_window_save_state)
	(nautilus_window_load_state): Retired these two old and unused
	functions.  We dont use gnome_config to store metaview state no
	more.
	
2000-04-20  Darin Adler  <darin@eazel.com>

	* components/history/ntl-history-view.c
	(hyperbola_navigation_history_notify_location_change):
	Fixed a typo that was causing the history view to fail.
	
	* components/music/nautilus-music-view.c
	(nautilus_music_view_initialize_class),
	(nautilus_music_view_initialize), (setup_title_font),
	(nautilus_music_view_realize):
	Changed to use new nautilus_gtk_widget_set_font_by_name
	and got rid of the old realize hack.
	
	* components/rpmview/nautilus-rpm-view.c
	(nautilus_rpm_view_initialize):
	Added a FIXME about how it's bad to hard-wire a font.
	
	* components/services/startup/nautilus-service-startup-view.c
	(setup_title_font), (setup_form_title),
	(nautilus_service_startup_view_initialize),
	(nautilus_service_startup_view_realize),
	(nautilus_service_startup_view_load_uri):
	Changed to use new nautilus_gtk_widget_set_font_by_name
	and got rid of the old realize hack.
	
	* libnautilus-extensions/nautilus-gtk-extensions.h:
	* libnautilus-extensions/nautilus-gtk-extensions.c
	(nautilus_gtk_style_set_font): Made public.
	(nautilus_gtk_widget_set_font): Added comments and checks on
	the parameters.
	
	* libnautilus-extensions/nautilus-icon-container.c (relayout),
	(idle_handler), (nautilus_icon_container_move_icon),
	(world_width_changed), (end_stretching), (button_release_event),
	(handle_icon_button_press), (nautilus_icon_container_add_auto),
	(nautilus_icon_container_remove),
	(nautilus_icon_container_set_auto_layout):
	Some tweaks for auto-layout mode. Made it work better with
	stretching by not laying out the currently-stretched icon,
	simplified the code a bit, and made it relayout when an icon
	is removed.
	
	* src/file-manager/fm-directory-view.c (compute_menu_item_info),
	(fm_directory_view_real_merge_menus):
	Got rid of the "..." from "Delete...". On Macintosh, at least,
	the "..." is only used when the dialog is something that adds
	parameters to the command, not when it's just a confirmation.
	
	* src/nautilus-index-title.c (update_font),
	(nautilus_index_title_update_label),
	(nautilus_index_title_update_info):
	Changed to use new nautilus_gtk_widget_set_font and
	nautilus_gtk_widget_set_font_by_name.

	* src/ntl-index-panel.c (nautilus_index_panel_remove_meta_view):
	Made the index panel do *slightly* better when a meta view
	fails to load.

	* components/help/hyperbola-main.c (main):
	Fixed a warning.
	
2000-04-20  Maciej Stachowiak  <mjs@eazel.com>

	* configure.in: Add back tests erroneously removed in the last
	checkin.

2000-04-20  Pavel Cisler <pavel@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_moved):
	Darin helped me finish implementing the missing parts of the call,
	including updating the reference to the new directory object,
	updating the file info structure to match the file's new location.
	Fixed a silly bug in an if statement.
	
	* libnautilus-extensions/nautilus-file-changes-queue.c:
	Fixed another silly bug where 'file moved' notifications were
	misinterpreted as file-removed ones.
	
2000-04-20  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-gtk-extensions.c,h:
	added utility routines (written by Darin on my machine) to set the
	font associated with a widget
	* components/rpm-view/nautilus-rpmview.c:
	used the new routine to set the font of the package title.
	
2000-04-20  Andreas Hyden  <a.hyden@cyberpoint.se>

	* configure.in: Added sv to ALL_LINGUAS.

2000-04-19  Darin as Andy  <darin@eazel.com>

	* libnautilus-extensions/nautilus-graphic-effects.c:
	(nautilus_make_semi_transparent), (create_new_pixbuf_with_alpha):
	Create a new pixbuf that has an alpha channel even if the original
	pixbuf didn't!

2000-04-19  Pavel Cisler  <pavel@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_added):
	Work on making new files show up during copy. This is a simple
	version using sync gnome_vfs_get_file_info calls, we'll need a
	version that uses a new async get_file_info call that takes a list
	of URIs and produces a list of file info structs.
	
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-file.c:
	* libnautilus-extensions/nautilus-file.h:
	(update_file_info_in_list_if_needed), (dequeue_pending_idle_callback),
	(nautilus_file_update):
	Made dequeue_pending_idle_callback deal with getting duplicate
	file info structures or file info structures for files we already
	know about. This also fixes 395.

	* libnautilus-extensions/nautilus-file-changes-queue.c
	Added some better comments and removed a fixme that didn't really
	need fixing.

2000-04-19  John Sullivan  <sullivan@eazel.com>

	Darin and I started out thinking we were going to start entering
	bugs for the FIXME items but we were distracted into fixing bugs
	and tweaking code that we found while doing so.
	
	* check-FIXME.pl: Won't search old ChangeLogs for FIXMEs either;
	changed FIXME format from "FIXME bug xxx" to "FIXME bugzilla.eazel.com xxx"
	
	* components/history/ntl-history-view.c:
	(hyperbola_navigation_history_notify_location_change): Moved bookmark
	naming hack here and added FIXME explaining it.
	
	* libnautilus-extensions/nautilus-bookmark.h,
	* libnautilus-extensions/nautilus-bookmark.c:
	(nautilus_bookmark_new), (nautilus_bookmark_new_with_name):
	Combined these two into one routine that takes both the uri and
	title; removed hack for trying to come up with good name for
	bookmark here.
	(nautilus_bookmark_get_pixmap_and_mask): Changed to call
	_get_pixbuf instead of duplicating code.
	(nautilus_bookmark_get_pixbuf): Changed interface to return
	pixbuf or NULL instead of boolean result & "out" parameter.
	
	* src/nautilus-bookmark-list.c,
	* src/nautilus-bookmarks-window.c,
	* src/nautilus-window-menus.c,
	* src/ntl-window-msgs.c: 
	Updated callers of nautilus_bookmark_new and _new_with_name.

2000-04-19  John Sullivan  <sullivan@eazel.com>

	Fixed bug 540 (need specific error message for "access denied"
	when renaming)

	* src/file-manager/fm-error-reporting.c:
	(fm_report_error_renaming_file): Added case for
	GNOME_VFS_ERROR_ACCESSDENIED

2000-04-19  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-rpm.c
	Fixed Uninstall to work as advertised.  Uninstall will also skip
	source packages now since they are not stored in the rpmdb.

2000-04-19  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib-debug.c
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install.c
	Tweaked the packages struct so that rpm names are no longer
	hardcoded.  Added a the option to do dry runs without actually
	installing anything.  Good for testing.

2000-04-19  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	(world_width_changed): New function, extracted from size_allocate.
	(size_allocate): Call world-width-changed.
	(nautilus_icon_container_set_zoom_level): Call world_width_changed.
	This makes zooming relayout when in auto-layout mode.
	
	* src/nautilus-window-menus.c:
	(append_bookmark_to_menu): Added line where bookmark is set in
	BookmarkHolder. This had been accidentally deleted, breaking all
	bookmarks.

2000-04-19  Pablo Saratxaga <pablo@mandrakesoft.com>

	* configure.in (ALL_LINGUAS): Added Danish language

2000-04-19  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install.c
	Adding configuration file generator and creating a metadata directory.
	A directory called /etc/eazel/services will be created to store
	cofiguration options and uninstall data now.

2000-04-19  Maciej Stachowiak  <mjs@eazel.com>

	* src/ntl-view.c (nautilus_view_destroy_client): Reverted the last
	change, it caused serious crashage in some cases.

	* src/ntl-view.c (nautilus_view_destroy_client): Destroy the
	ViewFrame instead of unreffing. This is the only way to be sure
	the Control is fully unref()d. Ideally Bonobo would let us unbind
	the frame from the control to break the circular refs.
	
	* configure.in: Check for OAF the oficially approved way. Check
	for GConf.

	* src/ntl-uri-map.c (my_notify_when_ready): Fix fallback_iid for
	moz protocol.
	* components/mozilla/main.c (main): Remove ev variable to shut up gcc.
	
	* src/ntl-app.c, components/notes/ntl-notes.c: Remove some
	spurious debugging statements I accidentally left in.
	

	OAF conversion. You must now build bonobo and gnome-vfs with --enable-oaf

	* configure.in: Check for OAF

	* libnautilus/nautilus-view-component.idl: Inherit from
	Bonobo::Unknown instead of GNOME::Unknown.

	* libnautilus-extensions/nautilus-global-preferences.c,
	libnautilus-extensions/nautilus-global-preferences.h: Refer to
	meta views by OAFIID, not GOAD ID.

	* src/ntl-uri-map.c (my_notify_when_ready): Replaced hardcoded
	list of GOAD IDs with a hardcoded list of OAFIIDs.
	(add_components_from_metadata): Changed the expected format; it is
	now label=component instead of component:label since OAFIIDs
	contain colons.

	* src/ntl-view.c (nautilus_view_destroy_client): unref the
	Zoomable interface of the View, if any.

	* src/file-manager/dfos-corba.c, src/file-manager/dfos.c: replace
	GOAD calls with OAF ones; untested since this code is not really
	used right now.

	* src/ntl-main.c: Use OAF calls to intialize CORBA.

	* src/ntl-app.c: Replace GOAD IDs with OAFIIDs. Use
	Bonobo_Generic_Factory instead of GNOME_Generic_Factory to make
	the linker happy. Register the factory server with OAF, not GOAD.

	* src/nautilus.h: Include <liboaf/liboaf.h> instead of <libgnorba/gnorba.h>


	* components/help/Makefile.am, components/history/Makefile.am,
	components/html/Makefile.am, components/mozilla/Makefile.am,
	components/music/Makefile.am, components/notes/Makefile.am,
	components/rpmview/Makefile.am, components/sample/Makefile.am,
	components/services/startup/Makefile.am,
	components/websearch/Makefile.am, libnautilus/Makefile.am,
	libnautilus-extensions/Makefile.am, src/Makefile.am,
	src/file-manager/Makefile.am: Updated for OAF; install .oafinfo
	files instead of .gnorba.

	* components/help/hyperbola-main.c,
	components/history/ntl-history-view.c,
	components/html/ntl-web-browser.c, components/mozilla/main.c,
	components/music/main.c, components/notes/ntl-notes.c,
	components/rpmview/main.c, components/sample/main.c,
	components/services/startup/main.c,
	components/websearch/ntl-web-search.c: Convert to OAF; use OAFIIDs
	and oaf intialization functions.

	* src/nautilus.oafinfo, components/help/hyperbola.oafinfo,
	components/history/ntl-history-view.oafinfo,
	components/html/ntl-web-browser.oafinfo,
	components/music/nautilus-music-view.oafinfo,
	components/notes/ntl-notes.oafinfo,
	components/rpmview/nautilus-rpm-view.oafinfo,
	components/services/startup/nautilus-service-startup-view.oafinfo,
	components/websearch/ntl-web-search.oafinfo,
	components/sample/nautilus-sample-content-view.oafinfo,
	components/mozilla/nautilus-mozilla-content-view.oafinfo: New OAF
	activation records.
	
	* src/nautilus.goad, components/help/hyperbola.goad,
	components/history/ntl-history-view.goad,
	components/html/ntl-web-browser.goad,
	components/music/nautilus-music-view.goad,
	components/notes/ntl-notes.goad,
	components/rpmview/nautilus-rpm-view.goad,
	components/services/startup/nautilus-service-startup-view.goad,
	components/websearch/ntl-web-search.goad,
	components/sample/nautilus-sample-content-view.goad,
	components/mozilla/nautilus-mozilla-content-view.goad: Removed.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in,
	  acconfig.h: Add support for setting a reasonable default for
	MOZILLA_FIVE_HOME - which mozilla needs to survie.

	* components/mozilla/main.c: (mozilla_setup_environment) Add a
	function to hack the mozilla environment into something that might
	have a chance of working by default.

	* src/ntl-uri-map.c: Add a temporary hack protocol moz:// to test
	mozilla in isolation from gnome-vfs trying to do http stuff.

	* components/mozilla/nautilus-mozilla-content-view.c: Match the
	above.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* configure.in: Add voodoo to support --with-mozilla.

	* components/Makefile.am: Add conditional build of mozilla subdir.

	* components/mozilla/Makefile.am: Un-hardcode cflags and libs.
	Use the values set in configure instead.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-clean.sh: Grep out "emacs" so that this nice script
	doesnt kill my editor when i happen to be editting the source to
	component in question.
	
2000-04-18  Andy Hertzfeld

	made link files control the additional text displayed beneath them.
	
	* libnautilus/nautilus-link.c,.h:
	added nautilus_link_get_additional_text, which returns text specified
	in the xml file, if any,
	* libnautilus/nautilus-metadata.h:
	added tag to use for the additional text in the link file
	* src/file-manager/fm-icon-view.c:
	made it get additional text for link files using the new
	routines in nautilus-link
	* data/top/Makefile.am:
	removed the placeholder "Welcome" file from the novice home directory
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* components/mozilla/.cvsignore: Ignore built binary

	* components/mozilla/Makefile.am: Link with the right stuff.  Link
	only against libnautilus to be legit.

	* components/mozilla/nautilus-mozilla-content-view.h,
	  components/mozilla/nautilus-mozilla-content-view.c: Dont use
	code from libnautilus-extensions.  Fix struct tag names.  

2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h:

	Simplify be removing all arguments from callbacks save for the
	user data.

	(nautilus_preferences_add_string_callback): Rename to
	nautilus_preferences_add_callback since string preferences are the
	default.
	
	* libnautilus-extensions/nautilus-global-preferences.c:
	(user_level_changed_callback): Simplify a bit.  Update for new
	simple preference callbacks.

	  libnautilus-extensions/nautilus-icon-container.c,
	  libnautilus-extensions/nautilus-icon-factory.c,
	  libnautilus-extensions/nautilus-list.c: Update for new simple
	preference callbacks.

	* src/file-manager/fm-directory-view.c,
	  src/file-manager/fm-icon-view.c: Update for new simple
	preference callbacks. 

	  src/file-manager/fm-icon-text-window.c: Update for new
	simple preference callbacks and removed unecessary usage of
	icon_view_text_attribute_changed_callback. Use
	synch_menus_with_preference directly instead.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	*  nautilus-widgets/nautilus-preferences.c:
	(nautilus_preferences_get):  If the stored default value is null,
	use the given one.  Do this only for strings, since integral types
	can legally have a value of zero.

	* nautilus-widgets/nautilus-preferences-item.c:
	(preferences_item_create_enum), (enum_radio_group_changed_cb):
	Deal with the enumeration values.   Before it was assuming it
	started at ZERO.

	* libnautilus-extensions/nautilus-global-preferences.c:
	NAUTILUS_USER_LEVEL_*: Make this enum begin with a non zero
	value.  The zero value can be misintepreted by preferences as a
	default leading to confusion.

	(user_level_changed_callback): Add a default case just in case!

	(nautilus_global_preferences_startup): Invoke
	user_level_changed_callback once to make sure stuff is properly
	setup.

2000-04-18  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_overwrite):
	Only offer "Replace All" in an overwrite conflict error dialog if
	there is more than one conflicting item to deal with.
 
2000-04-18  Andy Hertzfeld <andy@eazel.com>

	* components/services/startup/nautilus-service-startup-view.c:
	added placeholder summary page, plus used a larger font for
	the title
	
2000-04-18  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install.c
	Adding the uninstall feature to eazel-install.

2000-04-18  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	(compare_icons), (idle_handler), (nautilus_icon_container_move_icon),
	(size_allocate), (nautilus_icon_container_initialize_class),
	(nautilus_icon_container_set_auto_layout):
	First cut at the auto-layout feature. It just does a lot of
	re-laying things out.
	
	* libnautilus-extensions/nautilus-icon-container.h:
	* libnautilus-extensions/nautilus-list.h: 
	Added interfaces for telling whether to use single-click mode or
	not. A first step in moving preferences code out of here and
	into the file-manager classes.

	* libnautilus-extensions/fm-icon-view.c:
	(create_icon_container), (icon_container_compare_icons_callback):
	Provide a sorting order for the auto-layout mode.

	* librsvg/test-rsvg.c:
	Rolled out the change to work with the old popt that Pavel
	accidentally checked as Gene in when he was helping me.

2000-04-18  Gene Z. Ragan  <gzr@eazel.com>

	* libnautilus-extensions/nautilus-icon-canvas-item.c:
	* libnautilus-extensions/nautilus-icon-canvas-item.h:
	Renamed several public functions to use proper nomenclature.
	An example would be changing nautilus_icon_canvas_get_editable_text_bounds
	to nautilus_icon_canvas_item_get_editable_text_bounds. A few of 
	these misnaming were in my last submission.

	* libnautilus-extensions/nautilus-icon-container.c:
	* libnautilus-extensions/nautilus-icon-container.h:
	Renamed nautilus_icon_container_show_rename_widget to
	nautilus_icon_container_start_renaming_selected_item

	* libnautilus-extensions/nautilus-icon-text-item.c:
	Fixed the following bugs:
	487 Trying to rename an icon to empty string should revert to original
	498 Renaming text field looks silly when empty
	500 text-editing box too narrow when renaming files with short names
	508 Icon text appears and disappears incorrectly when zooming

2000-04-18  Shane Culpepper  <pepper@eazel.com>
	
	* components/services/install/eazel-install-lib-xml.c
	* components/services/install/eazel-install-lib.h
	* components/services/install/eazel-install-lib-rpm.c
	* components/services/install/eazel-install.c
	Fixed a few memory leaks, removed some debugging code,
	and added interfaceFlags, installFlags, and probFilter
	in order to remove some hardcoded options and make use
	of the configuration files.

2000-04-18  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(uri_get_directory_part), (uri_get_basename),
	(get_parent_directory), (get_parent_directory_if_exists),
	(call_files_added), (call_files_changed),
	(hash_table_list_prepend),
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Another cut at the notify code.
	
	* libnautilus-extensions/nautilus-file-private.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_mark_gone): Made part of the deleted code
	accessible for the notify code.

	* libnautilus-extensions/nautilus-directory-private.h:
	Renamed remove_file_monitor_link to add a nautilus
	prefix since it's no longer a local function.
	
2000-04-18  John Sullivan  <sullivan@eazel.com>

	Distinguished the item count for unreadable directories
	from the "not yet known" item count. Unreadable directories
	show "xxx" and "not yet known" show "--". This fixes bug 513.

	* libnautilus-extensions/nautilus-file.h,
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_compare_directories_by_size): Put unreadable
	counts before unknown counts before known counts.
	(nautilus_file_get_directory_item_count): New result parameter
	that callers can use to distinguish unreadable case from
	unknown case.
	(nautilus_file_get_size_as_string): return different string
	if unreadable.
	* libnautilus-extensions/nautilus-directory.c:
	(directory_count_callback): Call nautilus_file_changed
	even when we discover that the count is unreadable.
	* src/file-manager/fm-directory-view.c:
	(display_selection_info): Pass NULL for unreadable parameter
	because this caller doesn't care why it's not known.

2000-04-18  Pavel Cisler  <pavel@eazel.com>

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_vfs_error):
	The function of the Abort and Retry buttons in the file operation error 
	alert was inverted.
 
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c:
	(preference_get): If the stored default_value is NULL, then used
	the provided one.
	
2000-04-18  Andy Hertzfeld <andy@eazel.com>

	added better abstraction for the xml-based links introduced yesterday
	
	* libnautilus/nautilus-link.h,c:
	new routines to access xml-based link files
	* libnautilus/Makefile.am:
	added nautilus-link.c,h to build
	* libnautilus/nautilus-file.c:
	use nautilus_link_get_link_uri in nautilus-link instead of
	accessing link files directly
	* libnautilus/nautilus-icon-factory.c:
	use nautilus_link_get_image_uri in nautilus-link instead of
	accessing directly
	* src/file-manager/fm-icon-view.c:
	use nautilus_link_get_display_name to suppress display of
	identifying suffix
	* src/file-manager/fm-icon-text-window.c:
	fixed bug that caused crash when preference file is deleted
	by checking for NULL
	and using default in fm_get_text_attribute_names_preference_or_default
	* icons/computer.png:
	new icon for novice home
	* icons/hand.svg:
	new icon for novice home
	* icons/Makefile.am:
	added new icons
	* data/top/Computer-ntl.xml:
	added xml link for novice home
	* data/top/Services-ntl.xml:
	added link to novice home:
	* data/Makefile.am:
	added new files
	
2000-04-18  John Sullivan  <sullivan@eazel.com>

	Yet more tweakery to the file-monitoring code.

	* libnautilus-extensions/nautilus-directory.c:
	(stop_monitoring_files): Renamed to stop_monitoring_file_list.
	(nautilus_directory_destroy): Only stop monitoring list if we
	were monitoring list, but always complain about non-NULL
	file_monitors.
	(nautilus_directory_file_monitor_remove_internal): Only
	stop monitoring list if we had been monitoring it. This fixes
	CRITICAL when you launch and immediately quit.

2000-04-18 Shane Culpepper <pepper@eazel.com>

	* components/services/install/eazel-install-lib-rpm.c - fixing the
	  segfault in rpmInstall.

2000-04-18  John Sullivan  <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-directory.c:
	(dequeue_pending_idle_callback), 
	(nautilus_directory_file_monitor_remove_internal),
	(nautilus_directory_notify_files_added): Deployed
	new is_file_list_monitored function in three places.
	Two of these were bugs, one was code duplication.

2000-04-18  John Sullivan  <sullivan@eazel.com>

	Fixed bug 494 (initial directory count never appears in sidebar).

	This was a missing pieces of the async framework. Darin helped
	me finish it up.

	* libnautilus-extensions/nautilus-directory-private.h:
	Put FileMonitor struct here so NautilusFile can use it.
	(nautilus_directory_file_monitor_add_internal),
	(nautilus_directory_file_monitor_remove_internal),
	(remove_file_monitor_link): New functions, shared between
	NautilusDirectory and NautilusFile.
	* libnautilus-extensions/nautilus-file.c:
	(destroy): Complain about then clean up any remaining FileMonitors.
	(nautilus_file_monitor_add), (nautilus_file_monitor_remove): Fill 
	in the implementation for these formerly-empty routines.	
	* libnautilus-extensions/nautilus-directory.c:
	Moved FileMonitor struct out.
	(nautilus_directory_destroy): assert that there's no count_in_progress.
	(compare_file_monitor_with_client): changed name to
	compare_file_monitor_by_client_and_file and behavior to match.
	(find_file_monitor): Now takes a file and uses it in search.
	(cancel_unneeded_file_attribute_requests): New function, cleans up 
	no-longer-needed gnome vfs async calls.
	(remove_file_monitor_link): New function, removes a file monitor
	and cleans up storage.
	(remove_file_monitor): Uses remove_file_monitor_link to fix
	storage leak.
	(is_file_list_monitored): New function, checks whether anyone is
	monitoring all files in this directory.
	(nautilus_directory_file_monitor_add_internal),
	(nautilus_directory_file_monitor_remove): New functions,
	generalized from old non-internal versions to handle the single-file
	case too.
	(nautilus_directory_file_monitor_add),
	(nautilus_directory_file_monitor_remove): Now calls _internal function.
	(process_pending_file_attribute_requests): Now handles single-file
	case as well as all-files case.

	* src/nautilus-index-title.c:
	(nautilus_index_title_set_uri): Move the item-count-monitoring
	code inside the file != NULL check so it doesn't fail at the
	root (where, due to a bug, file is NULL).

2000-04-18  Darin Adler  <darin@eazel.com>

	Fixed bug where you'd see the name twice under each icon.
	Did some work for the new notify hooks that Pavel made.
	I'll finish those hooks soon.
	
	* src/file-manager/fm-icon-view.h:
	* src/file-manager/fm-icon-text-window.h:
	* src/file-manager/fm-icon-text-window.c:
	(set_preference_string), (synch_menus_with_preference),
	(icon_view_text_attribute_changed_callback),
	(fm_get_text_attribute_names_preference_or_default):
	* src/file-manager/fm-icon-view.c: (fm_icon_view_initialize),
	(fm_icon_view_get_icon_text_attribute_names),
	(text_attribute_names_changed_callback):
	Moved attribute names default into FMIconTextWindow and made
	the callers use a new call that gets either the preference or
	the default if the preference is invalid. Also simplified the
	code since we don't need to cache the preference in either the
	FMIconTextWindow or the FMIconView.

	* libnautilus-extensions/nautilus-directory.c:
	(is_canonical_uri): Added a function for use in asserts.
	(nautilus_directory_get): Assert that we successfully
	made the URI canonical.
	(parent_directory_if_exists), (file_if_exists): Helper
	functions for implementing the notify calls.
	(nautilus_directory_notify_files_added),
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Fleshed out the bones of these routines a bit more.
	They are still not done. Also changed their interfaces
	so they are not responsible for freeing their parameters.
	
	* libnautilus-extensions/nautilus-directory.h:
	* libnautilus-extensions/nautilus-directory.c:
	* libnautilus-extensions/nautilus-file.h:
	(nautilus_directory_contains_file):
	New call to be used instead of nautilus_file_is_gone
	for callers that are monitoring a directory.

	* libnautilus-extensions/nautilus-file-changes-queue.c:
	(pairs_list_free), (nautilus_file_changes_consume_changes):
	Make the caller free the list instead of the called function
	Also reordered the changes so deletions come before additions.

	* src/file-manager/fm-directory-view.c: (display_pending_files):
	* src/file-manager/fm-list-view.c: (fm_list_view_file_changed):
	* src/file-manager/fm-icon-view.c: (fm_icon_view_file_changed):
	Changed to use nautilus_directory_contains_file instead of
	nautilus_file_is_gone.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* components/services/install/.cvsignore: Ignore more generated
	files.
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	Hook up click policy preference.  Bug 374.

	*  libnautilus-extensions/nautilus-global-preferences.h,
	   libnautilus-extensions/nautilus-global-preferences.c:
	Rename CLICK_ACTIVATION_TYPE to CLICK_POLICY.  

	* libnautilus-extensions/nautilus-icon-container.c:
	(click_policy_changed_callback): New preferences callback to keep
	track of click policy changes.

	(destroy): Unregister click_policy_changed callback on destroy.

	(nautilus_icon_container_initialize): Initialize the
	single_click_mode from preferences and register callback to keep
	track of changes in click policy.

	Also anal gtk style formatting of the private prototypes and
	sophisticated alphabetization of libnautilus-extensions headers.

	*  libnautilus-extensions/nautilus-list.c:
	(click_policy_changed_callback): New preferences callback to keep
	track of click policy changes.
	
	(nautilus_list_initialize): Initialize the single_click_mode from
	preferences and register callback to keep track of changes in
	click policy.

	(nautilus_list_destroy): Unregister click_policy_changed callback
	on destroy. 
	
	Also anal gtk style formatting of the private prototypes and
	sophisticated alphabetization of libnautilus-extensions headers.

2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	* nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-preferences.h: Dont expose the
	preference/enum info structure.  Remove these and use the
	NautilusPreference object instead to describe preferences.

	Add usage of default values to get_* api.  So now callers can
	provide a default which will be given back to them if no default
	exists.  For example, no default will exist for the preference
	when it was implicitly pulled out of someone's 	ass.

	The callback function no longer passes along the value.  Instead
	the caller is expected to use the get_ functions.

	Rename nautilus_preferences_{get,set}_string() to
	nautilus_preferences_{get,set}.  This matches the
	NautilusDirectory metadata api which uses strings for metadata by
	default.

	Also constify the get functions.
	
	(nautilus_preferneces_get_info): Renamed to 
	nautilus_preferneces_get_preference which returns a referenced
	pointer to the preference description object.  Perhaps this could
	have a better name.

	(nautilus_preferences_enum_add_entry): New function to add entries
	to enumerated preferences.

	* nautilus-widgets/nautilus-preferences-group.c,
	  nautilus-widgets/nautilus-preferences-group.h:
	(nautilus_preferences_group_add): Retire.

	(nautilus_preferences_group_add_item): New function that does all
	the work of creating an item based on a given item_type.

	* nautilus-widgets/nautilus-preferences-item.c,
	  nautilus-widgets/nautilus-preferences-item.h: Use
	NautilusPreferences directly instead of GtkObject.

	Ref/unref the preference object properly.

	Use more consistent identifiers.  Fix some stupid style things.

	Update for NautilusPreference usage instead of the info struct
	hack). 

	*  nautilus-widgets/nautilus-preferences-pane.c,
	   nautilus-widgets/nautilus-preferences-pane.h:
	(nautilus_preferences_pane_add_item_to_nth_group) : New function
	to do all the work of adding and managing an item based on a given
	type.
	
	*  nautilus-widgets/test-nautilus-widgets.c: Update for all the
	api changes.

 	* nautilus-widgets/Makefile.am: Add building of
	nautilus-preference.[ch] and the self test driver.

	* libnautilus-extensions/nautilus-global-preferences.c,
	  libnautilus-extensions/nautilus-global-preferences.h: Add
	CLICK_ACTIVATION_TYPE preferences.  Add HOME_URI preference.  Add
	SHOW_HIDDEN_FILES preference.

	Make all the user level stuff private.  Dont expose either the
	user level preference or the user level values at all.  Instead,
	track user level changes in a callback and set corresponsing
	preferences accordingly.

	(nautilus_global_preferences_startup): Hook to make the above work
	properly.
	
	Cleanup the creation of the preferences dialog.


	* libnautilus-extensions/nautilus-icon-factory.c:
	(icon_theme_changed_callback): Preference changed callback no
	longer passes in the value.  Value needs to be manually fetched.

	(nautilus_get_current_icon_factory): No need to call
	nautilus_preferences_set_info.  Instead give
	nautilus_preferences_get a default value.  This way, we can always
	get something reasonable back.


	* src/nautilus-window-menus.c:
	(use_eazel_theme_icons_cb): Update for pref api changes.  Feed the
	get function a default value.

	* src/ntl-app.c:
	(nautilus_app_class_init): Call
	nautilus_global_preferences_startup so that user level callbacks
	always works.  Also, allows preferences exposed in the ui to have
	nice defaults.
	
	* src/ntl-main.c:
	(main): Add nautilus-widgets self checks.

	* src/ntl-uri-map.c:
	(add_meta_view_iids_from_preferences): Feed the pref api function
	a default value. 

	* src/ntl-window-state.c:
	(nautilus_window_set_initial_state): User level is no longer
	publicly exposed over here.  Determine the home uri, instead by
	fetching the HOME_URI preference.

	* src/file-manager/fm-directory-view.c:
	(use_new_window_changed_callback): Retired.  Instead check
	preference when needed.  There really is not need to go to the
	trouble of installing a callback for this specific preference.
	Its just as easy (and not a performance issues) to check it
	directly.  

	Also retired the 'use_new_window' member.

	(user_level_changed_callback): Retired.  User level no longer
	publically exposed.

	(show_hidden_files_changed_callback):  Check SHOW_HIDDEN_FILES
	preference to determine if hidden files should be filtered.

	Add a 'show_hidden_files' member that keeps track of changes in
	this preference.

	(fm_directory_view_initialize): Initialize 'show_hidden_files'.
	Update for callback name change.

	(nautilus_preferences_remove_callback): Remove uneeded unregister
	call for retired use_new_window callback.

	(queue_pending_files): Do hidden file filtering based on
	'show_hidden_files' instead of using the user level.

	(fm_directory_view_activate_file): Check USE_NEW_WINDOW preference
	to determine if a new window is requested.

	*  src/file-manager/fm-icon-text-window.c: #include fm-icon-virw.h
	and use DEFAULT_ICON_VIEW_TEXT_ATTRIBUTE_NAMES from it instead of
	ATTRIBUTE_NAMES_DEFAULT.  This makes sure the default is not out
	of whack.  This define should probably be placed in a better place.

	NOTE: This seems to be one of the drawbacks of passing in defaults
	to fetch functions - that is out-of-whackness in 2 or more callers
	in difference places.
	
	(synch_menus_with_preference),
	(changed_attributes_option_menu_cb): Update for preference api changes.
	
	(preference_changed_callback): Rename to
	icon_view_text_attribute_changed_callback for clarity.

	(icon_view_text_attribute_changed_callback): Value no longer
	passed into callback.  Need to check preferences manually.  
	
	* src/file-manager/fm-icon-view.h:
	Add DEFAULT_ICON_VIEW_TEXT_ATTRIBUTE_NAMES to share with
	fm-icon-text-window.
	
	* src/file-manager/fm-icon-view.c:
	(fm_icon_view_icon_text_changed_callback): Update for preference
	api changes.

	Minor anal style formatting of the private prototypes.

	(fm_icon_view_initialize_class): Yank
	nautilus_preferences_set_info call.  No longer needed for there to
	be proper defaults.  

	(text_attribute_names_changed_callback): Value no longer
	passed into callback.  Need to check preferences manually.  Also,
	feed the get function a reasonable default.

	* components/help/Makefile.am: Needs to link with
	libnautilus-extensions. 
	
	* components/websearch/Makefile.am: Needs to link with
	libnautilus-extensions. 
	
2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	*  libnautilus-extensions/nautilus-string-list.c,
	   libnautilus/nautilus-string-list.h: Dumb underscore fix the struct tags.

2000-04-18  Ramiro Estrugo  <ramiro@eazel.com>

	Factor out the code that describes a preference from the big messy
	preferences into a class.
	
	* nautilus-widgets/nautilus-preference.c,
	  nautilus-widgets/nautilus-preference.h: New files.  A class that
	describes a nautilus preference.
	
	  nautilus-widgets/nautilus-widgets-self-check-functions.c,
	  nautilus-widgets/nautilus-widgets-self-check-functions.h: New
	files .  Self check code driver nautilus-widgets.
	
2000-04-17  Pavel Cisler  <pavel@eazel.com>

	This checkin requires new gnome-vfs.

	Plumbing for making copied/moved/deleted files show up update
	in their respective new locations.

	* libnautilus-extensions/nautilus-file-changes-queue.h
	* libnautilus-extensions/nautilus-file-changes-queue.c
	* libnautilus-extensions/Makefile.am
	Shared queue used by the copy engine to send update notification
	requests to NautilusDirectory during file copy/move/delete operations.

	* libnautilus-extensions/nautilus-directory-private.h:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_added), 
	(nautilus_directory_notify_files_removed),
	(nautilus_directory_notify_files_moved):
	Stub calls that will be hooked up to the NautilusDirectory
	notification calls to dispatch the notification updates.
	
	* src/file-manager/dfos-xfer.c:
	(sync_xfer_callback):
	New callback that gets called in the async copy engine context
	and produces change entries stuffing them into the file changes
	queue.

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_ok):
	Added calls to the new nautilus_file_changes_consume_changes
	from the progress update callback. This callback is called in
	the user interface context and consumes the change entries
	from the file changes queue, sending them in chunks to be
	dispatched by to the individual Nautilus directory objects. 

	* src/file-manager/dfos-xfer.c:
	(handle_xfer_ok):
	Updated to use new progress enum values.

	* src/file-manager/dfos-xfer.c:
	(update_xfer_callback):
	Renamed from sync_xfer_callback.

	* src/file-manager/dfos-xfer.c:
	(gnome_vfs_async_xfer):
	Pass in new sync_xfer_callback parameters.
	
2000-04-17  Darin Adler  <darin@eazel.com>

	* components/services/install/.cvsignore: Generated files.

2000-04-17  Darin Adler  <darin@eazel.com>

	Added commands for Auto vs. Manual layout, but the guts behind
	them is not yet implemented.

	Did some cleanup on the new renaming code.

	* nautilus-glib-extensions.c:
	* nautilus-glib-extensions.h:
	Added nautilus_g_list_exactly_one_item and
	nautilus_g_list_more_than_one_item. These are more-efficient
	versions of g_list_length (x) == 1 and g_list_length (x) > 1.

	* nautilus-icon-canvas-item.c:
	(draw_or_measure_label_text): Add a line break between the
	editable text and the additional text.
	(nautilus_icon_canvas_get_text_bounds),
	(nautilus_icon_canvas_get_editable_text_bounds),
	(nautilus_icon_canvas_get_editable_text),
	(nautilus_icon_canvas_set_renaming):
	Replaced g_assert with g_return_if_fail calls, and added the
	complete set of g_return_if_fail.
	(nautilus_icon_canvas_set_renaming): Don't update the item
	unless the renaming state has actually changed.
	
	* nautilus-icon-canvas-item.h: Fixed formatting.

	* nautilus-icon-container.c:
	* nautilus-icon-container.h:
	Added nautilus_icon_container_set_auto_layout and
	nautilus_icon_container_is_auto_layout. For now they are
	placeholders that just modify a boolean.

	* nautilus-icon-private.h:
	Added the auto_layout boolean.

	* nautilus-icon-text-item.c:
	* nautilus-icon-text-item.h:
	Just some formatting and other minor cleanup.

	* nautilus-metadata.h:
	Added NAUTILUS_METADATA_KEY_ICON_VIEW_AUTO_LAYOUT.

	* nautilus-location-bar.c (drag_data_received_cb): Use the new
	nautilus_g_list_more_than_one_item function.

	* fm-directory-view.c (bonobo_menu_open_cb), (open_cb): Use the
	new nautilus_g_list_exactly_one_item.

	* fm-icon-text-window.c (attribute_names_string_is_good),
	(set_preference_string), (synch_menus_with_preference),
	(preference_changed_callback),
	(changed_attributes_option_menu_cb): Got rid of the hard-coded
	first item "name" which is no longer needed.  Also changed to
	handle bad data in the preferences.

	* fm-icon-view.c (fm_icon_view_initialize_class): Updated since
	there's no "name" item needed any more.
	(fm_icon_view_compute_menu_item_info): Merged MENU_PATH_RENAME
	with MENU_RENAME_TEXT and simplified the logic.
	(fm_icon_view_append_selection_context_menu_items): Merged
	MENU_PATH_RENAME with MENU_RENAME_TEXT.
	(update_layout_menus), (auto_layout_callback),
	(manual_layout_callback), (fm_icon_view_merge_menus): Added menu
	items for auto layout and for manual layout.
	(fm_icon_view_begin_loading): Load setting for auto layout from
	metadata.
	(fm_icon_view_get_icon_text_attribute_names): Changed to get rid
	of the "name" first item from the list of text attributes.
	(get_icon_editable_text_callback): Simplified since the editable text
	is always the icon name. Also got rid of copied and pasted code that's
	no longer needed for this case.
	(get_icon_additional_text_callback): Got rid of special case for name,
	since the name is no longer treated as an attribute.

2000-04-19  Andy Hertzfeld  <andy@eazel.com>

	Added a new, xml-based type of link file that can specify it's own
	icon and other behavior.  Soon they will be used for the novice
	home directory.
	
	* libnautilus-extensions.nautilus-file.c:
	Check for the new file type in nautilus_directory_mapped_uri, and
	return the link contained in the file if present.
	* libnautilus-icon-factory.c:
	Check for the new file type in
	nautilus_icon_factory_get_icon_for_file and return the specified
	image as appropriate.
	
2000-04-18  Shane Culpepper  <pepper@eazel.com>

	adding the eazel-installer skelton.  very rough prototype right now
	but it works with my local configuration data.  Will be updated alot
	over the next few days.
	Location is components/services/install.  It is not part of the default
	build right now.

2000-04-18  Andy Hertzfeld  <andy@eazel.com>

	made clicking on gmc-style URL files redirect to the specified URL.
	
	* libnautilus-extensions/nautilus-file.c,h:
	added nautilus_file_get_mapped_uri, which checks for gmc-style URL files
	and returns the URL they reference in that case; otherwise, just return
	the file's URI.
	* src/file-manager/fm-directory-view.c:
	called nautilus_file_get_mapped_uri in fm_directory_view_activate_file_internal
	* data/mime/nautilus.keys:
	added icons to a few MIME types that I forgot last time.  Also, just
	use relative paths to reference the icons.

2000-04-18  Kjartan Maraas  <kmaraas@online.no>

	* configure.in: Added "no" to ALL_LINGUAS.
	
2000-04-18  Gene Z. Ragan  <gzr@eazel.com>

	Added functionality to allow files to be renamed in icon view.
	This feature is available by either context click on the icon or
	selecting a single file and choosing "Rename" form the File menu.

	* libnautilus-extensions/nautilus-icon-text-item.c
	* libnautilus-extensions/nautilus-icon-text-item.h: New files.
	This is an editable icon text item used in the renaming feature.
	It is based on GnomeIconTextItem but modified to fix bugs in the
	original code and add extended functionality need by nautilus. If
	thse changes were rolled into the current GnomeIconTextItem, it
	would break gmc.

	* libnautilus-extensions/Makefile.am
	Modified file so that the two new files listed above would properly
	be included in generated makefiles.

	* libnautilus-extensions/nautilus-icon-canvas-item.c
	Split text class variable into two variables, editable_text and
	additonal_text. editable_text refers to attributes that the user
	can change via rename in place. additional_text is any other text
	that the user cannot edit via the rename in place feature. Added
	a boolean flag, is_renaming, to check against during various
	operations that effect the renaming feature. Removed ARG_TEXT
	argument ID and replaced with ARG_EDITABLE_TEXT and
	ARG_ADDITIONAL_TEXT.
	(nautilus_icon_canvas_item_initialize_class): Function now check
	for both ARG_EDITABLE_TEXT and ARG_ADDITIONAL_TEXT. Removed check
	for ARG_TEXT.
	(nautilus_icon_canvas_item_destroy): Both editable_text and
	additonal_text are freed.
	(nautilus_icon_canvas_item_set_arg): Removed ARG_TEXT and added
	handling of ARG_EDITABLE_TEXT and ARG_ADDITIONAL_TEXT.
	(nautilus_icon_canvas_item_get_arg): Removed ARG_TEXT and added
	handling of ARG_EDITABLE_TEXT and ARG_ADDITIONAL_TEXT.
	(draw_or_measure_label_text): Modified function to not draw the
	label icon text if we are renaming in place.
	(draw_or_measure_label_text): Function now combines editable and
	additional text when performing the measuring operation.
	(compute_editable_text_rectangle): Added function to compute
	bounds of editable text. This is used to determine size and
	placement of editable text item when in renaming mode.
	(nautilus_icon_canvas_get_text_bounds): Public API to get bounds
	of icon label text.
	(nautilus_icon_canvas_get_editable_text_bounds): Public API to get
	bounds of editable icon label text.
	(hit_test_pixbuf): Added check against is_renaming flag.
	(nautilus_icon_canvas_get_editable_text): Public API to get
	editable text string.
	(nautilus_icon_canvas_item_set_renaming): Public API to toggle
	is_renaming flag.
	
	* libnautilus-extensions/nautilus-icon-canvas-item.h
	Added public API prototypes to functions described above.	

	* libnautilus-extensions/nautilus-icon-container.c
	Added GET_ICON_EDITABLE_TEXT and GET_ICON_ADDITONAL_TEXT signals.
	Removed GET_ICON_TEXT signal. Added ICON_TEXT_CHANGED signal.
	(icon_toggle_selected): Renaming mode is now exited when a
	selection/deselection occurs.
	(key_press_event): GDK_Return ends rename mode and attempts to
	accept modification. GDK_Escape ends rename mode and reverts
	modification to original.
	(nautilus_icon_container_initialize_class): icon_text_changed,
	get_icon_editable_text and get_icon_additional_text signals are
	registered.
	(editing_started): New function. Called when an edit begins.
	Inits class member variables for edit mode.
	(editing_stopped): New function. Called when edit ends. Cleans
	up edit mode.
	(nautilus_icon_container_initialize): rename_widget and original_text private variables
	are set to NULL.
	(icon_toggle_selected): Added call to end_renaming_mode.
	(nautilus_icon_container_update_icon): Added emitting of
	GET_ICON_EDITABLE_TEXT and GET_ICON_ADDITIONAL_TEXT
	signals. Updated gnome_canvas_item_set to use new arguments
	defined in nautilus-icon-text-item.
	(nautilus_icon_container_show_rename_widget): New
	function. Creates and displays renaming_widget.  Creates cached
	copy of original editable text for later compare, connects signals
	and enters renaming mode.
	(end_renaming_mode): New function. Cleans up and end renaming
	mode.
	(hide_rename_widget): Called by end_renaming_mode to hide and free
	renaming_widget.

	* libnautilus-extensions/nautilus-icon-container.h
	Added prototypes for public functions described above.

	* libnautilus-extensions/nautilus-icon-private.h
	Added boolean for renaming. Added a NautilusIconTextItem variable
	for the renaiming widget.

	* src/file-manager/fm-icon-view.c
	Added defines MENU_PATH_RENAME. Added a char * to hold original
	editable text for a later compare.  Removed get_icon_text_callback
	and added get_icon_editable_text_callback and
	get_icon_additonal_text_callback. These return the editable and
	additonal text of the icon view.
	(rename_icon_callback): Added callback that attempts to rename the
	NautilusFile the icon view represents. Action in not taken if
	there has been no change to the editable text. If the operation
	fails, the user is notified.
	(fm_icon_view_append_selection_context_menu_items): Added Rename
	menu item.
	(append_bonobo_menu_item): Added Rename menu item and callback.
	(update_bonobo_menu_item): Added sensitivity check for the Rename
	item. It is enabled only if a single item is selected.
	(fm_icon_view_icon_text_changed_callback): Added function to
	attempt to change the filename to the new text. Notify user if
	operation fails.
	(get_icon_editable_text_callback): This callback returns the text
	items that are editable by the user using the "Rename" command. In
	the case of FMIconView, this would be the attribute with the name
	"name".
	(get_icon_additional_text_callback): This callback returns the
	text items that are not editable by the user using the "Rename"
	command.

2000-04-17  John Sullivan <sullivan@eazel.com>

	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_monitor_add), (nautilus_file_monitor_remove):
	Added empty implementations for these two routines. Will
	fill in with actual code later after talking to Darin.

	* src/nautilus-index-title.c:
	(nautilus_index_title_set_uri): Monitor file for changes
	in directory item count.
	(release_file): Remove monitoring of file.
	
	* src/file-manager/fm-properties-window.c:
	(name_field_done_editing), (name_field_focus_out),
	(name_field_focus_in), (create_properties_window):
	Made focusing away from the name field in the Properties
	window deselect the text, and focusing in select it.

2000-04-17  John Sullivan <sullivan@eazel.com>

	Fixed bugs, mostly related to editable text fields.

	* README: Made the contents of this file slightly helpful.
	
	* data/mime/nautilus.keys: Added an obscure MIME type that
	someone reported running into.

	* libnautilus-extensions/nautilus-entry.h,
	* libnautilus-extensions/nautilus-entry.c: New files. Define a
	subclass of GtkEntry (one-line text editing field) that fixes
	bugs and adds convenience functions.
	(nautilus_entry_key_press): Override key_press handler to treat
	the keypad Enter key the same as the other Enter key (in GtkEntry
	it inserts a "/r" into the text).
	(nautilus_entry_select_all): Select all text, and move the text
	cursor position to the end.
	(nautilus_entry_select_all_at_idle): Same, but do it at the next
	idle opportunity. Useful since nautilus_entry_select_all won't
	work right if called in a key_press signal handler.
	* libnautilus-extensions/Makefile.am: Build these two new files.

	* src/file-manager/fm-properties-window.c:
	(name_field_activate): New function, updates file name and
	selects all text.
	(create_properties_window): Make name_field be a NautilusEntry.
	This fixes half of bug 433 (Enter keys don't work properly in
	properties window). Also attach to "activate" signal and update
	name change then. This fixes other half of bug 433. Also start
	with name field selected & focused. This fixes bug 432 (properties
	window should appear with name text selected).
	(name_field_update_to_match_file): Only update the displayed text
	if the new name coming in is different. This was needed to make
	select-all-on-activate work.
	(name_field_done_editing): Don't accept empty string as name;
	silently revert back to original name.

	* src/nautilus-bookmarks-window.c:
	(create_bookmarks_window): Change name & uri text fields to 
	NautilusEntry; this causes keypad Enter key to behave like other 
	Enter key. Also connect to focus_in and activate signals.
	(update_bookmark_from_text): New function, extracted from
	on_text_field_focus_out_event.
	(on_text_field_focus_out_event): Deselect all text after updating
	bookmark.
	(on_text_field_focus_in_event): New function, select all text.
	(name_or_uri_field_activate): New function, update bookmark and
	select all text.
	
	* src/nautilus-location-bar.c:
	(nautilus_location_bar_initialize): Use NautilusEntry instead of
	GtkEntry. This makes keypad Enter act like other Enter in uri-entry
	field.
	
	* src/ntl-window-msgs.c:
	(nautilus_window_end_location_change_callback): Make "Nautilus can't 
	handle this type of file" message mention (human-readable version of) 
	file type.

2000-04-17  Andy Hertzfeld <andy@eazel.com>

	fixed bug involving making thumbnails for directories where we don't
	have write permissions by making them in $HOME/.nautilus/thumbnails.
	
	* libnautilus/nautilus-directory.c:
	moved escape_slashes routine to nautilus-strings so it can be shared
	* libnautilus/nautilus-string.c,h:
	added nautilus_str_escape_slashes, copies from nautilus-directory
	* libnautilus/nautilus-icon-factory.c:
	added boolean to make_thumbnail_path to make the thumbnails in
	$HOME/.nautilus/thumbnails instead of in the local directory, and
	then used it when we can't write to the local one.
	
2000-04-16  Andy Hertzfeld <andy@eazel.com>

	* src/ntl-index-panel.c:
	fixed problem where the command buttons in the index panel were overlapping
	the metaview.  They are not supposed to be showing if a metaview is selected.
	Fixed by hiding them in nautilus_index_panel_update_buttons if a metaview
	is selected.
	
2000-04-15  Andy Hertzfeld <andy@eazel.com>

	installed some icons for common file types, purloined from gmc
	
	* icons/Makefile.am:
	added a bunch of icons
	* icons/gnome-icon-x-mp3.png: new icon for mp3s
	* icons/gnome-compressed.png: new icon for gzips
	* icons/gnome-library.png: new icon for shared libraries
	* icons/gnome-manpage.png: new icon for man pages
	* icons/gnome-objectfile.png: new icon for object code files
	* icons/gnome-pack-deb.png: new icon for debian packages
	* icons/gnome-pack-rpm.png: new icon for rpm packages
	* icons/gnome-package: new icon for tar archives
	* data/mime/nautilus.keys:
	added icon-filename entries to appropriate mime-types
	
2000-04-14  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/nautilus-string.c: 
	* libnautilus-extensions/nautilus-string.h:
	After a chat with Rebecca, named nautilus_str_underscore_escape to
	nautilus_str_double_underscores since the latter name more
	accurately describes what it does.
	(nautilus_str_double_underscores): Changed the function to allow
	NULL and return NULL instead of doing g_return_val_if_fail.
	(Also reformatted a bit and made a few gratuitous changes.)

	* libnautilus-extensions/nautilus-bookmark.c:
	* libnautilus-extensions/nautilus-bookmark.h:
	(nautilus_bookmark_get_menu_display_name):
	Moved the logic about escaping menu characters up one level so
	the bookmark class doesn't have to know about it. This removes
	the function from NautilusBookmark completely.

	* src/nautilus-window-menus.c:
	(append_bookmark_to_menu): Fixed a storage leak and moved the
	double-underscore escaping in here.

2000-04-14 Rebecca Schulman <rebecka@eazel.com>

	Fixed test cases on nautilus-string.c to be correct
	
2000-04-14 Rebecca Schulman <rebecka@eazel.com>

	Bookmarks with '_' characters display
	correctly now on menus
	
	* libnautilus-extensions/nautilus-string.c
	New function to escape '_' characters in strings
	for menu display
	* libnautilus-extensions/nautilus-bookmark.c
	New function to take bookmarks and return
	'_' escaped names
	* src/nautilus-window-menus.c
	Calls function to escape bookmark names

2000-04-14  Darin Adler  <darin@eazel.com>

	Finished task 174 (Use deferred calculation to compute directory
	counts).

	* libnautilus-extensions/Makefile.am: 
	* libnautilus-extensions/nautilus-file-attributes.h: 
	Added a header file for names of file attributes.

	* libnautilus-extensions/nautilus-directory-private.h: 
	* libnautilus-extensions/nautilus-directory.c: 
	* libnautilus-extensions/nautilus-directory.h: 
	* libnautilus-extensions/nautilus-file-private.h: 
	* libnautilus-extensions/nautilus-file.c: 
	* libnautilus-extensions/nautilus-file.h: 
	Added background computation of the "directory item count"
	attribute. This is serving as a test case for the API for
	requesting additional information.

	* src/file-manager/fm-directory-view.c:
	(display_selection_info): Changed to use the new interface that
	can sometimes return "I don't know" for the number of items in
	a particular directory.
	(stop_load), (done_loading), (display_pending_files),
	(fm_directory_view_stop): Fixed a mistake in the old code where
	we stopped monitoring once the files were discovered. We need to
	keep monitoring.
	(finish_loading_uri): Pass in an attribute that we want to monitor:
	NAUTILUS_FILE_ATTRIBUTE_DIRECTORY_ITEM_COUNT.

2000-04-14 Rebecca Schulman <rebecka@eazel.com>
	
	Bookmarks with '_' characters display
	correctly now on menus
	
	* libnautilus-extensions/nautilus-string.c
	New function to escape '_' characters in strings
	for menu display
	* libnautilus-extensions/nautilus-bookmark.c
	New function to take bookmarks and return
	'_' escaped names
	* src/nautilus-window-menus.c
	Calls function to escape bookmark names

Fri Apr 14 16:35:32 2000  Raph Levien  <raph@acm.org>

	* librsvg/test-rsvg.c: Added a command line tester for rsvg, which
	outputs alpha-transparent PNG's from SVG input files. The PNG save
	code is lifted from similar code in nautilus-icon-factory, and
	should be deleted when this functionality appears in gdk-pixbuf.

	* librsvg/Makefile.am: Build test-rsvg.

2000-04-14  Andy Hertzfeld <andy@eazel.com>

	* libnautilus-extensions/nautilus-icon-factory.c:
	using Raph's new machinery, made icons for .svg files use 
	a rendering of the file itself.
	
2000-04-14  Christopher James Lahey  <clahey@helixcode.com>

	* src/ntl-window.c (nautilus_window_constructed): Change the
	packing of the first pane so that it doesn't autoresize.

	* libnautilus-extensions/nautilus-file-utilities.c
	(nautilus_user_top_directory): Change this routine to use
	gnome_datadir_file to get the share directory.  Also, change to
	using g_strdup_printf.

2000-04-14  Darin Adler  <darin@eazel.com>

	* libnautilus-extensions/.cvsignore: Fixed to match new directory
	contents.

2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	Split libnautilus into two pieces.  

	libnautilus now only contains the view interfaces needed by nautilus 
	components.

	These are the interfaces defined in nautilus-view-component.idl.
	
	libnautilus-extensions containes the remainder of the stuff.

	Also used the cvs repository munging opportunity to do some of the
	ntl-* renaming outlined in the RENAIMING file.

	* libnautilus/bonobo-stream-vfs.c
	  libnautilus/bonobo-stream-vfs.h,
	  libnautilus/gtkscrollframe.c,
	  libnautilus/gtkscrollframe.h,
	  libnautilus/nautilus-alloc.h,
	  libnautilus/nautilus-background-canvas-group.c,
	  libnautilus/nautilus-background-canvas-group.h,
	  libnautilus/nautilus-background.c,
	  libnautilus/nautilus-background.h,
	  libnautilus/nautilus-bonobo-extensions.c,
	  libnautilus/nautilus-bonobo-extensions.h,
	  libnautilus/nautilus-bookmark.c,
	  libnautilus/nautilus-bookmark.h,
	  libnautilus/nautilus-debug.c,
	  libnautilus/nautilus-debug.h,
	  libnautilus/nautilus-default-file-icon.c,
	  libnautilus/nautilus-default-file-icon.h,
	  libnautilus/nautilus-directory-background.c,
	  libnautilus/nautilus-directory-background.h,
	  libnautilus/nautilus-directory-private.h,
	  libnautilus/nautilus-directory.c,
	  libnautilus/nautilus-directory.h,
	  libnautilus/nautilus-file-private.h,
	  libnautilus/nautilus-file-utilities.c,
	  libnautilus/nautilus-file-utilities.h,
	  libnautilus/nautilus-file.c,
	  libnautilus/nautilus-file.h,
	  libnautilus/nautilus-gdk-extensions.c,
	  libnautilus/nautilus-gdk-extensions.h,
	  libnautilus/nautilus-gdk-pixbuf-extensions.c,
	  libnautilus/nautilus-gdk-pixbuf-extensions.h,
	  libnautilus/nautilus-glib-extensions.c,
	  libnautilus/nautilus-glib-extensions.h,
	  libnautilus/nautilus-global-preferences.c,
	  libnautilus/nautilus-global-preferences.h,
	  libnautilus/nautilus-gnome-extensions.c,
	  libnautilus/nautilus-gnome-extensions.h,
	  libnautilus/nautilus-graphic-effects.c,
	  libnautilus/nautilus-graphic-effects.h,
	  libnautilus/nautilus-gtk-extensions.c,
	  libnautilus/nautilus-gtk-extensions.h,
	  libnautilus/nautilus-gtk-macros.h,
	  libnautilus/nautilus-icon-canvas-item.c,
	  libnautilus/nautilus-icon-canvas-item.h,
	  libnautilus/nautilus-icon-container.c,
	  libnautilus/nautilus-icon-container.h,
	  libnautilus/nautilus-icon-dnd.c,
	  libnautilus/nautilus-icon-dnd.h,
	  libnautilus/nautilus-icon-factory.c,
	  libnautilus/nautilus-icon-factory.h,
	  libnautilus/nautilus-icon-grid.c,
	  libnautilus/nautilus-icon-grid.h,
	  libnautilus/nautilus-icon-private.h,
	  libnautilus/nautilus-lib-self-check-functions.c,
	  libnautilus/nautilus-lib-self-check-functions.h,
	  libnautilus/nautilus-list-column-title.c,
	  libnautilus/nautilus-list-column-title.h,
	  libnautilus/nautilus-list.c,
	  libnautilus/nautilus-list.h,
	  libnautilus/nautilus-metadata.h,
	  libnautilus/nautilus-mime-type.c,
	  libnautilus/nautilus-mime-type.h,
	  libnautilus/nautilus-self-checks.c,
	  libnautilus/nautilus-self-checks.h,
	  libnautilus/nautilus-string-list.c,
	  libnautilus/nautilus-string-list.h,
	  libnautilus/nautilus-string.c,
	  libnautilus/nautilus-string.h,
	  libnautilus/nautilus-xml-extensions.c,
	  libnautilus/nautilus-xml-extensions.h: moved to
	libnautilus-extensions.

	  libnautilus/ntl-content-view-frame.c,
	  libnautilus/ntl-content-view-frame.h,
	  libnautilus/ntl-meta-view-frame.c,
	  libnautilus/ntl-meta-view-frame.h,
	  libnautilus/ntl-view-frame.c,
	  libnautilus/ntl-view-frame.h: moved to
	libnautilus-extensions and renamed from "ntl-*" to "nautilus-*"

	* Makefile.am,
	  configure.in: added libnautilus-extensions to the build.

	* libnautilus/.cvsignore,
	  libnautilus/Makefile.am,
	  libnautilus/libnautilus.h,
	  libnautilus/nautilus-content-view-frame.c,
	  libnautilus/nautilus-content-view-frame.h,
	  libnautilus/nautilus-meta-view-frame.c,
	  libnautilus/nautilus-meta-view-frame.h,
	  libnautilus/nautilus-view-frame-private.h,
	  libnautilus/nautilus-view-frame.c,
	  libnautilus/nautilus-view-frame.h,
	  libnautilus/nautilus-zoomable.c: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* libnautilus-extensions/Makefile.am,
	  libnautilus-extensions/nautilus-global-preferences.c,
	  libnautilus-extensions/nautilus-global-preferences.h,
	  libnautilus-extensions/nautilus-icon-factory.h: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* nautilus-widgets/nautilus-preferences-box.c,
	  nautilus-widgets/nautilus-preferences-dialog.c,
	  nautilus-widgets/nautilus-preferences-group.c,
	  nautilus-widgets/nautilus-preferences-item.c,
	  nautilus-widgets/nautilus-preferences-pane.c,
	  nautilus-widgets/nautilus-preferences.c,
	  nautilus-widgets/nautilus-radio-button-group.c: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* src/Makefile.am,
	  src/nautilus-bookmark-list.c,
	  src/nautilus-bookmark-list.h,
	  src/nautilus-bookmarks-window.c,
	  src/nautilus-index-tabs.c,
	  src/nautilus-index-title.c,
	  src/nautilus-location-bar.c,
	  src/nautilus-signaller.c,
	  src/nautilus-window-menus.c,
	  src/nautilus-window-toolbars.c,
	  src/nautilus-zoom-control.c,
	  src/ntl-app.c,
	  src/ntl-index-panel.c,
	  src/ntl-main.c,
	  src/ntl-meta-view.c,
	  src/ntl-uri-map.c,
	  src/ntl-uri-map.h,
	  src/ntl-view-bonobo-subdoc.c,
	  src/ntl-view.c,
	  src/ntl-window-msgs.c,
	  src/ntl-window-state.c,
	  src/ntl-window.c,
	  src/ntl-window.h: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* src/file-manager/fm-directory-view.c,
	  src/file-manager/fm-directory-view.h,
	  src/file-manager/fm-icon-text-window.c,
	  src/file-manager/fm-icon-view.c,
	  src/file-manager/fm-list-view.c,
	  src/file-manager/fm-properties-window.c,
	  src/file-manager/fm-properties-window.h: Updated for libnautilus ->
	libnautilus-extensions changes. 

	* components/history/Makefile.am,
	  components/history/ntl-history-view.c,
	  components/html/Makefile.am,
	  components/html/ntl-web-browser.c,
	  components/music/Makefile.am,
	  components/music/nautilus-music-view.c,
	  components/music/nautilus-music-view.h,
	  components/notes/Makefile.am,
	  components/notes/ntl-notes.c,
	  components/rpmview/Makefile.am,
	  components/rpmview/nautilus-rpm-view.c,
	  components/rpmview/nautilus-rpm-view.h,
	  components/sample/Makefile.am,
	  components/sample/nautilus-sample-content-view.c,
	  components/sample/nautilus-sample-content-view.h,
	  components/services/startup/Makefile.am,
	  components/services/startup/eazel-register.c,
	  components/services/startup/nautilus-service-startup-view.c,
	  components/services/startup/nautilus-service-startup-view.h:
	Updated components for libnautilus -> libnautilus-extensions changes. 
	
2000-04-14  Fatih Demir	<kabalak@gmx.net>

	* configure.in : Added tr to ALL_LINGUAS .

2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	* po/ChangeLog: Added this thing to make 'make dist' happy.

	Use that from now on for changes in po/.  Seems to be the standard
	thing to do.
	
2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus/libnautilus.h
	  libnautilus/nautilus-zoomable.h
	  libnautilus/ntl-view-frame.h:

	Include the new <nautilus-view-component.h> instead of
	<nautilus.h>
	
	  src/ntl-uri-map.h
	  src/ntl-view.h:

	Same.
	
2000-04-14  Ramiro Estrugo  <ramiro@eazel.com>

	* components/rpmview/nautilus-rpm-view.c:

	Did not build on redhat 5.2 because RPMTAG_FILENAMES has been
	obseleted in the version of rpm that ships with 5.2 apparently.
	I added a dumb hack to define RPMTAG_FILENAMES to
	RPMTAG_OLDFILENAMES which is almost surely the wrong thing to do,
	but i really need to have nautilus building while i do the
	nautilus view changes.  I gave myself a bug to properly address
	this soon (472).
	
2000-04-14  Maciej Stachowiak  <mjs@eazel.com>

	* ChangeLog-20000414: rolled over from ChangeLog.
	

