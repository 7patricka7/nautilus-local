AC_INIT(src)

if test -n "$GNOME2_PATH"; then
	PATH="$GNOME2_PATH/bin:$PATH"
	export PATH
fi

AM_INIT_AUTOMAKE(nautilus, 0.1.0)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AM_DISABLE_STATIC
AM_PROG_LIBTOOL

AM_SANITY_CHECK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_ISC_POSIX

AC_ARG_ENABLE(more-warnings,
[--enable-more-warnings	Maximum compiler warnings],
set_more_warnings="$enableval", set_more_warnings=yes)

# Arg is enabled
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	echo "enable compile warnings = $set_more_warnings"
	CFLAGS="$CFLAGS \
	-Wall -Wno-uninitialized \
	-Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
	-Wnested-externs -Wpointer-arith \
	-Wno-sign-compare -Wsign-promo"
fi
if test "$GCC" = "yes"; then
	WERROR="-Werror"
fi
AC_SUBST(WERROR)

dnl ORBit
AM_PATH_ORBIT

dnl 
EAZEL_SERVICES=
AC_ARG_ENABLE(eazel-services,
[--enable-eazel-services	Eazel services],
EAZEL_SERVICES=1
AC_DEFINE(EAZEL_SERVICES))

AC_SUBST(EAZEL_SERVICES)

AM_CONDITIONAL(EAZEL_SERVICES, test "x$EAZEL_SERVICES" = "x1")

dnl ====================================
dnl =
dnl = authenticate helper
dnl =
dnl ====================================
BUILD_AUTHENTICATE_HELPER=

AC_CHECK_LIB(pam, pam_authenticate, 
  [BUILD_AUTHENTICATE_HELPER=1
  AC_DEFINE(HAVE_PAM)
  AC_CHECK_LIB(pam_misc, pam_misc_setenv,
  [PAM_LIBS="-ldl -lpam -lpam_misc"], [PAM_LIBS="-ldl -lpam"], -ldl -lpam) ], [PAM_LIBS=], -ldl)

AC_SUBST(PAM_LIBS)

AM_CONDITIONAL(BUILD_AUTHENTICATE_HELPER, test "x$BUILD_AUTHENTICATE_HELPER" = "x1")
dnl ====================================
dnl = end authenticate helper
dnl ====================================

dnl ====================================
dnl =
dnl = mozilla embedded component support
dnl =
dnl ====================================
BUILD_MOZILLA_COMPONENT=

try_mozilla="false"
mozilla_place=

AC_MSG_CHECKING(for Mozilla)

AC_ARG_WITH(mozilla,
	[--{with,without}-mozilla Compile with Mozilla embedded component support or without it],
	if test "$withval" = "no"; then
		try_mozilla="false"
	else
		try_mozilla="true"
		mozilla_place=$withval
	fi
)

dnl 
dnl The strategy for detecting mozilla here is to look for the mozilla shared libs
dnl that the mozilla component links against and the header files for the gtkmozembed
dnl widget.
dnl
dnl This is the best i can do given the lameness of mozilla versioning.  If someone
dnl has a better way to do this, please send mail to ramiro@eazel.com
dnl
if test "$try_mozilla" = "true"
then
	found_mozilla="false"
	moz_lib=$mozilla_place/dist/bin
	moz_src=$mozilla_place/dist/include

	if test -d $lib_place
	then
		if test -x $moz_lib/libxpcom.so -a \
                        -x $moz_lib/libnspr4.so -a \
                        -x $moz_lib/libgtkembedmoz.so -a \
                        -x $moz_lib/libgtksuperwin.so -a \
                        -f $moz_src/gtkmozembed.h
		then
			found_mozilla="true"
		fi
	fi

	if test "$found_mozilla" = "true"
	then
		AC_MSG_RESULT(yes)

		echo "   Using Mozilla installation in $mozilla_place"

		MOZILLA_COMPONENT_CFLAGS=-I${mozilla_place}/dist/include
		MOZILLA_COMPONENT_LDFLAGS=-L${mozilla_place}/dist/bin
		MOZILLA_COMPONENT_LIBS="-lgtkembedmoz -lgtksuperwin -lxpcom -lnspr4 -lplc4 -lplds4"

		AC_SUBST(MOZILLA_COMPONENT_CFLAGS)
		AC_SUBST(MOZILLA_COMPONENT_LDFLAGS)
		AC_SUBST(MOZILLA_COMPONENT_LIBS)
	else
		AC_MSG_RESULT(no)
AC_MSG_ERROR(
***
*** There doesnt seem to be a valid mozilla installation in $mozilla_place.
*** Please fetch the latest mozilla milestone from 
*** ftp://ftp.mozilla.org/pub/mozilla/releases/.
***)
	fi
else
	AC_MSG_RESULT(no)
fi

AM_CONDITIONAL(BUILD_MOZILLA_COMPONENT, test "x$found_mozilla" = "xtrue")

dnl ====================================
dnl = end mozilla hacks
dnl ====================================

dnl ====================================
dnl = rpmview component support
dnl ====================================

rpm_libs=
AC_CHECK_LIB(bz2, bzread, [rpm_libs=-lbz2], 
dnl <= Check for bzip2 > 1.0.0
	AC_CHECK_LIB(bz2, BZ2_bzread, [rpm_libs=-lbz2])
dnl =>
AC_CHECK_LIB(popt, poptParseArgvString, [rpm_libs="$rpm_libs -lpopt"])
AC_CHECK_LIB(rpm, rpmRunTransactions,[build_rpmview=true],
  [build_rpmview=false],-lz $rpm_libs -ldb)
LDFLAGS="$save_LDFLAGS"
if test "x$build_rpmview" = "xtrue" ; then
  AC_DEFINE(HAVE_RPM)
  RPM_LIBS="-lrpm -lz $rpm_libs -ldb"
fi
AC_SUBST(RPM_LIBS)
AM_CONDITIONAL(BUILD_RPMVIEW_COMPONENT, test "x$build_rpmview" = "xtrue")

dnl ====================================
dnl = end rpmview checks
dnl ====================================

dnl Checks for libraries.
AM_PATH_GLIB(1.2.0,,
AC_MSG_ERROR([
*** GLIB 1.2.0 or better is required. The latest version of GLIB
*** is always available from ftp://ftp.gtk.org/.]))

AM_PATH_GNOME(1.0.0,,AC_MSG_ERROR([*** GNOME 1.0.0 or better is
required.]), gnomecanvaspixbuf bonobo vfs idl)
AC_SUBST(GNOMECANVASPIXBUF_LIBS)
AC_SUBST(GNOMECANVASPIXBUF_INCLUDEDIR)
AC_SUBST(GNORBA_CFLAGS)
AC_SUBST(GNORBA_LIBS)
AC_SUBST(BONOBO_CFLAGS)
AC_SUBST(BONOBO_LIBS)
AC_SUBST(VFS_CFLAGS)
AC_SUBST(VFS_LIBS)
AC_SUBST(IDL_CFLAGS)

AM_PATH_OAF(0.1.0)

AM_PATH_GCONF(0.1.0,,,gconf-gtk)

AC_PATH_PROG(XML_CONFIG,xml-config,no)
if test x$XML_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find xml-config please install the gnome-xml package)
fi
XML_LIBS=`$XML_CONFIG --libs`
XML_CFLAGS=`$XML_CONFIG --cflags`
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)

dnl ====================================
dnl = begin gnet checks
dnl ====================================

AC_PATH_PROG(GNET_CONFIG,gnet-config,no)
if test x$GNET_CONFIG = xno; then
  AC_MSG_ERROR(Could not find gnet libraries.)
fi
GNET_LIBS=`$GNET_CONFIG --libs`
GNET_CFLAGS=`$GNET_CONFIG --cflags`
AC_SUBST(GNET_LIBS)
AC_SUBST(GNET_CFLAGS)

dnl ====================================
dnl = end gnet checks
dnl ====================================

dnl ====================================
dnl = begin gnome-http checks
dnl ====================================

AC_PATH_PROG(GHTTP_CONFIG,gnome-config,no)
if test x$GHTTP_CONFIG = xno; then
  AC_MSG_ERROR(Could not find ghttp libraries.)
fi
GHTTP_LIBS=`$GHTTP_CONFIG --libs ghttp`
GHTTP_CFLAGS=`$GHTTP_CONFIG --cflags ghttp`
AC_SUBST(GHTTP_LIBS)
AC_SUBST(GHTTP_CFLAGS)

dnl ====================================
dnl = end ghttp checks
dnl ====================================

dnl ====================================
dnl = begin gdk-pixbuf checks
dnl ====================================
AM_PATH_GDK_PIXBUF(0.7.0,,
AC_MSG_ERROR([*** gdk_pixbuf 0.7.0 or better is required.]))
dnl ====================================
dnl = begin gdk-pixbuf checks
dnl ====================================


AC_PATH_PROG(LIBWWW_CONFIG,libwww-config,no)
if test x$LIBWWW_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find libwww-config try http://www.w3.org/Library/Distribution.html to get a copy of libwww)
fi
LIBWWW_LIBS=`$LIBWWW_CONFIG --libs`
LIBWWW_CFLAGS=`$LIBWWW_CONFIG --cflags`
AC_SUBST(LIBWWW_LIBS)
AC_SUBST(LIBWWW_CFLAGS)

AC_CHECK_LIB(z, gzopen, [Z_LIBS=-lz
AC_SUBST(Z_LIBS)], AC_MSG_ERROR([*** zlib is required]))

dnl GtkHTML checking
dnl Currently we cannot do any version check as GtkHTML has not
dnl been released yet.
AC_MSG_CHECKING(for GtkHTML)
if gnome-config --libs gtkhtml > /dev/null 2>&1; then
    AC_MSG_RESULT(yes)
    GTKHTML_LIBS=`gnome-config --libs gtkhtml`
    GTKHTML_CFLAGS=`gnome-config --cflags gtkhtml`
else
    AC_MSG_ERROR([Not Found])
    AC_MSG_ERROR([GtkHTML from the GNOME CVS is required])
fi
AC_SUBST(GTKHTML_LIBS)
AC_SUBST(GTKHTML_CFLAGS)

dnl Test for libpng
  if test -z "$LIBPNG"; then
    AC_CHECK_LIB(png, png_read_info,
      AC_CHECK_HEADER(png.h,
        png_ok=yes,
        png_ok=no),
      AC_MSG_ERROR(*** (PNG library not found) ***), -lz -lm)
    if test "$png_ok" = yes; then
      AC_MSG_CHECKING([for png_structp in png.h])
      AC_TRY_COMPILE([#include <png.h>],
        [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct;],
        png_ok=yes,
        png_ok=no)
      AC_MSG_RESULT($png_ok)
      if test "$png_ok" = yes; then
        PNG='png'; LIBPNG='-lpng -lz'
      else
        AC_MSG_WARN(*** PNG loader will not be built (PNG library is too old) ***)
      fi
    else
     AC_MSG_WARN(*** PNG loader will not be built (PNG header file not found) ***)
    fi
  fi

AC_SUBST(LIBPNG)

dnl Checks for i18n
ALL_LINGUAS="da de fr gl ja ko no ru sv tr"
AM_GNOME_GETTEXT
# AM_GNOME_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)



dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

AC_OUTPUT([
nautilus.spec
Makefile
icons/Makefile
icons/eazel/Makefile
icons/vector/Makefile
data/Makefile
data/top/Makefile
data/backgrounds/Makefile
data/emblems/Makefile
data/linksets/Makefile
idl/Makefile
librsvg/Makefile
libnautilus/Makefile
libnautilus-extensions/Makefile
src/Makefile
src/file-manager/Makefile
components/Makefile
components/hardware/Makefile
components/hardware/icons/Makefile
components/history/Makefile
components/help/Makefile
components/help/converters/Makefile
components/help/converters/gnome-db2html2/Makefile
components/help/converters/gnome-info2html2/Makefile
components/help/converters/gnome-man2html2/Makefile
components/html/Makefile
components/websearch/Makefile
components/music/Makefile
components/notes/Makefile
components/rpmview/Makefile
components/sample/Makefile
components/mozilla/Makefile
components/services/Makefile
components/services/trilobite/Makefile
components/services/trilobite/idl/Makefile
components/services/trilobite/libtrilobite/Makefile
components/services/trilobite/sample/Makefile
components/services/trilobite/sample/service/Makefile
components/services/trilobite/sample/command-line/Makefile
components/services/trilobite/sample/nautilus-view/Makefile
components/services/trilobite/sample/nautilus-view/icons/Makefile
components/services/time/Makefile
components/services/time/service/Makefile
components/services/time/command-line/Makefile
components/services/time/nautilus-view/Makefile
components/services/time/idl/Makefile
components/services/startup/Makefile
components/services/startup/lib/Makefile
components/services/startup/command-line/Makefile
components/services/startup/nautilus-view/Makefile
components/services/startup/nautilus-view/icons/Makefile
components/services/install/Makefile
components/services/install/lib/Makefile
components/services/install/idl/Makefile
components/services/install/command-line/Makefile
components/services/install/nautilus-view/Makefile
components/loser/Makefile
components/loser/content/Makefile
components/loser/sidebar/Makefile
helper-utilities/Makefile
helper-utilities/authenticate/Makefile
po/Makefile.in
intl/Makefile
test/Makefile
])
