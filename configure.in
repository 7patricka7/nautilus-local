AC_INIT(src)

if test -n "$GNOME2_PATH"; then
	PATH="$GNOME2_PATH/bin:$PATH"
	export PATH
fi

AM_INIT_AUTOMAKE(nautilus, 0.1)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AM_DISABLE_STATIC
AM_PROG_LIBTOOL

AM_SANITY_CHECK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_ISC_POSIX

AC_ARG_ENABLE(more-warnings,
[--enable-more-warnings	Maximum compiler warnings],
set_more_warnings="$enableval", set_more_warnings=yes)

# Arg is enabled
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	echo "enable compile warnings = $set_more_warnings"
	CFLAGS="$CFLAGS \
	-Wall -Wno-uninitialized \
	-Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
	-Wnested-externs -Wpointer-arith \
	-Wno-sign-compare -Wsign-promo"
fi
if test "$GCC" = "yes"; then
	WERROR="-Werror"
fi
AC_SUBST(WERROR)

dnl 
EAZEL_SERVICES=
AC_ARG_ENABLE(eazel-services,
[--enable-eazel-services	Eazel services],
EAZEL_SERVICES=1
AC_DEFINE(EAZEL_SERVICES))

AC_SUBST(EAZEL_SERVICES)

AM_CONDITIONAL(EAZEL_SERVICES, test "x$EAZEL_SERVICES" = "x1")

dnl Checks for libraries.
AM_PATH_GLIB(1.2.0,,
AC_MSG_ERROR([
*** GLIB 1.2.0 or better is required. The latest version of GLIB
*** is always available from ftp://ftp.gtk.org/.]))

AM_PATH_GNOME(1.0.0,,AC_MSG_ERROR([*** GNOME 1.0.0 or better is
required.]), gnomecanvaspixbuf bonobo vfs)
AC_SUBST(GNOMECANVASPIXBUF_LIBS)
AC_SUBST(GNOMECANVASPIXBUF_INCLUDEDIR)
AC_SUBST(GNORBA_CFLAGS)
AC_SUBST(GNORBA_LIBS)
AC_SUBST(BONOBO_CFLAGS)
AC_SUBST(BONOBO_LIBS)
AC_SUBST(VFS_CFLAGS)
AC_SUBST(VFS_LIBS)

AM_PATH_LIBGLADE(,AC_MSG_ERROR([*** Libglade 0.7 or better is needed.]), gnome)

AC_PATH_PROG(XML_CONFIG,xml-config,no)
if test x$XML_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find xml-config please install the gnome-xml package)
fi
XML_LIBS=`$XML_CONFIG --libs`
XML_CFLAGS=`$XML_CONFIG --cflags`
AC_SUBST(XML_LIBS)
AC_SUBST(XML_CFLAGS)

AC_PATH_PROG(LIBWWW_CONFIG,libwww-config,no)
if test x$LIBWWW_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find libwww-config try http://www.w3.org/Library/Distribution.html to get a copy of libwww)
fi
LIBWWW_LIBS=`$LIBWWW_CONFIG --libs`
LIBWWW_CFLAGS=`$LIBWWW_CONFIG --cflags`
AC_SUBST(LIBWWW_LIBS)
AC_SUBST(LIBWWW_CFLAGS)

AC_CHECK_LIB(z, gzopen, [Z_LIBS=-lz
AC_SUBST(Z_LIBS)], AC_MSG_ERROR([*** zlib is required]))

dnl GtkHTML checking
dnl Currently we cannot do any version check as GtkHTML has not
dnl been released yet.
AC_MSG_CHECKING(for GtkHTML)
if gnome-config --libs gtkhtml > /dev/null 2>&1; then
    AC_MSG_RESULT(yes)
    GTKHTML_LIBS=`gnome-config --libs gtkhtml`
    GTKHTML_CFLAGS=`gnome-config --cflags gtkhtml`
else
    AC_MSG_ERROR([Not Found])
    AC_MSG_ERROR([GtkHTML from the GNOME CVS is required])
fi
AC_SUBST(GTKHTML_LIBS)
AC_SUBST(GTKHTML_CFLAGS)

dnl Test for libpng
  if test -z "$LIBPNG"; then
    AC_CHECK_LIB(png, png_read_info,
      AC_CHECK_HEADER(png.h,
        png_ok=yes,
        png_ok=no),
      AC_MSG_ERROR(*** (PNG library not found) ***), -lz -lm)
    if test "$png_ok" = yes; then
      AC_MSG_CHECKING([for png_structp in png.h])
      AC_TRY_COMPILE([#include <png.h>],
        [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct;],
        png_ok=yes,
        png_ok=no)
      AC_MSG_RESULT($png_ok)
      if test "$png_ok" = yes; then
        PNG='png'; LIBPNG='-lpng -lz'
      else
        AC_MSG_WARN(*** PNG loader will not be built (PNG library is too old) ***)
      fi
    else
     AC_MSG_WARN(*** PNG loader will not be built (PNG header file not found) ***)
    fi
  fi

AC_SUBST(LIBPNG)

dnl Checks for i18n
ALL_LINGUAS="no ru tr"
AM_GNOME_GETTEXT
# AM_GNOME_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)



dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

AC_OUTPUT([
Makefile
icons/Makefile
icons/eazel/Makefile
data/Makefile
data/mime/Makefile
data/top/Makefile
idl/Makefile
librsvg/Makefile
libnautilus/Makefile
libnautilus-extensions/Makefile
nautilus-widgets/Makefile
src/Makefile
src/file-manager/Makefile
components/Makefile
components/history/Makefile
components/help/Makefile
components/help/converters/Makefile
components/help/converters/gnome-db2html2/Makefile
components/help/converters/gnome-info2html2/Makefile
components/help/converters/gnome-man2html2/Makefile
components/html/Makefile
components/websearch/Makefile
components/music/Makefile
components/notes/Makefile
components/rpmview/Makefile
components/sample/Makefile
components/services/Makefile
components/services/startup/Makefile
components/services/startup/icons/Makefile
components/services/install/Makefile
po/Makefile.in
intl/Makefile
])
