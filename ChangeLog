2000-10-18  Eskil Heyn Olsen  <eskil@eazel.com>

	* configure.in:
	If no bonobo-ui-extract, AC_MSG_ERROR rather then cryptic failure
	during compile.
	
	* libnautilus/Makefile.am:
	Removed some evil blankspace

	* po/POTFILES.in
	Had to remove nautitlus-mozilla-ui.xml.h, since it's a conditional
	build, and eg. is not built on tinderbox.eazel.com. Better fix
	will have to come later, need new rpms' in softcat.
	
2000-10-18  J Shane Culpepper  <pepper@eazel.com>

	* components/services/summary/nautilus-view/nautilus-summary-view.c
	: (generate_summary_form), (generate_service_entry_row),
	(generate_eazel_news_entry_row), (generate_update_news_entry_row),
	(authn_cb_succeeded), (authn_cb_failed), (login_button_cb),
	(generate_error_dialog), (generate_login_dialog),
	(widget_set_nautilus_background_color),
	(nautilus_summary_view_initialize),
	(nautilus_summary_view_load_uri):

	New summary view ui.  Still missing a few fetures but works ok now.

2000-10-18  Mathieu Lacage  <mathieu@eazel.com>

	disable bug-buddy for nautilus.
	* src/nautilus-main.c: (main):

2000-10-19  Kjartan Maraas  <kmaraas@gnome.org>

	* */Makefile.am: Feeble attempt to hook up generation
	of .h files from the *-ui.xml files to get them included
	in the translations. This will need to be done in a better
	way I guess.
	* configure.in: Added a check for bonobo-ui-extract.
	
2000-10-18  Pavel Cisler  <pavel@eazel.com>

	* components/tree/nautilus-tree-view.c:
	* libnautilus-extensions/nautilus-directory.c:
	(nautilus_directory_notify_files_moved),
	(nautilus_directory_schedule_metadata_copy),
	(nautilus_directory_schedule_metadata_move),
	(nautilus_directory_schedule_metadata_remove):
	* libnautilus-extensions/nautilus-file-utilities.c:
	(nautilus_uri_get_basename):
	* libnautilus-extensions/nautilus-file-utilities.h:
	* libnautilus-extensions/nautilus-file.c:
	(nautilus_file_get_internal):
	* src/nautilus-theme-selector.c: (add_theme_to_icons):
	Clean up calls to gnome_vfs_extract_short_name, remove explicit
	unescaping because gnome_vfs_extract_short_name now does it.
	Eliminate some copy-paste technology, creating a new call
	nautilus_uri_get_basename.

2000-10-18  Robey Pointer  <robey@eazel.com>

	* components/services/login/nautilus-view/nautilus-change-password-
	view.c: (user_logged_in), (generate_change_password_form):
	* components/services/login/nautilus-view/nautilus-change-password-
	view.oafinfo:

	Fill in the username automatically if you're already logged in.
	Make the prompts more i18n'able.  Change title from "Log in" to
	"Change password".  Fix oafinfo typo that caused the change-pw
	view to never get displayed.
	
2000-10-18  Darin Adler  <darin@eazel.com>

	Some Music View fixes. Andy asked me to work on this.
	
	* components/music/main.c: (main): Make warnings drop into the
	debugger.
	
	* components/music/nautilus-music-view.c:
	(nautilus_music_view_destroy): Change to use a NautilusFile object
	instead of using a uri string.
	(set_album_cover): Use the file object.
	(metadata_callback): Get rid of the unref that was causing a lot
	of trouble.
	(nautilus_music_view_update): Get the uri from the file object
	instead of vice versa.
	(detach_file): Cancel the call when releasing the file.
	(nautilus_music_view_load_uri): Release the old file and get a new
	one when the URI changes.

2000-10-17  Maciej Stachowiak  <mjs@eazel.com>

	Fixed bugzilla.eazel.com bugs 2222, 3177, 3468, 3650, 3788
	(some vestiges of wait_until_ready remain in the farther reaches
	of the UI).
	
	* libnautilus-extensions/nautilus-mime-actions.h,
	libnautilus-extensions/nautilus-mime-actions.c
	(nautilus_mime_actions_check_if_required_attributes_ready,
	nautilus_mime_actions_get_required_file_attributes,
	nautilus_mime_actions_wait_for_required_file_attributes): New
	functions to help with monitoring or waiting for required
	attributes for the nautilus mime API.
	(nautilus_mime_get_default_action_type_for_file,
	nautilus_mime_get_default_action_for_file,
	nautilus_mime_get_default_application_for_file_internal,
	nautilus_mime_get_default_application_for_file,
	nautilus_mime_is_default_application_for_file_user_chosen,
	nautilus_mime_get_default_component_for_file_internal,
	nautilus_mime_get_default_component_for_file,
	nautilus_mime_is_default_component_for_file_user_chosen,
	nautilus_mime_get_short_list_applications_for_file,
	nautilus_mime_get_short_list_components_for_file,
	nautilus_mime_get_short_list_methods_for_file,
	nautilus_mime_get_all_applications_for_file,
	nautilus_mime_has_any_applications_for_file,
	nautilus_mime_get_all_components_for_file,
	nautilus_mime_has_any_components_for_file,
	nautilus_mime_set_default_action_type_for_file,
	nautilus_mime_set_default_application_for_file,
	nautilus_mime_set_default_component_for_file,
	nautilus_mime_set_short_list_applications_for_file,
	nautilus_mime_set_short_list_components_for_file,
	nautilus_mime_add_application_to_short_list_for_file,
	nautilus_mime_remove_application_from_short_list_for_file,
	nautilus_mime_add_component_to_short_list_for_file,
	nautilus_mime_remove_component_from_short_list_for_file,
	nautilus_mime_extend_all_applications_for_file,
	nautilus_mime_remove_from_all_applications_for_file,
	mime_type_get_supertype): Don't `nautilus_file_wait_until_ready'
	for the required attributes; instead assert (Well, return_if_fail)
	that they are available using
	`nautilus_file_check_if_ready'. Also, use
	`nautilus_file_get_uri_scheme' where possible.

	* libnautilus-extensions/nautilus-directory-async.c
	(mime_list_callback): Correct some coding mistakes.

	* libnautilus-extensions/nautilus-wait-until-ready.h,
	libnautilus-extensions/nautilus-directory.c: Remove
	`nautilus_directory_wait_until_ready'.

	* libnautilus-extensions/nautilus-file.h,
	libnautilus-extensions/nautilus-file.c
	(nautilus_file_get_uri_scheme): new convenience function.
	
	* libnautilus-extensions/nautilus-program-chooser.c:
	(repopulate_program_list, is_application_default_for_file,
	is_component_default_for_file,
	is_component_in_short_list_for_file,
	is_application_in_short_list_for_file,
	program_file_pair_is_default_for_file,
	program_file_pair_is_in_short_list_for_file,
	add_to_short_list_for_file, remove_from_short_list_for_file,
	remove_default_for_item, set_default_for_item): wait_until_ready
	for required file attributes.

	* libnautilus-extensions/nautilus-program-choosing.c:
	(any_programs_available_for_file): wait_until_ready for required
	file attributes.

	* src/file-manager/fm-directory-view.c: (switch_location_and_view,
	create_open_with_gtk_menu, reset_bonobo_open_with_menu,
	activate_callback): Wait for the right file attributes.

	* src/nautilus-applicable-views.c: (got_file_info_callback),
	(nautilus_navigation_info_new): Wait for the right file
	attributes. (no wait_until_ready).
	
	* src/nautilus-sidebar.c: (nautilus_sidebar_destroy,
	nautilus_sidebar_update_buttons, nautilus_sidebar_update_all),
	nautilus_sidebar_set_uri): Monitor the file the sidebar is
	displaying, and update when it's attributes change.
	
	* src/nautilus-window-manage-views.c
	(nautilus_window_set_content_view): Wait for the right file
	attributes. (no wait_until_ready).

	* src/nautilus-window.c: (nautilus_window_destroy,
	view_menu_choose_view_callback, view_menu_vfs_method_callback,
	nautilus_window_real_load_content_view_menu,
	nautilus_window_load_content_view_menu): Wait for the right
	attributes. (no wait_until_ready in this chain).
	
	* test/test-nautilus-mime-actions-set.c (main): Wait for the right attributes.
	* test/test-nautilus-mime-actions.c (main): Wait for the right attributes.

2000-10-18  Darin Adler  <darin@eazel.com>

	* components/notes/nautilus-notes.c: (make_notes_view):
	* src/nautilus-location-bar.c: (nautilus_location_bar_new):
	* src/nautilus-simple-search-bar.c:
	(nautilus_simple_search_bar_new):
	Use calls by new names.
	
	* libnautilus-extensions/nautilus-undo-signal-handlers.c:
	(editable_key_press_event), (nautilus_undo_editable_set_undo_key):
	Disabled the undo-key part of undo also. The old code was actually
	harmless because it got the name of the signal wrong, but it's
	better to have it disabled.
	* src/nautilus-shell-ui.xml: Added a comment that points out the
	2nd place where undo has been disabled.
	
	* libnautilus/nautilus-clipboard.h:
	* libnautilus/nautilus-clipboard.c: (cut_callback),
	(copy_callback), (paste_callback), (clear_callback),
	(set_paste_sensitive_if_clipboard_contains_data),
	(focus_changed_callback), (target_destroy_callback),
	(nautilus_clipboard_set_up_editable), (first_focus_callback),
	(control_destroyed_callback),
	(nautilus_clipboard_set_up_editable_in_control),
	(disconnect_set_up_in_control_handlers):
	Some minor cleanup of the clipboard code. Includes bug fixes for
	items that are already in focus when the clipboard is hooked up
	(should never happen), and a fix for code that was using
	gtk_signal_disconnect on something that was connected with
	gtk_signal_connect_while_alive (doesn't work). Also got rid of
	misguided code that was copying a Bonobo_UIContainer with memcpy
	(since Bonobo_UIContainer is just a pointer).
	
	* src/Makefile.am:
	* src/nautilus-window-private.h:
	Changed source file name from nautilus-service-menu to
	nautilus-service-ui, since it does a toolbar item, not just a
	menu.
	
	* src/nautilus-window-service-ui.c:
	* src/nautilus-window-service-ui.h:
	A second cut at the service UI code. It no longer leaks a UI
	component.

	* src/nautilus-window.c: (nautilus_window_constructed),
	(nautilus_window_get_ui_container): Use our own pointer to the UI
	container instead of asking the shell UI for its container.

2000-10-18  John Sullivan  <sullivan@eazel.com>

	Fixed bug 3862 (Icon view reversed after looking at list view)
	Fixed bug 916 (workaround for Bonobo radio item bug)
	Also fixed bug where the "tighter layout" and "reversed order"
	items in the context menu were doing nothing at all.

	* src/file-manager/fm-icon-view.c: 
	Removed "updating_toggle_menu_item" from Details struct.
	(set_tighter_layout): New helper function, handles the code
	common to the Bonobo and GTK menu callbacks.
	(gtk_tighter_layout_callback), (gtk_sort_reversed_callback),
	New functions used for GTK context menu. Will go away when 
	we use Bonobo for context menus.
	(tighter_layout_state_changed_callback),
	(sort_reversed_state_changed_callback): Use passed state value,
	including checking for empty state (empty state happens when
	component is removed from container). This lets us eliminate the
	checks for "updating_toggle_item".	
	(handle_radio_item): Removed check for updating_toggle_menu_item.
	This already worked correctly without this check.
	(insert_one_context_menu_item),	(append_one_context_menu_item),
	(append_one_toggle_context_menu_item): Tweaked these to pass in
	an initial toggle state for toggle menu items, to avoid setting
	the toggle state after the callback has been attached. All this
	code will be removed when we switch to Bonobo for context menus.
	(fm_icon_view_create_selection_context_menu_items),
	(fm_icon_view_create_background_context_menu_items),
	(update_layout_menus):

2000-10-18  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-preferences-item.c:
	(preferences_item_create_font_family):
	Remove the fixed font from the list of available fonts.  Its a bad
	one to use because it crashes the SideBar sometimes.  The problem
	is that the fixed font doesnt support the "find the largest
	fitting font" game that the SideBar plays for long strings.

	Its kinda lame to fix the bug by yanking the font, but we have
	many font improvements planned for after PR2 which will render
	this issue irrelevant.

	Fixes bug 2256.
	
2000-10-18  Ramiro Estrugo  <ramiro@eazel.com>

	* librsvg/rsvg-ft.c: (rsvg_ft_measure_or_render_string),
	(rsvg_ft_render_string), (rsvg_ft_measure_string):
	* librsvg/rsvg-ft.h:
	Add new function to only measure a string without doing all the
	rendering work.
	
	* libnautilus-extensions/nautilus-scalable-font.c:
	(nautilus_scalable_font_measure_text):
	Use the new rsvg_ft string measuring api.

	Fixes bug 2544.
	
2000-10-18  Ramiro Estrugo  <ramiro@eazel.com>

	* libnautilus-extensions/nautilus-font-factory.c:
	(font_hash_node_lookup_with_insertion),
	(nautilus_font_factory_get_fallback_font):
	* libnautilus-extensions/nautilus-gdk-extensions.c:
	(nautilus_get_largest_fitting_font), (nautilus_gdk_font_get_bold):
	* libnautilus-extensions/nautilus-gtk-extensions.c:
	(nautilus_gtk_widget_set_font_by_name):
	* libnautilus-extensions/nautilus-icon-factory.c: (embed_text):
	* src/nautilus-zoom-control.c: (draw_number):
	Use gdk_fontset_load() instead of gdk_font_load() to make i18n
	work better.  Also marked some hard-coded fonts fot localization.
	There is still an open bug on writing useful comments about these
	for the localizers.  Fixes bugs 3143 and 3144.

	Thanks to Yukihiro Nakai <ynakai@redhat.com> for pointing these
	problems out and providing patches to fix them.
	
	* src/nautilus-profiler.c: (window_print_button_callback),
	(window_save_button_callback), (dump_dialog_new),
	(dump_dialog_show):
	Same as above plus mark some strings for localization and add
	assertions to currently unimplemented functions.
	
2000-10-18  Maciej Stachowiak  <mjs@eazel.com>

	* ChangeLog: rolled over to ChangeLog-20001018.

